/* grainc-flags --compilation-mode=runtime */
module WasmF32

// WebAssembly Memory Instructions
provide primitive load: (WasmI32, WasmI32) -> WasmF32 = "@wasm.load_float32"
provide primitive store: (
  WasmI32,
  WasmF32,
  WasmI32,
) -> Void = "@wasm.store_float32"

// WebAssembly Unary Instructions
provide primitive neg: WasmF32 -> WasmF32 = "@wasm.neg_float32"
provide primitive abs: WasmF32 -> WasmF32 = "@wasm.abs_float32"
provide primitive ceil: WasmF32 -> WasmF32 = "@wasm.ceil_float32"
provide primitive floor: WasmF32 -> WasmF32 = "@wasm.floor_float32"
provide primitive trunc: WasmF32 -> WasmF32 = "@wasm.trunc_float32"
provide primitive nearest: WasmF32 -> WasmF32 = "@wasm.nearest_float32"
provide primitive sqrt: WasmF32 -> WasmF32 = "@wasm.sqrt_float32"

// WebAssembly Binary Instructions
provide primitive add: (WasmF32, WasmF32) -> WasmF32 = "@wasm.add_float32"
provide primitive sub: (WasmF32, WasmF32) -> WasmF32 = "@wasm.sub_float32"
provide primitive mul: (WasmF32, WasmF32) -> WasmF32 = "@wasm.mul_float32"
provide primitive div: (WasmF32, WasmF32) -> WasmF32 = "@wasm.div_float32"
provide primitive copySign: (
  WasmF32,
  WasmF32,
) -> WasmF32 = "@wasm.copy_sign_float32"
provide primitive min: (WasmF32, WasmF32) -> WasmF32 = "@wasm.min_float32"
provide primitive max: (WasmF32, WasmF32) -> WasmF32 = "@wasm.max_float32"
provide primitive eq: (WasmF32, WasmF32) -> Bool = "@wasm.eq_float32"
provide primitive ne: (WasmF32, WasmF32) -> Bool = "@wasm.ne_float32"
provide primitive lt: (WasmF32, WasmF32) -> Bool = "@wasm.lt_float32"
provide primitive le: (WasmF32, WasmF32) -> Bool = "@wasm.le_float32"
provide primitive gt: (WasmF32, WasmF32) -> Bool = "@wasm.gt_float32"
provide primitive ge: (WasmF32, WasmF32) -> Bool = "@wasm.ge_float32"

// WebAssembly Conversion instructions
provide primitive reinterpretI32: WasmI32 -> WasmF32 = "@wasm.reinterpret_int32"
provide primitive convertI32S: WasmI32 -> WasmF32 = "@wasm.convert_s_int32_to_float32"
provide primitive convertI32U: WasmI32 -> WasmF32 = "@wasm.convert_u_int32_to_float32"
provide primitive convertI64S: WasmI64 -> WasmF32 = "@wasm.convert_s_int64_to_float32"
provide primitive convertI64U: WasmI64 -> WasmF32 = "@wasm.convert_u_int64_to_float32"
provide primitive demoteF64: WasmF64 -> WasmF32 = "@wasm.demote_float64"
