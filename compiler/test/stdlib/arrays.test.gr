import Array from 'arrays'

let arr = [> 1, 2, 3]

# Array.get

assert Array.get(arr, 1) == 2
assert Array.get(arr, -1) == 3
assert Array.get(arr, -2) == 2
assert Array.get(arr, 0) == 1

# Array.set

let arr = [> 1, 2]

Array.set(arr, 0, 5)
assert arr[0] == 5
Array.set(arr, -1, 5)
assert arr[1] == 5

# Array.append

let arr1 = [> 1, 2]
let arr2 = [> 3, 4, 5]

assert equal(Array.append(arr1, arr2), [> 1, 2, 3, 4, 5])
assert equal(Array.append([>], [>]), [>])
assert equal(Array.append(arr1, [>]), arr1)
assert equal(Array.append([>], arr1), arr1)

# Array.concat

let arr1 = [> 1, 2]
let arr2 = [>]
let arr3 = [> 3, 4, 5]
let arr4 = [> 6, 7, 8, 9]

assert equal(Array.concat([]), [>])
assert equal(Array.concat([[>]]), [>])
assert equal(Array.concat([[>], [>]]), [>])
assert equal(Array.concat([arr3]), [> 3, 4, 5])
assert equal(Array.concat([arr1, arr2, arr3, arr4]), [> 1, 2, 3, 4, 5, 6, 7, 8, 9])

# Array.copy

let arr1 = [>]
let arr2 = [> 1, 2]

assert equal(Array.copy(arr1), arr1)
assert !(Array.copy(arr1) == arr1)

assert equal(Array.copy(arr2), arr2)
assert !(Array.copy(arr2) == arr2)

# Array.forEach

let arr1 = [> 1, 2, 3]
let sum = box(0)

let sentinel = (_n) => {
  sum := 42
}

Array.forEach([>], sentinel)

assert unbox(sum) == 0

let addToSum = (n) => {
  sum := unbox(sum) + n
}

Array.forEach(arr1, addToSum)

assert unbox(sum) == 6

# Array.forEachi

let arr1 = [> 1, 2, 3]
let sum = box(0)

let sentinel = (_n, _i) => {
  sum := 42
}

Array.forEachi([>], sentinel)

assert unbox(sum) == 0

let addToSum = (n, i) => {
  sum := unbox(sum) + (n * i)
}

Array.forEachi(arr1, addToSum)

assert unbox(sum) == 8

# Array.toList

assert equal(Array.toList([>]), [])
assert equal(Array.toList([> 1, 2, 3]), [1, 2, 3])

# Array.fromList

assert equal(Array.fromList([]), [>])
assert equal(Array.fromList([1, 2, 3]), [> 1, 2, 3])
