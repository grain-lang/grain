module Aliases

type Foo = String

type Foo = String // Test comment

type Foo<a> = String

type Foo<a, b> = String

type Foo1<a, b> = String // Test comment

type Foo2< // Test comment
  a,
  b
> = String

type AReallyReallyReallyReallyReallyReallyReallyReallyReallyLongLineBreakingType<
  a,
  b
> = String

type AReallyReallyReallyReallyReallyReallyReallyReallyReallyLongLineBreakingType<
  a, // Test comment
  b
> = String

type Foo3<
  a, // Test comment
  b
> = String

type Foo4<a /* Test comment */, b> = String

// Test comment
type Foo5 = String

/* Test comment */ type Foo = String

type Foo = String // Test comment

type Foo<
  a,
  b,
  c,
  d,
  e,
  f,
  g,
  h,
  i,
  j,
  k,
  l,
  m,
  n,
  o,
  p,
  q,
  r,
  s,
  t,
  u,
  v,
  x,
  y,
  z,
  aa,
  ab,
  ac,
  ad,
  ae,
  af,
  ag,
  ah,
  ai
> = String

type Bar<
  a,
  b,
  c,
  d,
  e,
  f,
  g,
  h,
  i,
  j,
  k,
  l,
  m,
  n,
  o,
  p,
  q,
  r,
  s,
  t,
  u,
  v,
  x,
  y,
  z,
  aa,
  ab,
  ac,
  ad,
  ae,
  af,
  ag,
  ah,
  ai
> = Foo<
  a,
  b,
  c,
  d,
  e,
  f,
  g,
  h,
  i,
  j,
  k,
  l,
  m,
  n,
  o,
  p,
  q,
  r,
  s,
  t,
  u,
  v,
  x,
  y,
  z,
  aa,
  ab,
  ac,
  ad,
  ae,
  af,
  ag,
  ah,
  ai
>

type Foo< // opener
  a, /* Test comment */
  b /* second test comment */
> = String //trailer

type Foo2 =
  VeryVeryLongVeryVeryLongVeryVeryLongVeryVeryLongVeryVeryLongVeryVeryLongVeryVeryLongVeryVeryLongVeryVeryLong // comment
