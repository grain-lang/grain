import Memory from "runtime/unsafe/memory"
import Tags from "runtime/unsafe/tags"
import { length, map } from "list"

import WasmI32, {
  add as (+),
  mul as (*),
  xor as (^),
  shl as (<<)
} from "runtime/unsafe/wasmi32"

export foreign wasm storage_read: (
  WasmI64,
  WasmI64,
  WasmI64
) -> WasmI64 as storageRead from "env"

import WasmI32, {
  eq, // comment1
  // comment 3
  and as (&), // comment 2
  or as (|)
  // no signed imports, as care should be taken to use signed or unsigned operators
} from "runtime/unsafe/wasmi32"

import * except {
  eq, // comment
  and
  // just because
} from "runtime/unsafe/wasmi32"

export foreign wasm promise_results_count: () -> WasmI64 as promiseResultsCount from "env"
