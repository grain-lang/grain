pattern matching â€º constant_match_1
(module
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (import \"_grainEnv\" \"mem\" (memory $0 0))
 (import \"_grainEnv\" \"relocBase\" (global $wimport__grainEnv_relocBase i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef (mut i32)))
 (import \"GRAIN$MODULE$runtime/dataStructures\" \"GRAIN$EXPORT$newRational\" (global $wimport_GRAIN$MODULE$runtime/dataStructures_GRAIN$EXPORT$newRational (mut i32)))
 (import \"GRAIN$MODULE$runtime/equal\" \"GRAIN$EXPORT$equal\" (global $wimport_GRAIN$MODULE$runtime/equal_GRAIN$EXPORT$equal (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $wimport_GRAIN$MODULE$runtime/gc_incRef (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/dataStructures\" \"newRational\" (func $wimport_GRAIN$MODULE$runtime/dataStructures_newRational (param i32 i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/equal\" \"equal\" (func $wimport_GRAIN$MODULE$runtime/equal_equal (param i32 i32 i32) (result i32)))
 (global $global_1 i32 (i32.const 0))
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $global_1))
 (func $_gmain (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (tuple.extract 0
   (tuple.make
    (block (result i32)
     (local.set $0
      (tuple.extract 0
       (tuple.make
        (call $wimport_GRAIN$MODULE$runtime/dataStructures_newRational
         (global.get $wimport_GRAIN$MODULE$runtime/dataStructures_GRAIN$EXPORT$newRational)
         (i32.const 1)
         (i32.const 3)
        )
        (i32.const 0)
       )
      )
     )
     (block $switch.15_outer (result i32)
      (drop
       (block $switch.15_branch_1 (result i32)
        (drop
         (block $switch.15_branch_2 (result i32)
          (drop
           (block $switch.15_branch_3 (result i32)
            (drop
             (block $switch.15_default (result i32)
              (br_table $switch.15_branch_1 $switch.15_branch_2 $switch.15_branch_3 $switch.15_default
               (i32.const 0)
               (i32.shr_s
                (tuple.extract 0
                 (tuple.make
                  (if (result i32)
                   (i32.shr_u
                    (tuple.extract 0
                     (tuple.make
                      (call $wimport_GRAIN$MODULE$runtime/equal_equal
                       (call $wimport_GRAIN$MODULE$runtime/gc_incRef
                        (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
                        (global.get $wimport_GRAIN$MODULE$runtime/equal_GRAIN$EXPORT$equal)
                       )
                       (local.get $0)
                       (i32.const 11)
                      )
                      (i32.const 0)
                     )
                    )
                    (i32.const 31)
                   )
                   (i32.const 1)
                   (block (result i32)
                    (local.set $1
                     (tuple.extract 0
                      (tuple.make
                       (call $wimport_GRAIN$MODULE$runtime/dataStructures_newRational
                        (global.get $wimport_GRAIN$MODULE$runtime/dataStructures_GRAIN$EXPORT$newRational)
                        (i32.const 1)
                        (i32.const 3)
                       )
                       (i32.const 0)
                      )
                     )
                    )
                    (select
                     (i32.const 3)
                     (i32.const 5)
                     (i32.shr_u
                      (tuple.extract 0
                       (tuple.make
                        (call $wimport_GRAIN$MODULE$runtime/equal_equal
                         (call $wimport_GRAIN$MODULE$runtime/gc_incRef
                          (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
                          (global.get $wimport_GRAIN$MODULE$runtime/equal_GRAIN$EXPORT$equal)
                         )
                         (local.get $0)
                         (local.get $1)
                        )
                        (i32.const 0)
                       )
                      )
                      (i32.const 31)
                     )
                    )
                   )
                  )
                  (local.get $1)
                 )
                )
                (i32.const 1)
               )
              )
             )
            )
            (unreachable)
           )
          )
          (br $switch.15_outer
           (i32.const 2147483646)
          )
         )
        )
        (br $switch.15_outer
         (i32.const -2)
        )
       )
      )
      (i32.const 2147483646)
     )
    )
    (i32.const 0)
   )
  )
 )
 (func $_start (; has Stack IR ;)
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 248
)
