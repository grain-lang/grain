pattern matching â€º guarded_match_3
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $none_=>_i32 (func (result i32)))
 (import \"_grainEnv\" \"mem\" (memory $0 0))
 (import \"_grainEnv\" \"tbl\" (table $tbl 0 funcref))
 (import \"_grainEnv\" \"relocBase\" (global $wimport__grainEnv_relocBase i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$malloc (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef (mut i32)))
 (import \"GRAIN$MODULE$pervasives\" \"GRAIN$EXPORT$==\" (global $gimport_pervasives_== (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $wimport_GRAIN$MODULE$runtime/gc_malloc (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $wimport_GRAIN$MODULE$runtime/gc_incRef (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $wimport_GRAIN$MODULE$runtime/gc_decRef (param i32 i32) (result i32)))
 (global $global_1 i32 (i32.const 0))
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $global_1))
 (func $_gmain (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $0
   (tuple.extract 0
    (tuple.make
     (block (result i32)
      (local.set $1
       (tuple.extract 0
        (tuple.make
         (block (result i32)
          (i32.store
           (local.tee $0
            (tuple.extract 0
             (tuple.make
              (call $wimport_GRAIN$MODULE$runtime/gc_malloc
               (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$malloc)
               (i32.const 20)
              )
              (i32.const 0)
             )
            )
           )
           (i32.const 8)
          )
          (i32.store offset=4
           (local.get $0)
           (i32.const 3)
          )
          (i32.store offset=8
           (local.get $0)
           (i32.const 5)
          )
          (i32.store offset=12
           (local.get $0)
           (i32.const 5)
          )
          (i32.store offset=16
           (local.get $0)
           (i32.const 7)
          )
          (local.get $0)
         )
         (call $wimport_GRAIN$MODULE$runtime/gc_decRef
          (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
          (i32.const 0)
         )
        )
       )
      )
      (local.set $3
       (tuple.extract 0
        (tuple.make
         (call $wimport_GRAIN$MODULE$runtime/gc_incRef
          (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
          (i32.load offset=16
           (local.get $1)
          )
         )
         (call $wimport_GRAIN$MODULE$runtime/gc_decRef
          (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
          (i32.const 0)
         )
        )
       )
      )
      (local.set $4
       (tuple.extract 0
        (tuple.make
         (call $wimport_GRAIN$MODULE$runtime/gc_incRef
          (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
          (i32.load offset=8
           (local.get $1)
          )
         )
         (call $wimport_GRAIN$MODULE$runtime/gc_decRef
          (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
          (i32.const 0)
         )
        )
       )
      )
      (local.set $2
       (tuple.extract 0
        (tuple.make
         (call_indirect (type $i32_i32_i32_=>_i32)
          (local.tee $0
           (tuple.extract 0
            (tuple.make
             (call $wimport_GRAIN$MODULE$runtime/gc_incRef
              (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
              (global.get $gimport_pervasives_==)
             )
             (local.get $0)
            )
           )
          )
          (call $wimport_GRAIN$MODULE$runtime/gc_incRef
           (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
           (local.get $4)
          )
          (i32.const 5)
          (i32.load offset=8
           (local.get $0)
          )
         )
         (call $wimport_GRAIN$MODULE$runtime/gc_decRef
          (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
          (i32.const 0)
         )
        )
       )
      )
      (local.set $5
       (tuple.extract 0
        (tuple.make
         (if (result i32)
          (i32.shr_u
           (call $wimport_GRAIN$MODULE$runtime/gc_incRef
            (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
            (local.get $2)
           )
           (i32.const 31)
          )
          (call_indirect (type $i32_i32_i32_=>_i32)
           (local.tee $0
            (tuple.extract 0
             (tuple.make
              (call $wimport_GRAIN$MODULE$runtime/gc_incRef
               (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
               (global.get $gimport_pervasives_==)
              )
              (local.get $0)
             )
            )
           )
           (call $wimport_GRAIN$MODULE$runtime/gc_incRef
            (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
            (local.get $3)
           )
           (i32.const 7)
           (i32.load offset=8
            (local.get $0)
           )
          )
          (call $wimport_GRAIN$MODULE$runtime/gc_incRef
           (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
           (local.get $2)
          )
         )
         (call $wimport_GRAIN$MODULE$runtime/gc_decRef
          (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
          (i32.const 0)
         )
        )
       )
      )
      (local.set $6
       (tuple.extract 0
        (tuple.make
         (select
          (i32.const 1)
          (i32.const 3)
          (i32.shr_u
           (call $wimport_GRAIN$MODULE$runtime/gc_incRef
            (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
            (local.get $5)
           )
           (i32.const 31)
          )
         )
         (call $wimport_GRAIN$MODULE$runtime/gc_decRef
          (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
          (i32.const 0)
         )
        )
       )
      )
      (block $switch.20_outer (result i32)
       (drop
        (block $switch.20_branch_1 (result i32)
         (drop
          (block $switch.20_branch_2 (result i32)
           (drop
            (block $switch.20_default (result i32)
             (br_table $switch.20_branch_1 $switch.20_branch_2 $switch.20_default
              (i32.const 0)
              (i32.shr_s
               (call $wimport_GRAIN$MODULE$runtime/gc_incRef
                (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
                (local.get $6)
               )
               (i32.const 1)
              )
             )
            )
           )
           (unreachable)
          )
         )
         (br $switch.20_outer
          (i32.const 199)
         )
        )
       )
       (i32.const 85)
      )
     )
     (local.get $0)
    )
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $1)
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $3)
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $4)
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $2)
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $5)
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $6)
   )
  )
  (local.get $0)
 )
 (func $_start (; has Stack IR ;)
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 247
)
