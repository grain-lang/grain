functions â€º lam_destructure_5
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (import \"_genv\" \"tbl\" (table $tbl 0 funcref))
 (import \"_genv\" \"relocBase\" (global $relocBase_0 i32))
 (import \"_genv\" \"moduleRuntimeId\" (global $moduleRuntimeId_0 i32))
 (import \"_genv\" \"runtimeHeapStart\" (global $runtimeHeapStart_0 i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $GRAIN$EXPORT$malloc_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $GRAIN$EXPORT$incRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $GRAIN$EXPORT$decRef_0 (mut i32)))
 (import \"GRAIN$MODULE$pervasives\" \"GRAIN$EXPORT$+\" (global $+_1119 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $malloc_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $incRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $decRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$pervasives\" \"+\" (func $+_1119 (param i32 i32 i32) (result i32)))
 (global $GRAIN$TABLE_SIZE i32 (i32.const 0))
 (memory $0 0)
 (elem $elem (global.get $relocBase_0))
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $GRAIN$TABLE_SIZE))
 (func $lam_lambda_1118 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 f32)
  (local $8 f64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (block $compile_block.35
   (block $compile_store.2
    (local.set $9
     (i32.const 0)
    )
    (block $do_backpatches.1
    )
   )
   (block $compile_store.4
    (local.set $10
     (i32.const 0)
    )
    (block $do_backpatches.3
    )
   )
   (block $compile_store.6
    (local.set $11
     (i32.const 0)
    )
    (block $do_backpatches.5
    )
   )
   (block $compile_store.8
    (local.set $12
     (call $incRef_0
      (global.get $GRAIN$EXPORT$incRef_0)
      (i32.load offset=8
       (local.get $1)
      )
     )
    )
    (block $do_backpatches.7
    )
   )
   (block $compile_store.10
    (local.set $13
     (call $incRef_0
      (global.get $GRAIN$EXPORT$incRef_0)
      (i32.load offset=12
       (local.get $1)
      )
     )
    )
    (block $do_backpatches.9
    )
   )
   (block $compile_store.12
    (local.set $14
     (call $incRef_0
      (global.get $GRAIN$EXPORT$incRef_0)
      (i32.load offset=16
       (local.get $1)
      )
     )
    )
    (block $do_backpatches.11
    )
   )
   (block $cleanup.13
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $1)
     )
    )
   )
   (drop
    (block $compile_set.14 (result i32)
     (local.set $11
      (tuple.extract 0
       (tuple.make
        (call $incRef_0
         (global.get $GRAIN$EXPORT$incRef_0)
         (local.get $14)
        )
        (call $decRef_0
         (global.get $GRAIN$EXPORT$decRef_0)
         (local.get $11)
        )
       )
      )
     )
     (i32.const 1879048190)
    )
   )
   (drop
    (block $compile_set.15 (result i32)
     (local.set $10
      (tuple.extract 0
       (tuple.make
        (call $incRef_0
         (global.get $GRAIN$EXPORT$incRef_0)
         (local.get $13)
        )
        (call $decRef_0
         (global.get $GRAIN$EXPORT$decRef_0)
         (local.get $10)
        )
       )
      )
     )
     (i32.const 1879048190)
    )
   )
   (drop
    (block $compile_set.16 (result i32)
     (local.set $9
      (tuple.extract 0
       (tuple.make
        (call $incRef_0
         (global.get $GRAIN$EXPORT$incRef_0)
         (local.get $12)
        )
        (call $decRef_0
         (global.get $GRAIN$EXPORT$decRef_0)
         (local.get $9)
        )
       )
      )
     )
     (i32.const 1879048190)
    )
   )
   (block $compile_store.18
    (local.set $15
     (i32.const 0)
    )
    (block $do_backpatches.17
    )
   )
   (block $compile_store.20
    (local.set $16
     (i32.const 0)
    )
    (block $do_backpatches.19
    )
   )
   (block $compile_store.22
    (local.set $17
     (call $incRef_0
      (global.get $GRAIN$EXPORT$incRef_0)
      (i32.load offset=8
       (local.get $2)
      )
     )
    )
    (block $do_backpatches.21
    )
   )
   (block $compile_store.24
    (local.set $18
     (call $incRef_0
      (global.get $GRAIN$EXPORT$incRef_0)
      (i32.load offset=12
       (local.get $2)
      )
     )
    )
    (block $do_backpatches.23
    )
   )
   (block $cleanup.25
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $2)
     )
    )
   )
   (drop
    (block $compile_set.26 (result i32)
     (local.set $16
      (tuple.extract 0
       (tuple.make
        (call $incRef_0
         (global.get $GRAIN$EXPORT$incRef_0)
         (local.get $18)
        )
        (call $decRef_0
         (global.get $GRAIN$EXPORT$decRef_0)
         (local.get $16)
        )
       )
      )
     )
     (i32.const 1879048190)
    )
   )
   (drop
    (block $compile_set.27 (result i32)
     (local.set $15
      (tuple.extract 0
       (tuple.make
        (call $incRef_0
         (global.get $GRAIN$EXPORT$incRef_0)
         (local.get $17)
        )
        (call $decRef_0
         (global.get $GRAIN$EXPORT$decRef_0)
         (local.get $15)
        )
       )
      )
     )
     (i32.const 1879048190)
    )
   )
   (block $compile_store.29
    (local.set $19
     (call $+_1119
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (global.get $+_1119)
      )
      (local.get $9)
      (local.get $10)
     )
    )
    (block $do_backpatches.28
    )
   )
   (block $compile_store.31
    (local.set $20
     (call $+_1119
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (global.get $+_1119)
      )
      (local.get $19)
      (local.get $11)
     )
    )
    (block $do_backpatches.30
    )
   )
   (block $compile_store.33
    (local.set $21
     (call $+_1119
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (global.get $+_1119)
      )
      (local.get $20)
      (local.get $15)
     )
    )
    (block $do_backpatches.32
    )
   )
   (block $cleanup.34
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $0)
     )
    )
   )
   (return_call $+_1119
    (call $incRef_0
     (global.get $GRAIN$EXPORT$incRef_0)
     (global.get $+_1119)
    )
    (local.get $21)
    (local.get $16)
   )
  )
 )
 (func $_gmain (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 f32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (block $compile_block.44
   (block $compile_store.37
    (local.set $6
     (i32.const 0)
    )
    (block $do_backpatches.36
    )
   )
   (block $compile_store.40
    (local.set $7
     (block $allocate_tuple.38 (result i32)
      (i32.store
       (local.tee $0
        (call $malloc_0
         (global.get $GRAIN$EXPORT$malloc_0)
         (i32.const 20)
        )
       )
       (i32.const 7)
      )
      (i32.store offset=4
       (local.get $0)
       (i32.const 3)
      )
      (i32.store offset=8
       (local.get $0)
       (i32.const 3)
      )
      (i32.store offset=12
       (local.get $0)
       (i32.const 5)
      )
      (i32.store offset=16
       (local.get $0)
       (i32.const 7)
      )
      (local.get $0)
     )
    )
    (block $do_backpatches.39
    )
   )
   (block $compile_store.43
    (local.set $8
     (block $allocate_tuple.41 (result i32)
      (i32.store
       (local.tee $0
        (call $malloc_0
         (global.get $GRAIN$EXPORT$malloc_0)
         (i32.const 16)
        )
       )
       (i32.const 7)
      )
      (i32.store offset=4
       (local.get $0)
       (i32.const 2)
      )
      (i32.store offset=8
       (local.get $0)
       (i32.const 9)
      )
      (i32.store offset=12
       (local.get $0)
       (i32.const 11)
      )
      (local.get $0)
     )
    )
    (block $do_backpatches.42
    )
   )
   (return_call $lam_lambda_1118
    (local.get $6)
    (local.get $7)
    (local.get $8)
   )
  )
 )
 (func $_start
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 317
)
