basic functionality â€º if_one_sided3
(module
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (import \"_grainEnv\" \"mem\" (memory $0 0))
 (import \"_grainEnv\" \"relocBase\" (global $relocBase_0 i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $GRAIN$EXPORT$decRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $decRef_0 (param i32 i32) (result i32)))
 (global $x_1131 (mut i32) (i32.const 0))
 (global $GRAIN$TABLE_SIZE i32 (i32.const 0))
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $GRAIN$TABLE_SIZE))
 (func $_gmain (; has Stack IR ;) (result i32)
  (global.set $x_1131
   (tuple.extract 0
    (tuple.make
     (i32.const 3)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (global.get $x_1131)
     )
    )
   )
  )
  (global.set $x_1131
   (tuple.extract 0
    (tuple.make
     (i32.const 5)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (global.get $x_1131)
     )
    )
   )
  )
  (i32.const 1879048190)
 )
 (func $_start (; has Stack IR ;)
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 245
)
