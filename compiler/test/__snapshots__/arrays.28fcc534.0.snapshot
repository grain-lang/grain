arrays â€º array_access4
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (import \"_genv\" \"tbl\" (table $tbl 0 funcref))
 (import \"_genv\" \"relocBase\" (global $relocBase_0 i32))
 (import \"_genv\" \"moduleRuntimeId\" (global $moduleRuntimeId_0 i32))
 (import \"_genv\" \"runtimeHeapStart\" (global $runtimeHeapStart_0 i32))
 (import \"GRAIN$MODULE$runtime/exception\" \"GRAIN$EXPORT$panicWithException\" (global $GRAIN$EXPORT$panicWithException_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $GRAIN$EXPORT$malloc_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $GRAIN$EXPORT$incRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $malloc_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $incRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/exception\" \"panicWithException\" (func $panicWithException_0 (param i32 i32) (result i32)))
 (global $x_1113 (mut i32) (i32.const 0))
 (global $GRAIN$TABLE_SIZE i32 (i32.const 0))
 (memory $0 0)
 (elem $elem (global.get $relocBase_0))
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $GRAIN$TABLE_SIZE))
 (func $_gmain (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 f32)
  (local $5 f64)
  (block $compile_block.10 (result i32)
   (block $compile_store.3
    (global.set $x_1113
     (block $allocate_array.1 (result i32)
      (i32.store
       (local.tee $0
        (call $malloc_0
         (global.get $GRAIN$EXPORT$malloc_0)
         (i32.const 20)
        )
       )
       (i32.const 4)
      )
      (i32.store offset=4
       (local.get $0)
       (i32.const 3)
      )
      (i32.store offset=8
       (local.get $0)
       (i32.const 3)
      )
      (i32.store offset=12
       (local.get $0)
       (i32.const 5)
      )
      (i32.store offset=16
       (local.get $0)
       (i32.const 7)
      )
      (local.get $0)
     )
    )
    (block $do_backpatches.2
    )
   )
   (block $MArrayGet.9 (result i32)
    (local.set $1
     (i32.const -3)
    )
    (local.set $2
     (global.get $x_1113)
    )
    (block $resolve_idx.8
     (if
      (i32.eqz
       (i32.and
        (local.get $1)
        (i32.const 1)
       )
      )
      (block $IndexNotSimpleInteger.7
       (local.set $1
        (i32.load offset=4
         (local.get $1)
        )
       )
       (drop
        (if (result i32)
         (i32.or
          (i32.eq
           (local.get $1)
           (i32.const 2)
          )
          (i32.eq
           (local.get $1)
           (i32.const 4)
          )
         )
         (call $panicWithException_0
          (global.get $GRAIN$EXPORT$panicWithException_0)
          (block $allocate_adt.6 (result i32)
           (i32.store
            (local.tee $0
             (call $malloc_0
              (global.get $GRAIN$EXPORT$malloc_0)
              (i32.const 20)
             )
            )
            (i32.const 2)
           )
           (i32.store offset=4
            (local.get $0)
            (i32.const 1)
           )
           (i32.store offset=8
            (local.get $0)
            (i32.const 5)
           )
           (i32.store offset=12
            (local.get $0)
            (i32.const 67)
           )
           (i32.store offset=16
            (local.get $0)
            (i32.const 0)
           )
           (local.get $0)
          )
         )
         (call $panicWithException_0
          (global.get $GRAIN$EXPORT$panicWithException_0)
          (block $allocate_adt.5 (result i32)
           (i32.store
            (local.tee $0
             (call $malloc_0
              (global.get $GRAIN$EXPORT$malloc_0)
              (i32.const 20)
             )
            )
            (i32.const 2)
           )
           (i32.store offset=4
            (local.get $0)
            (i32.const 1)
           )
           (i32.store offset=8
            (local.get $0)
            (i32.const 5)
           )
           (i32.store offset=12
            (local.get $0)
            (i32.const 69)
           )
           (i32.store offset=16
            (local.get $0)
            (i32.const 0)
           )
           (local.get $0)
          )
         )
        )
       )
      )
     )
     (local.set $1
      (i32.shr_s
       (local.get $1)
       (i32.const 1)
      )
     )
     (if
      (i32.lt_s
       (local.get $1)
       (i32.const 0)
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.load offset=4
         (local.get $2)
        )
       )
      )
     )
     (if
      (i32.le_u
       (i32.load offset=4
        (local.get $2)
       )
       (local.get $1)
      )
      (drop
       (call $panicWithException_0
        (global.get $GRAIN$EXPORT$panicWithException_0)
        (block $allocate_adt.4 (result i32)
         (i32.store
          (local.tee $0
           (call $malloc_0
            (global.get $GRAIN$EXPORT$malloc_0)
            (i32.const 20)
           )
          )
          (i32.const 2)
         )
         (i32.store offset=4
          (local.get $0)
          (i32.const 1)
         )
         (i32.store offset=8
          (local.get $0)
          (i32.const 5)
         )
         (i32.store offset=12
          (local.get $0)
          (i32.const 67)
         )
         (i32.store offset=16
          (local.get $0)
          (i32.const 0)
         )
         (local.get $0)
        )
       )
      )
     )
    )
    (call $incRef_0
     (global.get $GRAIN$EXPORT$incRef_0)
     (i32.load offset=8
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
     )
    )
   )
  )
 )
 (func $_start
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 317
)
