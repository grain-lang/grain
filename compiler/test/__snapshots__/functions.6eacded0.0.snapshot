functions â€º func_recursive_closure
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (import \"_grainEnv\" \"mem\" (memory $0 0))
 (import \"_grainEnv\" \"tbl\" (table $tbl 0 funcref))
 (import \"_grainEnv\" \"relocBase\" (global $relocBase_0 i32))
 (import \"_grainEnv\" \"moduleRuntimeId\" (global $moduleRuntimeId_0 i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $GRAIN$EXPORT$malloc_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $GRAIN$EXPORT$incRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $GRAIN$EXPORT$decRef_0 (mut i32)))
 (import \"GRAIN$MODULE$pervasives\" \"GRAIN$EXPORT$-\" (global $-_1157 (mut i32)))
 (import \"GRAIN$MODULE$pervasives\" \"GRAIN$EXPORT$==\" (global $==_1152 (mut i32)))
 (import \"GRAIN$MODULE$pervasives\" \"GRAIN$EXPORT$+\" (global $+_1142 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $malloc_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $incRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $decRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$pervasives\" \"-\" (func $-_1157 (param i32 i32 i32) (result i32)))
 (import \"GRAIN$MODULE$pervasives\" \"==\" (func $==_1152 (param i32 i32 i32) (result i32)))
 (import \"GRAIN$MODULE$pervasives\" \"+\" (func $+_1142 (param i32 i32 i32) (result i32)))
 (global $truc_1134 (mut i32) (i32.const 0))
 (global $makeAdder_1131 (mut i32) (i32.const 0))
 (global $GRAIN$TABLE_SIZE i32 (i32.const 1))
 (elem $elem (global.get $relocBase_0) $func_1165)
 (export \"memory\" (memory $0))
 (export \"truc\" (func $truc_1134))
 (export \"GRAIN$EXPORT$truc\" (global $truc_1134))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $GRAIN$TABLE_SIZE))
 (func $makeAdder_1131 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 f32)
  (local $7 f64)
  (return
   (block $cleanup_locals.3 (result i32)
    (local.set $2
     (tuple.extract 0
      (tuple.make
       (block $compile_block.2 (result i32)
        (block $allocate_closure.1 (result i32)
         (i32.store
          (local.tee $2
           (call $malloc_0
            (global.get $GRAIN$EXPORT$malloc_0)
            (i32.const 20)
           )
          )
          (i32.const 6)
         )
         (i32.store offset=4
          (local.get $2)
          (i32.const 2)
         )
         (i32.store offset=8
          (local.get $2)
          (i32.add
           (global.get $relocBase_0)
           (i32.const 0)
          )
         )
         (i32.store offset=12
          (local.get $2)
          (i32.const 1)
         )
         (i32.store offset=16
          (local.get $2)
          (call $incRef_0
           (global.get $GRAIN$EXPORT$incRef_0)
           (local.get $1)
          )
         )
         (local.get $2)
        )
       )
       (local.get $2)
      )
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $0)
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $1)
     )
    )
    (local.get $2)
   )
  )
 )
 (func $truc_1134 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 f32)
  (local $6 f64)
  (local $7 i32)
  (return
   (block $cleanup_locals.8 (result i32)
    (local.set $1
     (tuple.extract 0
      (tuple.make
       (block $compile_block.7 (result i32)
        (block $compile_store.6
         (local.set $7
          (tuple.extract 0
           (tuple.make
            (block $allocate_closure.4 (result i32)
             (i32.store
              (local.tee $1
               (call $malloc_0
                (global.get $GRAIN$EXPORT$malloc_0)
                (i32.const 16)
               )
              )
              (i32.const 6)
             )
             (i32.store offset=4
              (local.get $1)
              (i32.const 2)
             )
             (i32.store offset=8
              (local.get $1)
              (i32.const -1)
             )
             (i32.store offset=12
              (local.get $1)
              (i32.const 0)
             )
             (local.get $1)
            )
            (call $decRef_0
             (global.get $GRAIN$EXPORT$decRef_0)
             (local.get $7)
            )
           )
          )
         )
         (block $do_backpatches.5
          (local.set $1
           (local.get $7)
          )
         )
        )
        (call $foo_1135
         (call $incRef_0
          (global.get $GRAIN$EXPORT$incRef_0)
          (local.get $7)
         )
         (i32.const 11)
        )
       )
       (local.get $1)
      )
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $0)
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $7)
     )
    )
    (local.get $1)
   )
  )
 )
 (func $func_1165 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 f32)
  (local $7 f64)
  (return
   (block $cleanup_locals.10 (result i32)
    (local.set $2
     (tuple.extract 0
      (tuple.make
       (block $compile_block.9 (result i32)
        (call $+_1142
         (call $incRef_0
          (global.get $GRAIN$EXPORT$incRef_0)
          (global.get $+_1142)
         )
         (call $incRef_0
          (global.get $GRAIN$EXPORT$incRef_0)
          (local.get $1)
         )
         (call $incRef_0
          (global.get $GRAIN$EXPORT$incRef_0)
          (i32.load offset=16
           (local.get $0)
          )
         )
        )
       )
       (local.get $2)
      )
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $0)
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $1)
     )
    )
    (local.get $2)
   )
  )
 )
 (func $foo_1135 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 f32)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (return
   (block $cleanup_locals.27 (result i32)
    (local.set $2
     (tuple.extract 0
      (tuple.make
       (block $compile_block.26 (result i32)
        (block $compile_store.12
         (local.set $8
          (tuple.extract 0
           (tuple.make
            (call $makeAdder_1131
             (call $incRef_0
              (global.get $GRAIN$EXPORT$incRef_0)
              (global.get $makeAdder_1131)
             )
             (i32.const 3)
            )
            (call $decRef_0
             (global.get $GRAIN$EXPORT$decRef_0)
             (local.get $8)
            )
           )
          )
         )
         (block $do_backpatches.11
         )
        )
        (block $compile_store.15
         (local.set $9
          (tuple.extract 0
           (tuple.make
            (block $allocate_closure.13 (result i32)
             (i32.store
              (local.tee $2
               (call $malloc_0
                (global.get $GRAIN$EXPORT$malloc_0)
                (i32.const 24)
               )
              )
              (i32.const 6)
             )
             (i32.store offset=4
              (local.get $2)
              (i32.const 2)
             )
             (i32.store offset=8
              (local.get $2)
              (i32.const -1)
             )
             (i32.store offset=12
              (local.get $2)
              (i32.const 2)
             )
             (local.get $2)
            )
            (call $decRef_0
             (global.get $GRAIN$EXPORT$decRef_0)
             (local.get $9)
            )
           )
          )
         )
         (block $do_backpatches.14
          (local.set $2
           (local.get $9)
          )
          (i32.store offset=16
           (local.get $2)
           (call $incRef_0
            (global.get $GRAIN$EXPORT$incRef_0)
            (local.get $0)
           )
          )
          (i32.store offset=20
           (local.get $2)
           (call $incRef_0
            (global.get $GRAIN$EXPORT$incRef_0)
            (local.get $8)
           )
          )
         )
        )
        (block $compile_store.17
         (local.set $11
          (call $==_1152
           (call $incRef_0
            (global.get $GRAIN$EXPORT$incRef_0)
            (global.get $==_1152)
           )
           (call $incRef_0
            (global.get $GRAIN$EXPORT$incRef_0)
            (local.get $1)
           )
           (i32.const 1)
          )
         )
         (block $do_backpatches.16
         )
        )
        (if (result i32)
         (i32.shr_u
          (local.get $11)
          (i32.const 31)
         )
         (block $compile_block.18 (result i32)
          (i32.const 1)
         )
         (block $compile_block.25 (result i32)
          (block $compile_store.20
           (local.set $12
            (call $==_1152
             (call $incRef_0
              (global.get $GRAIN$EXPORT$incRef_0)
              (global.get $==_1152)
             )
             (call $incRef_0
              (global.get $GRAIN$EXPORT$incRef_0)
              (local.get $1)
             )
             (i32.const 3)
            )
           )
           (block $do_backpatches.19
           )
          )
          (if (result i32)
           (i32.shr_u
            (local.get $12)
            (i32.const 31)
           )
           (block $compile_block.21 (result i32)
            (call $bar_1138
             (call $incRef_0
              (global.get $GRAIN$EXPORT$incRef_0)
              (local.get $9)
             )
             (i32.const 3)
            )
           )
           (block $compile_block.24 (result i32)
            (block $compile_store.23
             (local.set $10
              (tuple.extract 0
               (tuple.make
                (call $-_1157
                 (call $incRef_0
                  (global.get $GRAIN$EXPORT$incRef_0)
                  (global.get $-_1157)
                 )
                 (call $incRef_0
                  (global.get $GRAIN$EXPORT$incRef_0)
                  (local.get $1)
                 )
                 (i32.const 3)
                )
                (call $decRef_0
                 (global.get $GRAIN$EXPORT$decRef_0)
                 (local.get $10)
                )
               )
              )
             )
             (block $do_backpatches.22
             )
            )
            (call $foo_1135
             (call $incRef_0
              (global.get $GRAIN$EXPORT$incRef_0)
              (local.get $0)
             )
             (call $incRef_0
              (global.get $GRAIN$EXPORT$incRef_0)
              (local.get $10)
             )
            )
           )
          )
         )
        )
       )
       (local.get $2)
      )
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $0)
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $1)
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $8)
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $9)
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $10)
     )
    )
    (local.get $2)
   )
  )
 )
 (func $bar_1138 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 f32)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  (return
   (block $cleanup_locals.34 (result i32)
    (local.set $2
     (tuple.extract 0
      (tuple.make
       (block $compile_block.33 (result i32)
        (block $compile_store.29
         (local.set $8
          (tuple.extract 0
           (tuple.make
            (call $foo_1135
             (call $incRef_0
              (global.get $GRAIN$EXPORT$incRef_0)
              (i32.load offset=16
               (local.get $0)
              )
             )
             (i32.const 1)
            )
            (call $decRef_0
             (global.get $GRAIN$EXPORT$decRef_0)
             (local.get $8)
            )
           )
          )
         )
         (block $do_backpatches.28
         )
        )
        (block $compile_store.32
         (local.set $9
          (tuple.extract 0
           (tuple.make
            (block $call_lambda.30 (result i32)
             (local.set $2
              (call $incRef_0
               (global.get $GRAIN$EXPORT$incRef_0)
               (i32.load offset=20
                (local.get $0)
               )
              )
             )
             (call_indirect (type $i32_i32_=>_i32)
              (local.get $2)
              (i32.const 3)
              (i32.load offset=8
               (local.get $2)
              )
             )
            )
            (call $decRef_0
             (global.get $GRAIN$EXPORT$decRef_0)
             (local.get $9)
            )
           )
          )
         )
         (block $do_backpatches.31
         )
        )
        (call $+_1142
         (call $incRef_0
          (global.get $GRAIN$EXPORT$incRef_0)
          (global.get $+_1142)
         )
         (call $incRef_0
          (global.get $GRAIN$EXPORT$incRef_0)
          (local.get $8)
         )
         (call $incRef_0
          (global.get $GRAIN$EXPORT$incRef_0)
          (local.get $9)
         )
        )
       )
       (local.get $2)
      )
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $0)
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $1)
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $8)
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $9)
     )
    )
    (local.get $2)
   )
  )
 )
 (func $_gmain (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 f32)
  (local $5 f64)
  (return
   (block $cleanup_locals.42 (result i32)
    (local.set $0
     (block $compile_block.41 (result i32)
      (block $compile_store.37
       (global.set $makeAdder_1131
        (tuple.extract 0
         (tuple.make
          (block $allocate_closure.35 (result i32)
           (i32.store
            (local.tee $0
             (call $malloc_0
              (global.get $GRAIN$EXPORT$malloc_0)
              (i32.const 16)
             )
            )
            (i32.const 6)
           )
           (i32.store offset=4
            (local.get $0)
            (i32.const 2)
           )
           (i32.store offset=8
            (local.get $0)
            (i32.const -1)
           )
           (i32.store offset=12
            (local.get $0)
            (i32.const 0)
           )
           (local.get $0)
          )
          (call $decRef_0
           (global.get $GRAIN$EXPORT$decRef_0)
           (global.get $makeAdder_1131)
          )
         )
        )
       )
       (block $do_backpatches.36
        (local.set $0
         (global.get $makeAdder_1131)
        )
       )
      )
      (block $compile_store.40
       (global.set $truc_1134
        (tuple.extract 0
         (tuple.make
          (block $allocate_closure.38 (result i32)
           (i32.store
            (local.tee $0
             (call $malloc_0
              (global.get $GRAIN$EXPORT$malloc_0)
              (i32.const 16)
             )
            )
            (i32.const 6)
           )
           (i32.store offset=4
            (local.get $0)
            (i32.const 1)
           )
           (i32.store offset=8
            (local.get $0)
            (i32.const -1)
           )
           (i32.store offset=12
            (local.get $0)
            (i32.const 0)
           )
           (local.get $0)
          )
          (call $decRef_0
           (global.get $GRAIN$EXPORT$decRef_0)
           (global.get $truc_1134)
          )
         )
        )
       )
       (block $do_backpatches.39
        (local.set $0
         (global.get $truc_1134)
        )
       )
      )
      (call $truc_1134
       (call $incRef_0
        (global.get $GRAIN$EXPORT$incRef_0)
        (global.get $truc_1134)
       )
      )
     )
    )
    (local.get $0)
   )
  )
 )
 (func $_start
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 712
)
