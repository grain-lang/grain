boxes â€º test_set_extra1
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (import \"_grainEnv\" \"mem\" (memory $0 0))
 (import \"_grainEnv\" \"relocBase\" (global $relocBase_0 i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $GRAIN$EXPORT$malloc_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $GRAIN$EXPORT$decRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $malloc_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $decRef_0 (param i32 i32) (result i32)))
 (global $GRAIN$TABLE_SIZE i32 (i32.const 0))
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $GRAIN$TABLE_SIZE))
 (func $_gmain (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (i32.store
   (local.tee $0
    (call $malloc_0
     (global.get $GRAIN$EXPORT$malloc_0)
     (i32.const 12)
    )
   )
   (i32.const 7)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 1)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const 3)
  )
  (i32.store offset=8
   (local.tee $0
    (tuple.extract 0
     (tuple.make
      (local.get $0)
      (call $decRef_0
       (global.get $GRAIN$EXPORT$decRef_0)
       (i32.const 0)
      )
     )
    )
   )
   (tuple.extract 0
    (tuple.make
     (i32.const 5)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (i32.load offset=8
       (local.get $0)
      )
     )
    )
   )
  )
  (local.set $1
   (i32.const 1879048190)
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $0)
   )
  )
  (local.get $1)
 )
 (func $_start (; has Stack IR ;)
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 247
)
