tuples â€º nested_tup_1
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (import \"_grainEnv\" \"mem\" (memory $0 0))
 (import \"_grainEnv\" \"relocBase\" (global $relocBase_0 i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $GRAIN$EXPORT$malloc_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $GRAIN$EXPORT$incRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $GRAIN$EXPORT$decRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $malloc_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $incRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $decRef_0 (param i32 i32) (result i32)))
 (global $b_1132 (mut i32) (i32.const 0))
 (global $a_1131 (mut i32) (i32.const 0))
 (global $GRAIN$TABLE_SIZE i32 (i32.const 0))
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $GRAIN$TABLE_SIZE))
 (func $_gmain (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (i32.store
   (local.tee $0
    (call $malloc_0
     (global.get $GRAIN$EXPORT$malloc_0)
     (i32.const 16)
    )
   )
   (i32.const 7)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 2)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const 3)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 5)
  )
  (local.set $1
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.tee $0
    (call $malloc_0
     (global.get $GRAIN$EXPORT$malloc_0)
     (i32.const 16)
    )
   )
   (i32.const 7)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 2)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const 7)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 9)
  )
  (local.set $2
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.tee $0
    (call $malloc_0
     (global.get $GRAIN$EXPORT$malloc_0)
     (i32.const 16)
    )
   )
   (i32.const 7)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 2)
  )
  (i32.store offset=8
   (local.get $0)
   (call $incRef_0
    (global.get $GRAIN$EXPORT$incRef_0)
    (local.get $1)
   )
  )
  (i32.store offset=12
   (local.get $0)
   (call $incRef_0
    (global.get $GRAIN$EXPORT$incRef_0)
    (local.get $2)
   )
  )
  (local.set $0
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (i32.const 0)
     )
    )
   )
  )
  (global.set $a_1131
   (tuple.extract 0
    (tuple.make
     (i32.const 0)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (global.get $a_1131)
     )
    )
   )
  )
  (global.set $b_1132
   (tuple.extract 0
    (tuple.make
     (i32.const 0)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (global.get $b_1132)
     )
    )
   )
  )
  (local.set $3
   (tuple.extract 0
    (tuple.make
     (call $incRef_0
      (global.get $GRAIN$EXPORT$incRef_0)
      (i32.load offset=8
       (local.get $0)
      )
     )
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (i32.const 0)
     )
    )
   )
  )
  (local.set $4
   (tuple.extract 0
    (tuple.make
     (call $incRef_0
      (global.get $GRAIN$EXPORT$incRef_0)
      (i32.load offset=12
       (local.get $0)
      )
     )
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (i32.const 0)
     )
    )
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (block (result i32)
     (global.set $b_1132
      (tuple.extract 0
       (tuple.make
        (call $incRef_0
         (global.get $GRAIN$EXPORT$incRef_0)
         (local.get $4)
        )
        (call $decRef_0
         (global.get $GRAIN$EXPORT$decRef_0)
         (global.get $b_1132)
        )
       )
      )
     )
     (i32.const 1879048190)
    )
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (block (result i32)
     (global.set $a_1131
      (tuple.extract 0
       (tuple.make
        (call $incRef_0
         (global.get $GRAIN$EXPORT$incRef_0)
         (local.get $3)
        )
        (call $decRef_0
         (global.get $GRAIN$EXPORT$decRef_0)
         (global.get $a_1131)
        )
       )
      )
     )
     (i32.const 1879048190)
    )
   )
  )
  (local.set $5
   (call $incRef_0
    (global.get $GRAIN$EXPORT$incRef_0)
    (global.get $a_1131)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $1)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $2)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $0)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $3)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $4)
   )
  )
  (local.get $5)
 )
 (func $_start (; has Stack IR ;)
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 244
)
