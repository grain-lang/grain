enums â€º enum_recursive_data_definition
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (import \"_grainEnv\" \"mem\" (memory $0 0))
 (import \"_grainEnv\" \"relocBase\" (global $relocBase_0 i32))
 (import \"_grainEnv\" \"moduleRuntimeId\" (global $moduleRuntimeId_0 i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $GRAIN$EXPORT$malloc_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $GRAIN$EXPORT$incRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $GRAIN$EXPORT$decRef_0 (mut i32)))
 (import \"GRAIN$MODULE$pervasives\" \"GRAIN$EXPORT$print\" (global $print_1157 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $malloc_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $incRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $decRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$pervasives\" \"print\" (func $print_1157 (param i32 i32) (result i32)))
 (global $Cons_1136 (mut i32) (i32.const 0))
 (global $forest_1145 (mut i32) (i32.const 0))
 (global $Node_1134 (mut i32) (i32.const 0))
 (global $Nil_1135 (mut i32) (i32.const 0))
 (global $GRAIN$TABLE_SIZE i32 (i32.const 0))
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $GRAIN$TABLE_SIZE))
 (func $Node_1134 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (i32.store
   (local.tee $3
    (call $malloc_0
     (global.get $GRAIN$EXPORT$malloc_0)
     (i32.const 28)
    )
   )
   (i32.const 2)
  )
  (i32.store offset=4
   (local.get $3)
   (i32.shl
    (global.get $moduleRuntimeId_0)
    (i32.const 1)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.const 2263)
  )
  (i32.store offset=12
   (local.get $3)
   (i32.const 3)
  )
  (i32.store offset=16
   (local.get $3)
   (i32.const 2)
  )
  (i32.store offset=20
   (local.get $3)
   (call $incRef_0
    (global.get $GRAIN$EXPORT$incRef_0)
    (local.get $1)
   )
  )
  (i32.store offset=24
   (local.get $3)
   (call $incRef_0
    (global.get $GRAIN$EXPORT$incRef_0)
    (local.get $2)
   )
  )
  (local.set $3
   (tuple.extract 0
    (tuple.make
     (local.get $3)
     (local.get $3)
    )
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $0)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $1)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $2)
   )
  )
  (local.get $3)
 )
 (func $Cons_1136 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (i32.store
   (local.tee $3
    (call $malloc_0
     (global.get $GRAIN$EXPORT$malloc_0)
     (i32.const 28)
    )
   )
   (i32.const 2)
  )
  (i32.store offset=4
   (local.get $3)
   (i32.shl
    (global.get $moduleRuntimeId_0)
    (i32.const 1)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.const 2265)
  )
  (i32.store offset=12
   (local.get $3)
   (i32.const 3)
  )
  (i32.store offset=16
   (local.get $3)
   (i32.const 2)
  )
  (i32.store offset=20
   (local.get $3)
   (call $incRef_0
    (global.get $GRAIN$EXPORT$incRef_0)
    (local.get $1)
   )
  )
  (i32.store offset=24
   (local.get $3)
   (call $incRef_0
    (global.get $GRAIN$EXPORT$incRef_0)
    (local.get $2)
   )
  )
  (local.set $3
   (tuple.extract 0
    (tuple.make
     (local.get $3)
     (local.get $3)
    )
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $0)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $1)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $2)
   )
  )
  (local.get $3)
 )
 (func $_gmain (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (i32.store
   (local.tee $0
    (call $malloc_0
     (global.get $GRAIN$EXPORT$malloc_0)
     (i32.const 120)
    )
   )
   (i32.const 1)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 108)
  )
  (i64.store offset=8
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=16
   (local.get $0)
   (i64.const 206158430210)
  )
  (i64.store offset=24
   (local.get $0)
   (i64.const 85899347052)
  )
  (i64.store offset=32
   (local.get $0)
   (i64.const 12884901888)
  )
  (i64.store offset=40
   (local.get $0)
   (i64.const 7104846)
  )
  (i64.store offset=48
   (local.get $0)
   (i64.const 4294967316)
  )
  (i64.store offset=56
   (local.get $0)
   (i64.const 8317707895353376772)
  )
  (i64.store offset=64
   (local.get $0)
   (i64.const 206158430208)
  )
  (i64.store offset=72
   (local.get $0)
   (i64.const 85899347051)
  )
  (i64.store offset=80
   (local.get $0)
   (i64.const 21474836480)
  )
  (i64.store offset=88
   (local.get $0)
   (i64.const 521644567877)
  )
  (i64.store offset=96
   (local.get $0)
   (i64.const 4294967316)
  )
  (i64.store offset=104
   (local.get $0)
   (i64.const 7306086876299919364)
  )
  (i64.store offset=112
   (local.get $0)
   (i64.const 0)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.load
    (i32.const 1032)
   )
  )
  (i32.store offset=12
   (local.get $0)
   (global.get $moduleRuntimeId_0)
  )
  (i32.store
   (i32.const 1032)
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $0
    (call $malloc_0
     (global.get $GRAIN$EXPORT$malloc_0)
     (i32.const 16)
    )
   )
   (i32.const 6)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 3)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const -1)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 0)
  )
  (global.set $Node_1134
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (global.get $Node_1134)
     )
    )
   )
  )
  (i32.store
   (local.tee $0
    (call $malloc_0
     (global.get $GRAIN$EXPORT$malloc_0)
     (i32.const 20)
    )
   )
   (i32.const 2)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.shl
    (global.get $moduleRuntimeId_0)
    (i32.const 1)
   )
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const 2265)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 1)
  )
  (i32.store offset=16
   (local.get $0)
   (i32.const 0)
  )
  (global.set $Nil_1135
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (global.get $Nil_1135)
     )
    )
   )
  )
  (i32.store
   (local.tee $0
    (call $malloc_0
     (global.get $GRAIN$EXPORT$malloc_0)
     (i32.const 16)
    )
   )
   (i32.const 6)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 3)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const -1)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 0)
  )
  (global.set $Cons_1136
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (global.get $Cons_1136)
     )
    )
   )
  )
  (i32.store
   (local.tee $0
    (call $malloc_0
     (global.get $GRAIN$EXPORT$malloc_0)
     (i32.const 16)
    )
   )
   (i32.const 1)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 6)
  )
  (i64.store offset=8
   (local.get $0)
   (i64.const 54015209861748)
  )
  (local.set $1
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.tee $0
    (call $malloc_0
     (global.get $GRAIN$EXPORT$malloc_0)
     (i32.const 16)
    )
   )
   (i32.const 1)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 6)
  )
  (i64.store offset=8
   (local.get $0)
   (i64.const 55114721489524)
  )
  (local.set $0
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (i32.const 0)
     )
    )
   )
  )
  (local.set $2
   (tuple.extract 0
    (tuple.make
     (call $Node_1134
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (global.get $Node_1134)
      )
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (local.get $0)
      )
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (global.get $Nil_1135)
      )
     )
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (i32.const 0)
     )
    )
   )
  )
  (local.set $3
   (tuple.extract 0
    (tuple.make
     (call $Cons_1136
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (global.get $Cons_1136)
      )
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (local.get $2)
      )
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (global.get $Nil_1135)
      )
     )
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (i32.const 0)
     )
    )
   )
  )
  (local.set $4
   (tuple.extract 0
    (tuple.make
     (call $Node_1134
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (global.get $Node_1134)
      )
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (local.get $1)
      )
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (local.get $3)
      )
     )
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (i32.const 0)
     )
    )
   )
  )
  (global.set $forest_1145
   (tuple.extract 0
    (tuple.make
     (call $Cons_1136
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (global.get $Cons_1136)
      )
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (local.get $4)
      )
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (global.get $Nil_1135)
      )
     )
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (global.get $forest_1145)
     )
    )
   )
  )
  (local.set $5
   (call $print_1157
    (call $incRef_0
     (global.get $GRAIN$EXPORT$incRef_0)
     (global.get $print_1157)
    )
    (call $incRef_0
     (global.get $GRAIN$EXPORT$incRef_0)
     (global.get $forest_1145)
    )
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $1)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $0)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $2)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $3)
   )
  )
  (drop
   (call $decRef_0
    (global.get $GRAIN$EXPORT$decRef_0)
    (local.get $4)
   )
  )
  (local.get $5)
 )
 (func $_start (; has Stack IR ;)
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 872
)
