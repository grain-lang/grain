exceptions â€º exception_4
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (import \"_grainEnv\" \"mem\" (memory $0 0))
 (import \"_grainEnv\" \"relocBase\" (global $wimport__grainEnv_relocBase i32))
 (import \"_grainEnv\" \"moduleRuntimeId\" (global $wimport__grainEnv_moduleRuntimeId i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$malloc (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $wimport_GRAIN$MODULE$runtime/gc_malloc (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $wimport_GRAIN$MODULE$runtime/gc_incRef (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $wimport_GRAIN$MODULE$runtime/gc_decRef (param i32 i32) (result i32)))
 (global $global_1 (mut i32) (i32.const 0))
 (global $global_0 (mut i32) (i32.const 0))
 (global $global_3 i32 (i32.const 0))
 (export \"memory\" (memory $0))
 (export \"Foo\" (func $Foo_1131))
 (export \"GRAIN$EXPORT$Bar\" (global $global_1))
 (export \"GRAIN$EXPORT$Foo\" (global $global_0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $global_3))
 (func $Foo_1131 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (i32.store
   (local.tee $3
    (call $wimport_GRAIN$MODULE$runtime/gc_malloc
     (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$malloc)
     (i32.const 28)
    )
   )
   (i32.const 2)
  )
  (i32.store offset=4
   (local.get $3)
   (i32.shl
    (global.get $wimport__grainEnv_moduleRuntimeId)
    (i32.const 1)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.const 5)
  )
  (i32.store offset=12
   (local.get $3)
   (i32.const 2263)
  )
  (i32.store offset=16
   (local.get $3)
   (i32.const 2)
  )
  (i32.store offset=20
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=24
   (local.get $3)
   (call $wimport_GRAIN$MODULE$runtime/gc_incRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
    (local.get $2)
   )
  )
  (local.set $1
   (tuple.extract 0
    (tuple.make
     (local.get $3)
     (local.get $3)
    )
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $0)
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $2)
   )
  )
  (local.get $1)
 )
 (func $_gmain (; has Stack IR ;) (result i32)
  (local $0 i32)
  (i32.store
   (local.tee $0
    (call $wimport_GRAIN$MODULE$runtime/gc_malloc
     (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$malloc)
     (i32.const 72)
    )
   )
   (i32.const 1)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 60)
  )
  (i64.store offset=8
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=16
   (local.get $0)
   (i64.const 206158430209)
  )
  (i64.store offset=24
   (local.get $0)
   (i64.const 85899345922)
  )
  (i64.store offset=32
   (local.get $0)
   (i64.const 12884903019)
  )
  (i64.store offset=40
   (local.get $0)
   (i64.const 7302982)
  )
  (i64.store offset=48
   (local.get $0)
   (i64.const 4866197946388)
  )
  (i64.store offset=56
   (local.get $0)
   (i64.const 32195083440750595)
  )
  (i64.store offset=64
   (local.get $0)
   (i64.const 0)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.load
    (i32.const 1032)
   )
  )
  (i32.store offset=12
   (local.get $0)
   (global.get $wimport__grainEnv_moduleRuntimeId)
  )
  (i32.store
   (i32.const 1032)
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $0
    (call $wimport_GRAIN$MODULE$runtime/gc_malloc
     (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$malloc)
     (i32.const 16)
    )
   )
   (i32.const 6)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 3)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const -1)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 0)
  )
  (global.set $global_0
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $wimport_GRAIN$MODULE$runtime/gc_decRef
      (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
      (global.get $global_0)
     )
    )
   )
  )
  (i32.store
   (local.tee $0
    (call $wimport_GRAIN$MODULE$runtime/gc_malloc
     (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$malloc)
     (i32.const 20)
    )
   )
   (i32.const 2)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.shl
    (global.get $wimport__grainEnv_moduleRuntimeId)
    (i32.const 1)
   )
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const 5)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 2267)
  )
  (i32.store offset=16
   (local.get $0)
   (i32.const 0)
  )
  (global.set $global_1
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $wimport_GRAIN$MODULE$runtime/gc_decRef
      (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
      (global.get $global_1)
     )
    )
   )
  )
  (call $wimport_GRAIN$MODULE$runtime/gc_incRef
   (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
   (global.get $global_1)
  )
 )
 (func $_start (; has Stack IR ;)
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 1254
)
