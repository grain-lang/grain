functions â€º func_record_associativity2
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (import \"_grainEnv\" \"mem\" (memory $0 0))
 (import \"_grainEnv\" \"tbl\" (table $tbl 0 funcref))
 (import \"_grainEnv\" \"relocBase\" (global $wimport__grainEnv_relocBase i32))
 (import \"_grainEnv\" \"moduleRuntimeId\" (global $wimport__grainEnv_moduleRuntimeId i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$malloc (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $wimport_GRAIN$MODULE$runtime/gc_malloc (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $wimport_GRAIN$MODULE$runtime/gc_incRef (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $wimport_GRAIN$MODULE$runtime/gc_decRef (param i32 i32) (result i32)))
 (global $global_1 i32 (i32.const 1))
 (elem $elem (global.get $wimport__grainEnv_relocBase) $lam_lambda_1141)
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $global_1))
 (func $lam_lambda_1141 (; has Stack IR ;) (param $0 i32) (result i32)
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $0)
   )
  )
  (i32.const 2147483646)
 )
 (func $_gmain (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (i32.store
   (local.tee $0
    (tuple.extract 0
     (tuple.make
      (call $wimport_GRAIN$MODULE$runtime/gc_malloc
       (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$malloc)
       (i32.const 72)
      )
      (i32.const 0)
     )
    )
   )
   (i32.const 1)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 60)
  )
  (i64.store offset=8
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=16
   (local.get $0)
   (i64.const 103079215106)
  )
  (i64.store offset=24
   (local.get $0)
   (i64.const 68719477867)
  )
  (i64.store offset=32
   (local.get $0)
   (i64.const 442381631489)
  )
  (i64.store offset=40
   (local.get $0)
   (i64.const 103079215104)
  )
  (i64.store offset=48
   (local.get $0)
   (i64.const 68719477868)
  )
  (i64.store offset=56
   (local.get $0)
   (i64.const 438086664193)
  )
  (i64.store offset=64
   (local.get $0)
   (i64.const 0)
  )
  (i32.store
   (local.tee $0
    (tuple.extract 0
     (tuple.make
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
      (local.get $0)
     )
    )
   )
   (i32.load
    (i32.const 1032)
   )
  )
  (i32.store offset=4
   (local.get $0)
   (global.get $wimport__grainEnv_moduleRuntimeId)
  )
  (i32.store
   (i32.const 1032)
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (tuple.extract 0
     (tuple.make
      (call $wimport_GRAIN$MODULE$runtime/gc_malloc
       (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$malloc)
       (i32.const 16)
      )
      (local.get $0)
     )
    )
   )
   (i32.const 6)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 1)
  )
  (i32.store offset=8
   (local.get $0)
   (global.get $wimport__grainEnv_relocBase)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 0)
  )
  (local.set $2
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $wimport_GRAIN$MODULE$runtime/gc_decRef
      (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.tee $0
    (tuple.extract 0
     (tuple.make
      (call $wimport_GRAIN$MODULE$runtime/gc_malloc
       (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$malloc)
       (i32.const 20)
      )
      (tuple.extract 0
       (tuple.make
        (local.get $2)
        (local.get $0)
       )
      )
     )
    )
   )
   (i32.const 3)
  )
  (i32.store offset=4
   (local.get $0)
   (local.tee $1
    (i32.shl
     (global.get $wimport__grainEnv_moduleRuntimeId)
     (i32.const 1)
    )
   )
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const 2263)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 1)
  )
  (i32.store offset=16
   (local.get $0)
   (call $wimport_GRAIN$MODULE$runtime/gc_incRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
    (local.get $2)
   )
  )
  (local.set $3
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $wimport_GRAIN$MODULE$runtime/gc_decRef
      (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.tee $0
    (tuple.extract 0
     (tuple.make
      (call $wimport_GRAIN$MODULE$runtime/gc_malloc
       (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$malloc)
       (i32.const 20)
      )
      (local.get $0)
     )
    )
   )
   (i32.const 3)
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $1)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const 2265)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 1)
  )
  (i32.store offset=16
   (local.get $0)
   (call $wimport_GRAIN$MODULE$runtime/gc_incRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
    (local.get $3)
   )
  )
  (local.set $1
   (tuple.extract 0
    (tuple.make
     (local.get $0)
     (call $wimport_GRAIN$MODULE$runtime/gc_decRef
      (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
      (i32.const 0)
     )
    )
   )
  )
  (local.set $4
   (tuple.extract 0
    (tuple.make
     (call $wimport_GRAIN$MODULE$runtime/gc_incRef
      (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
      (i32.load offset=16
       (local.get $1)
      )
     )
     (call $wimport_GRAIN$MODULE$runtime/gc_decRef
      (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
      (i32.const 0)
     )
    )
   )
  )
  (local.set $5
   (tuple.extract 0
    (tuple.make
     (call $wimport_GRAIN$MODULE$runtime/gc_incRef
      (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
      (i32.load offset=16
       (local.get $4)
      )
     )
     (call $wimport_GRAIN$MODULE$runtime/gc_decRef
      (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
      (i32.const 0)
     )
    )
   )
  )
  (local.set $0
   (tuple.extract 0
    (tuple.make
     (i32.xor
      (tuple.extract 0
       (tuple.make
        (call_indirect (type $i32_=>_i32)
         (local.tee $0
          (tuple.extract 0
           (tuple.make
            (call $wimport_GRAIN$MODULE$runtime/gc_incRef
             (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$incRef)
             (local.get $5)
            )
            (local.get $0)
           )
          )
         )
         (i32.load offset=8
          (local.get $0)
         )
        )
        (i32.const 0)
       )
      )
      (i32.const -2147483648)
     )
     (local.get $0)
    )
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $2)
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $3)
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $1)
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $4)
   )
  )
  (drop
   (call $wimport_GRAIN$MODULE$runtime/gc_decRef
    (global.get $wimport_GRAIN$MODULE$runtime/gc_GRAIN$EXPORT$decRef)
    (local.get $5)
   )
  )
  (local.get $0)
 )
 (func $_start (; has Stack IR ;)
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 763
)
