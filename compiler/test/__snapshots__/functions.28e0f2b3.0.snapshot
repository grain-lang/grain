functions â€º lambda_pat_any
((mash_code
  ((functions
    (((id ((name x))) (name (x)) (args (Managed Managed))
      (return_type (Managed)) (closure ())
      (body
       (((instr_desc
          (MCleanup
           (((instr_desc
              (MImmediate
               ((immediate_desc (MImmConst (MConstI32 5)))
                (immediate_analyses ((last_usage Unknown))))))))
           (((immediate_desc (MImmBinding (MArgBind 1 Managed)))
             (immediate_analyses ((last_usage Unknown))))
            ((immediate_desc (MImmBinding (MArgBind 0 Managed)))
             (immediate_analyses ((last_usage Unknown))))))))))
      (stack_size
       ((stack_size_ptr 0) (stack_size_i32 0) (stack_size_i64 0)
        (stack_size_f32 0) (stack_size_f64 0)))
      (attrs ()))))
   (imports ()) (exports ())
   (main_body
    (((instr_desc
       (MStore
        (((MGlobalBind x_1113 Managed)
          ((instr_desc
            (MImmediate
             ((immediate_desc (MImmConst (MConstLiteral (MConstI32 0))))
              (immediate_analyses ((last_usage Unknown))))))))))))
     ((instr_desc
       (MStore
        (((MLocalBind 0 Managed) ((instr_desc (MAllocate (MString foo)))))))))
     ((instr_desc
       (MReturnCallKnown (func x_1113)
        (closure
         ((immediate_desc
           (MIncRef
            ((immediate_desc (MImmBinding (MGlobalBind x_1113 Managed)))
             (immediate_analyses ((last_usage Last))))))
          (immediate_analyses ((last_usage Unknown)))))
        (func_type ((Managed) (Managed)))
        (args
         (((immediate_desc (MImmBinding (MLocalBind 0 Managed)))
           (immediate_analyses ((last_usage Last)))))))))))
   (main_body_stack_size
    ((stack_size_ptr 1) (stack_size_i32 0) (stack_size_i64 0)
     (stack_size_f32 0) (stack_size_f64 0)))
   (globals
    (((id ((name x))) (mutable_ true) (allocation_type Managed)
      (initial_value ()))))
   (function_table_elements ())
   (global_function_table_offset ((name function_table_global)))
   (compilation_mode Normal) (type_metadata <opaque>)))
 (signature <opaque>))
