functions â€º func_record_associativity1
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (import \"_genv\" \"tbl\" (table $tbl 0 funcref))
 (import \"_genv\" \"relocBase\" (global $relocBase_0 i32))
 (import \"_genv\" \"moduleRuntimeId\" (global $moduleRuntimeId_0 i32))
 (import \"_genv\" \"runtimeHeapStart\" (global $runtimeHeapStart_0 i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $GRAIN$EXPORT$malloc_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $GRAIN$EXPORT$incRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $GRAIN$EXPORT$decRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $malloc_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $incRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $decRef_0 (param i32 i32) (result i32)))
 (global $GRAIN$TABLE_SIZE i32 (i32.const 1))
 (memory $0 0)
 (elem $elem (global.get $relocBase_0) $lam_lambda_1118)
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $GRAIN$TABLE_SIZE))
 (func $lam_lambda_1118 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 f32)
  (local $6 f64)
  (block $closure_elements.5 (result i32)
   (block $compile_block.4 (result i32)
    (tuple.extract 0
     (tuple.make
      (i32.const 2147483646)
      (block $cleanup.3 (result i32)
       (drop
        (call $decRef_0
         (global.get $GRAIN$EXPORT$decRef_0)
         (local.get $0)
        )
       )
       (i32.const 1879048190)
      )
     )
    )
   )
  )
 )
 (func $_gmain (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 f32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (block $compile_block.18 (result i32)
   (block $compile_store.8
    (local.set $6
     (block $allocate_closure.6 (result i32)
      (i32.store
       (local.tee $0
        (call $malloc_0
         (global.get $GRAIN$EXPORT$malloc_0)
         (i32.const 16)
        )
       )
       (i32.const 6)
      )
      (i32.store offset=4
       (local.get $0)
       (i32.const 1)
      )
      (i32.store offset=8
       (local.get $0)
       (i32.add
        (global.get $relocBase_0)
        (i32.const 0)
       )
      )
      (i32.store offset=12
       (local.get $0)
       (i32.const 0)
      )
      (local.get $0)
     )
    )
    (block $do_backpatches.7
     (local.set $0
      (local.get $6)
     )
    )
   )
   (block $compile_store.11
    (local.set $7
     (block $allocate_record.9 (result i32)
      (i32.store
       (local.tee $0
        (call $malloc_0
         (global.get $GRAIN$EXPORT$malloc_0)
         (i32.const 20)
        )
       )
       (i32.const 3)
      )
      (i32.store offset=4
       (local.get $0)
       (i32.const 485893719)
      )
      (i32.store offset=8
       (local.get $0)
       (i32.const 2227)
      )
      (i32.store offset=12
       (local.get $0)
       (i32.const 1)
      )
      (i32.store offset=16
       (local.get $0)
       (local.get $6)
      )
      (local.get $0)
     )
    )
    (block $do_backpatches.10
    )
   )
   (block $compile_store.13
    (local.set $8
     (call $incRef_0
      (global.get $GRAIN$EXPORT$incRef_0)
      (i32.load offset=16
       (local.get $7)
      )
     )
    )
    (block $do_backpatches.12
    )
   )
   (block $cleanup.14
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $7)
     )
    )
   )
   (block $compile_store.17
    (local.set $9
     (block $call_lambda.15 (result i32)
      (local.set $0
       (local.get $8)
      )
      (call_indirect (type $i32_=>_i32)
       (local.get $0)
       (i32.load offset=8
        (local.get $0)
       )
      )
     )
    )
    (block $do_backpatches.16
    )
   )
   (i32.xor
    (local.get $9)
    (i32.const -2147483648)
   )
  )
 )
 (func $_start
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 445
)
