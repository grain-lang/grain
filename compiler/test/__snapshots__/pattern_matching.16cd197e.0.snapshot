pattern matching â€º constant_match_3
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (import \"_grainEnv\" \"mem\" (memory $0 0))
 (import \"_grainEnv\" \"tbl\" (table $tbl 0 funcref))
 (import \"_grainEnv\" \"relocBase\" (global $relocBase_0 i32))
 (import \"_grainEnv\" \"moduleRuntimeId\" (global $moduleRuntimeId_0 i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $GRAIN$EXPORT$malloc_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $GRAIN$EXPORT$incRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $GRAIN$EXPORT$decRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/equal\" \"GRAIN$EXPORT$equal\" (global $GRAIN$EXPORT$equal_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $malloc_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $incRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $decRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/equal\" \"equal\" (func $equal_0 (param i32 i32 i32) (result i32)))
 (global $GRAIN$TABLE_SIZE i32 (i32.const 0))
 (elem $elem (global.get $relocBase_0))
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $GRAIN$TABLE_SIZE))
 (func $_gmain (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 f32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (return
   (block $cleanup_locals.19 (result i32)
    (local.set $0
     (block $compile_block.18 (result i32)
      (block $compile_store.3
       (local.set $6
        (tuple.extract 0
         (tuple.make
          (block $allocate_string.1 (result i32)
           (i32.store
            (local.tee $0
             (call $malloc_0
              (global.get $GRAIN$EXPORT$malloc_0)
              (i32.const 16)
             )
            )
            (i32.const 1)
           )
           (i32.store offset=4
            (local.get $0)
            (i32.const 3)
           )
           (i64.store offset=8
            (local.get $0)
            (i64.const 7303014)
           )
           (local.get $0)
          )
          (call $decRef_0
           (global.get $GRAIN$EXPORT$decRef_0)
           (local.get $6)
          )
         )
        )
       )
       (block $do_backpatches.2
       )
      )
      (block $compile_store.6
       (local.set $7
        (tuple.extract 0
         (tuple.make
          (block $allocate_string.4 (result i32)
           (i32.store
            (local.tee $0
             (call $malloc_0
              (global.get $GRAIN$EXPORT$malloc_0)
              (i32.const 16)
             )
            )
            (i32.const 1)
           )
           (i32.store offset=4
            (local.get $0)
            (i32.const 3)
           )
           (i64.store offset=8
            (local.get $0)
            (i64.const 7303014)
           )
           (local.get $0)
          )
          (call $decRef_0
           (global.get $GRAIN$EXPORT$decRef_0)
           (local.get $7)
          )
         )
        )
       )
       (block $do_backpatches.5
       )
      )
      (block $compile_store.8
       (local.set $8
        (call $equal_0
         (call $incRef_0
          (global.get $GRAIN$EXPORT$incRef_0)
          (global.get $GRAIN$EXPORT$equal_0)
         )
         (call $incRef_0
          (global.get $GRAIN$EXPORT$incRef_0)
          (local.get $6)
         )
         (call $incRef_0
          (global.get $GRAIN$EXPORT$incRef_0)
          (local.get $7)
         )
        )
       )
       (block $do_backpatches.7
       )
      )
      (block $compile_store.12
       (local.set $9
        (if (result i32)
         (i32.shr_u
          (local.get $8)
          (i32.const 31)
         )
         (block $compile_block.9 (result i32)
          (i32.const 3)
         )
         (block $compile_block.10 (result i32)
          (i32.const 5)
         )
        )
       )
       (block $do_backpatches.11
       )
      )
      (block $switch.13_outer (result i32)
       (block $switch.13_branch_0 (result i32)
        (drop
         (block $switch.13_branch_1 (result i32)
          (drop
           (block $switch.13_branch_2 (result i32)
            (drop
             (block $switch.13_branch_3 (result i32)
              (drop
               (block $switch.13_default (result i32)
                (br_table $switch.13_branch_1 $switch.13_branch_2 $switch.13_branch_3 $switch.13_default $switch.13_default
                 (i32.const 0)
                 (i32.shr_s
                  (local.get $9)
                  (i32.const 1)
                 )
                )
               )
              )
              (br $switch.13_outer
               (block $compile_block.17 (result i32)
                (unreachable)
               )
              )
             )
            )
            (br $switch.13_outer
             (block $compile_block.16 (result i32)
              (i32.const 2147483646)
             )
            )
           )
          )
          (br $switch.13_outer
           (block $compile_block.15 (result i32)
            (i32.const -2)
           )
          )
         )
        )
        (br $switch.13_outer
         (block $compile_block.14 (result i32)
          (i32.const 2147483646)
         )
        )
       )
      )
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $6)
     )
    )
    (drop
     (call $decRef_0
      (global.get $GRAIN$EXPORT$decRef_0)
      (local.get $7)
     )
    )
    (local.get $0)
   )
  )
 )
 (func $_start
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 248
)
