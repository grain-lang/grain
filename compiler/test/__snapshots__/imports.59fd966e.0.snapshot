imports â€º import_some_multiple
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $none_=>_i32 (func (result i32)))
 (import \"_grainEnv\" \"mem\" (memory $0 0))
 (import \"_grainEnv\" \"tbl\" (table $tbl 0 funcref))
 (import \"_grainEnv\" \"relocBase\" (global $import__grainEnv_0_relocBase_0 i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $import_GRAIN$MODULE$runtime/gc_0_GRAIN$EXPORT$incRef_0 (mut i32)))
 (import \"GRAIN$MODULE$exportStar\" \"GRAIN$EXPORT$x\" (global $import_exportStar_1166_x_1167 (mut i32)))
 (import \"GRAIN$MODULE$exportStar\" \"GRAIN$EXPORT$y\" (global $import_exportStar_1168_y_1169 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $import_GRAIN$MODULE$runtime/gc_0_incRef_0 (param i32 i32) (result i32)))
 (global $global_1 i32 (i32.const 0))
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $global_1))
 (func $_gmain (; has Stack IR ;) (result i32)
  (local $0 i32)
  (tuple.extract 0
   (tuple.make
    (call_indirect (type $i32_i32_=>_i32)
     (local.tee $0
      (tuple.extract 0
       (tuple.make
        (call $import_GRAIN$MODULE$runtime/gc_0_incRef_0
         (global.get $import_GRAIN$MODULE$runtime/gc_0_GRAIN$EXPORT$incRef_0)
         (global.get $import_exportStar_1168_y_1169)
        )
        (i32.const 0)
       )
      )
     )
     (call $import_GRAIN$MODULE$runtime/gc_0_incRef_0
      (global.get $import_GRAIN$MODULE$runtime/gc_0_GRAIN$EXPORT$incRef_0)
      (global.get $import_exportStar_1166_x_1167)
     )
     (i32.load offset=8
      (local.get $0)
     )
    )
    (local.get $0)
   )
  )
 )
 (func $_start (; has Stack IR ;)
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 302
)
