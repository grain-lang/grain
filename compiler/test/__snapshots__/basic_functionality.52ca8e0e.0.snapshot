basic functionality â€º func_shadow
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (import \"_genv\" \"tbl\" (table $tbl 0 funcref))
 (import \"_genv\" \"relocBase\" (global $relocBase_0 i32))
 (import \"_genv\" \"moduleRuntimeId\" (global $moduleRuntimeId_0 i32))
 (import \"_genv\" \"runtimeHeapStart\" (global $runtimeHeapStart_0 i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $GRAIN$EXPORT$malloc_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $GRAIN$EXPORT$incRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $GRAIN$EXPORT$decRef_0 (mut i32)))
 (import \"GRAIN$MODULE$pervasives\" \"GRAIN$EXPORT$print\" (global $print_1118 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $malloc_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $incRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $decRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$pervasives\" \"print\" (func $print_1118 (param i32 i32) (result i32)))
 (global $foo_1115 (mut i32) (i32.const 0))
 (global $foo_1113 (mut i32) (i32.const 0))
 (global $GRAIN$TABLE_SIZE i32 (i32.const 0))
 (memory $0 0)
 (elem $elem (global.get $relocBase_0))
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $GRAIN$TABLE_SIZE))
 (func $foo_1113 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 f32)
  (local $6 f64)
  (block $compile_block.3 (result i32)
   (tuple.extract 0
    (tuple.make
     (block $allocate_string.2 (result i32)
      (i32.store
       (local.tee $1
        (call $malloc_0
         (global.get $GRAIN$EXPORT$malloc_0)
         (i32.const 16)
        )
       )
       (i32.const 1)
      )
      (i32.store offset=4
       (local.get $1)
       (i32.const 3)
      )
      (i64.store offset=8
       (local.get $1)
       (i64.const 7496034)
      )
      (local.get $1)
     )
     (block $cleanup.1 (result i32)
      (drop
       (call $decRef_0
        (global.get $GRAIN$EXPORT$decRef_0)
        (local.get $0)
       )
      )
      (i32.const 1879048190)
     )
    )
   )
  )
 )
 (func $foo_1115 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 f32)
  (local $6 f64)
  (block $compile_block.6 (result i32)
   (tuple.extract 0
    (tuple.make
     (block $allocate_string.5 (result i32)
      (i32.store
       (local.tee $1
        (call $malloc_0
         (global.get $GRAIN$EXPORT$malloc_0)
         (i32.const 16)
        )
       )
       (i32.const 1)
      )
      (i32.store offset=4
       (local.get $1)
       (i32.const 3)
      )
      (i64.store offset=8
       (local.get $1)
       (i64.const 8020322)
      )
      (local.get $1)
     )
     (block $cleanup.4 (result i32)
      (drop
       (call $decRef_0
        (global.get $GRAIN$EXPORT$decRef_0)
        (local.get $0)
       )
      )
      (i32.const 1879048190)
     )
    )
   )
  )
 )
 (func $_gmain (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 f32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (block $compile_block.15
   (block $compile_store.8
    (global.set $foo_1113
     (i32.const 0)
    )
    (block $do_backpatches.7
    )
   )
   (block $compile_store.10
    (local.set $6
     (call $foo_1113
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (global.get $foo_1113)
      )
     )
    )
    (block $do_backpatches.9
    )
   )
   (drop
    (call $print_1118
     (call $incRef_0
      (global.get $GRAIN$EXPORT$incRef_0)
      (global.get $print_1118)
     )
     (local.get $6)
    )
   )
   (block $compile_store.12
    (global.set $foo_1115
     (i32.const 0)
    )
    (block $do_backpatches.11
    )
   )
   (block $compile_store.14
    (local.set $7
     (call $foo_1115
      (call $incRef_0
       (global.get $GRAIN$EXPORT$incRef_0)
       (global.get $foo_1115)
      )
     )
    )
    (block $do_backpatches.13
    )
   )
   (return_call $print_1118
    (call $incRef_0
     (global.get $GRAIN$EXPORT$incRef_0)
     (global.get $print_1118)
    )
    (local.get $7)
   )
  )
 )
 (func $_start
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 323
)
