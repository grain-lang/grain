provides â€º let_rec_provide
(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (import \"_genv\" \"tbl\" (table $tbl 0 funcref))
 (import \"_genv\" \"relocBase\" (global $relocBase_0 i32))
 (import \"_genv\" \"moduleRuntimeId\" (global $moduleRuntimeId_0 i32))
 (import \"_genv\" \"runtimeHeapStart\" (global $runtimeHeapStart_0 i32))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $GRAIN$EXPORT$decRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $decRef_0 (param i32 i32) (result i32)))
 (global $foo_1113 (mut i32) (i32.const 0))
 (global $GRAIN$TABLE_SIZE i32 (i32.const 0))
 (memory $0 0)
 (elem $elem (global.get $relocBase_0))
 (export \"memory\" (memory $0))
 (export \"foo\" (func $foo_1113))
 (export \"GRAIN$EXPORT$foo\" (global $foo_1113))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $GRAIN$TABLE_SIZE))
 (func $foo_1113 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 f32)
  (local $6 f64)
  (block $compile_block.2 (result i32)
   (tuple.extract 0
    (tuple.make
     (i32.const 11)
     (block $cleanup.1 (result i32)
      (drop
       (call $decRef_0
        (global.get $GRAIN$EXPORT$decRef_0)
        (local.get $0)
       )
      )
      (i32.const 1879048190)
     )
    )
   )
  )
 )
 (func $_gmain (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 f32)
  (local $5 f64)
  (block $compile_block.5 (result i32)
   (block $compile_store.4
    (global.set $foo_1113
     (i32.const 0)
    )
    (block $do_backpatches.3
    )
   )
   (i32.const 1879048190)
  )
 )
 (func $_start
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 954
)
