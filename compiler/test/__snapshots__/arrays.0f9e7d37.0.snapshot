arrays â€º array_access
(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (import \"_grainEnv\" \"mem\" (memory $0 0))
 (import \"_grainEnv\" \"tbl\" (table $tbl 0 funcref))
 (import \"_grainEnv\" \"relocBase\" (global $relocBase_0 i32))
 (import \"_grainEnv\" \"moduleRuntimeId\" (global $moduleRuntimeId_0 i32))
 (import \"GRAIN$MODULE$runtime/exception\" \"GRAIN$EXPORT$printException\" (global $GRAIN$EXPORT$printException_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/exception\" \"GRAIN$EXPORT$IndexOutOfBounds\" (global $GRAIN$EXPORT$IndexOutOfBounds_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$malloc\" (global $GRAIN$EXPORT$malloc_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$incRef\" (global $GRAIN$EXPORT$incRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"GRAIN$EXPORT$decRef\" (global $GRAIN$EXPORT$decRef_0 (mut i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"malloc\" (func $malloc_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"incRef\" (func $incRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/gc\" \"decRef\" (func $decRef_0 (param i32 i32) (result i32)))
 (import \"GRAIN$MODULE$runtime/exception\" \"printException\" (func $printException_0 (param i32 i32) (result i32)))
 (global $x_1128 (mut i32) (i32.const 0))
 (global $GRAIN$TABLE_SIZE i32 (i32.const 0))
 (elem $elem (global.get $relocBase_0))
 (export \"memory\" (memory $0))
 (export \"_gmain\" (func $_gmain))
 (export \"_start\" (func $_start))
 (export \"GRAIN$TABLE_SIZE\" (global $GRAIN$TABLE_SIZE))
 (func $_gmain (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 f32)
  (local $5 f64)
  (return
   (block $cleanup_locals.8 (result i32)
    (local.set $0
     (block $compile_block.7 (result i32)
      (block $compile_store.3
       (global.set $x_1128
        (tuple.extract 0
         (tuple.make
          (block $allocate_array.1 (result i32)
           (i32.store
            (local.tee $0
             (call $malloc_0
              (global.get $GRAIN$EXPORT$malloc_0)
              (i32.const 20)
             )
            )
            (i32.const 4)
           )
           (i32.store offset=4
            (local.get $0)
            (i32.const 3)
           )
           (i32.store offset=8
            (local.get $0)
            (i32.const 3)
           )
           (i32.store offset=12
            (local.get $0)
            (i32.const 5)
           )
           (i32.store offset=16
            (local.get $0)
            (i32.const 7)
           )
           (local.get $0)
          )
          (call $decRef_0
           (global.get $GRAIN$EXPORT$decRef_0)
           (global.get $x_1128)
          )
         )
        )
       )
       (block $do_backpatches.2
       )
      )
      (block $MArrayGet.6 (result i32)
       (local.set $1
        (i32.shr_s
         (i32.const 1)
         (i32.const 1)
        )
       )
       (local.set $2
        (global.get $x_1128)
       )
       (if
        (i32.gt_s
         (i32.mul
          (i32.load offset=4
           (local.get $2)
          )
          (i32.const -1)
         )
         (local.get $1)
        )
        (drop
         (block $call_error_handler.5
          (drop
           (call $printException_0
            (global.get $GRAIN$EXPORT$printException_0)
            (global.get $GRAIN$EXPORT$IndexOutOfBounds_0)
           )
          )
          (unreachable)
         )
        )
       )
       (if
        (i32.le_s
         (i32.load offset=4
          (local.get $2)
         )
         (local.get $1)
        )
        (drop
         (block $call_error_handler.4
          (drop
           (call $printException_0
            (global.get $GRAIN$EXPORT$printException_0)
            (global.get $GRAIN$EXPORT$IndexOutOfBounds_0)
           )
          )
          (unreachable)
         )
        )
       )
       (call $incRef_0
        (global.get $GRAIN$EXPORT$incRef_0)
        (i32.load offset=8
         (i32.add
          (i32.mul
           (if (result i32)
            (i32.lt_s
             (local.get $1)
             (i32.const 0)
            )
            (i32.add
             (local.get $1)
             (i32.load offset=4
              (local.get $2)
             )
            )
            (local.get $1)
           )
           (i32.const 4)
          )
          (local.get $2)
         )
        )
       )
      )
     )
    )
    (local.get $0)
   )
  )
 )
 (func $_start
  (drop
   (call $_gmain)
  )
 )
 ;; custom section \"cmi\", size 244
)
