let rec myFun1 = x => x + 1, myFun2 = x => x + 1

let myBlock = {
  "some string"
}


let myFunction2 = (x) => {
  let inter = x + 1
  "some string"
},

myFunction3 = (y) =>  {
  let myVal = 5
  "some string"
}


// Attributes

@attribute
let myToplevelAttributeFunction = (x) => x

let myFunction4 = () => {
  @attribute
  let myAttributeFunction = () => 5
}

let rotate = (count, list) => {
  let (beginning, end) = if (count >= 0) part(count, list)
  else part(length(list) + count, list)
  append(end, beginning)
}

let qsize = (if (WasmI32.eqz(WasmI32.and(m + 1n, 1n))) {
    m + 1n
  } else {
    m + 2n
  }) >>
  1n
