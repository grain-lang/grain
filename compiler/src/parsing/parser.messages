program: ASSERT WHEN
##
## Ends in an error in state: 38.
##
## stmt_expr -> ASSERT . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## ASSERT
##

Expected an expression after `assert`.

program: AT ID EOL WHILE
##
## Ends in an error in state: 412.
##
## list(attribute) -> attribute . list(attribute) [ TYPE RECORD LET IMPORT EXPORT ENUM ]
##
## The known suffix of the stack is as follows:
## attribute
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 196, spurious reduction of production attribute -> AT id_str loption(attribute_arguments) eols
##
program: AT ID WHILE
##
## Ends in an error in state: 186.
##
## attribute -> AT id_str . loption(attribute_arguments) [ TYPE RECORD LET IMPORT EXPORT ENUM AT ]
## attribute -> AT id_str . loption(attribute_arguments) eols [ TYPE RECORD LET IMPORT EXPORT ENUM AT ]
##
## The known suffix of the stack is as follows:
## AT id_str
##
program: AT WHILE
##
## Ends in an error in state: 181.
##
## attribute -> AT . id_str loption(attribute_arguments) [ TYPE RECORD LET IMPORT EXPORT ENUM AT ]
## attribute -> AT . id_str loption(attribute_arguments) eols [ TYPE RECORD LET IMPORT EXPORT ENUM AT ]
##
## The known suffix of the stack is as follows:
## AT
##
program: AT ID LPAREN RPAREN WHILE
##
## Ends in an error in state: 195.
##
## attribute -> AT id_str loption(attribute_arguments) . [ TYPE RECORD LET IMPORT EXPORT ENUM AT ]
## attribute -> AT id_str loption(attribute_arguments) . eols [ TYPE RECORD LET IMPORT EXPORT ENUM AT ]
##
## The known suffix of the stack is as follows:
## AT id_str loption(attribute_arguments)
##

Attributes are only allowed on let bindings, data declarations, and foreign statements.

program: AT ID LPAREN STRING COMMA WHILE
##
## Ends in an error in state: 192.
##
## lseparated_nonempty_list_inner(comma,attribute_argument) -> lseparated_nonempty_list_inner(comma,attribute_argument) comma . attribute_argument [ RPAREN EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,attribute_argument) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 88, spurious reduction of production comma -> COMMA
##
program: AT ID LPAREN WHILE
##
## Ends in an error in state: 187.
##
## attribute_arguments -> lparen . rparen [ TYPE RECORD LET IMPORT EXPORT EOL ENUM AT ]
## attribute_arguments -> lparen . lseparated_nonempty_list_inner(comma,attribute_argument) rparen [ TYPE RECORD LET IMPORT EXPORT EOL ENUM AT ]
##
## The known suffix of the stack is as follows:
## lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##

Expected a string.

program: AT ID LPAREN STRING WHILE
##
## Ends in an error in state: 190.
##
## attribute_arguments -> lparen lseparated_nonempty_list_inner(comma,attribute_argument) . rparen [ TYPE RECORD LET IMPORT EXPORT EOL ENUM AT ]
## lseparated_nonempty_list_inner(comma,attribute_argument) -> lseparated_nonempty_list_inner(comma,attribute_argument) . comma attribute_argument [ RPAREN EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lparen lseparated_nonempty_list_inner(comma,attribute_argument)
##

Expected a comma followed by more attribute parameters or `)` to complete the attribute.

program: DASH WHILE
##
## Ends in an error in state: 49.
##
## const -> option(dash_op) . NUMBER_INT [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## const -> option(dash_op) . NUMBER_FLOAT [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## const -> option(dash_op) . INT32 [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## const -> option(dash_op) . INT64 [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## const -> option(dash_op) . FLOAT32 [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## const -> option(dash_op) . FLOAT64 [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## const -> option(dash_op) . WASMI32 [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## const -> option(dash_op) . WASMI64 [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## const -> option(dash_op) . WASMF32 [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## const -> option(dash_op) . WASMF64 [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## option(dash_op)
##

Expected a number to follow the minus sign.

program: ENUM TYPEID LBRACE LBRACK ELLIPSIS RBRACK LPAREN TYPEID RCARET
##
## Ends in an error in state: 934.
##
## data_constructor -> lbrack ELLIPSIS rbrack lparen option(typs) . rparen [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lbrack ELLIPSIS rbrack lparen option(typs)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
## In state 81, spurious reduction of production lseparated_nonempty_list_inner(comma,typ) -> typ
## In state 87, spurious reduction of production option(comma) ->
## In state 90, spurious reduction of production typs -> lseparated_nonempty_list_inner(comma,typ) option(comma)
## In state 112, spurious reduction of production option(typs) -> typs
##
program: ENUM TYPEID LBRACE LBRACK ELLIPSIS RBRACK LPAREN WHILE
##
## Ends in an error in state: 933.
##
## data_constructor -> lbrack ELLIPSIS rbrack lparen . option(typs) rparen [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lbrack ELLIPSIS rbrack lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##
program: ENUM TYPEID LBRACE LBRACK ELLIPSIS RBRACK WHILE
##
## Ends in an error in state: 932.
##
## data_constructor -> lbrack ELLIPSIS rbrack . lparen option(typs) rparen [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lbrack ELLIPSIS rbrack
##
program: ENUM TYPEID LBRACE LBRACK ELLIPSIS WHILE
##
## Ends in an error in state: 931.
##
## data_constructor -> lbrack ELLIPSIS . rbrack lparen option(typs) rparen [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lbrack ELLIPSIS
##
program: ENUM TYPEID LBRACE LBRACK RBRACK WHILE
##
## Ends in an error in state: 926.
##
## data_constructors -> lbrace lseparated_nonempty_list_inner(comma,data_constructor) . option(comma) rbrace [ SEMI EOL EOF COMMA ]
## lseparated_nonempty_list_inner(comma,data_constructor) -> lseparated_nonempty_list_inner(comma,data_constructor) . comma data_constructor [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lbrace lseparated_nonempty_list_inner(comma,data_constructor)
##
program: ENUM TYPEID LBRACE LBRACK WHILE
##
## Ends in an error in state: 930.
##
## data_constructor -> lbrack . rbrack [ RBRACE EOL COMMA ]
## data_constructor -> lbrack . ELLIPSIS rbrack lparen option(typs) rparen [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##

Expected a list enum declaration using the syntax `enum List<a> { [], [...](a, List<a>) }`.

program: ENUM TYPEID LBRACE TYPEID COMMA EOL WHILE
##
## Ends in an error in state: 929.
##
## lseparated_nonempty_list_inner(comma,data_constructor) -> lseparated_nonempty_list_inner(comma,data_constructor) comma . data_constructor [ RBRACE EOL COMMA ]
## option(comma) -> comma . [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,data_constructor) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected a variant definition or `}` to complete the enum declaration.

program: ENUM TYPEID LBRACE TYPEID LPAREN TYPEID RCARET
##
## Ends in an error in state: 924.
##
## data_constructor -> TYPEID lparen option(typs) . rparen [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## TYPEID lparen option(typs)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
## In state 81, spurious reduction of production lseparated_nonempty_list_inner(comma,typ) -> typ
## In state 87, spurious reduction of production option(comma) ->
## In state 90, spurious reduction of production typs -> lseparated_nonempty_list_inner(comma,typ) option(comma)
## In state 112, spurious reduction of production option(typs) -> typs
##

Expected type parameters surrounded by `<`/`>`, a comma followed by more types, a dot followed by an identifier, or `)` to complete the variant definition.

program: ENUM TYPEID LBRACE TYPEID LPAREN WHILE
##
## Ends in an error in state: 923.
##
## data_constructor -> TYPEID lparen . option(typs) rparen [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## TYPEID lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##

Expected a type or `)` to complete the variant definition.

program: ENUM TYPEID LBRACE TYPEID RBRACE COMMA EOL WHILE
##
## Ends in an error in state: 959.
##
## separated_nonempty_list(comma,data_declaration_stmt) -> data_declaration_stmt comma . separated_nonempty_list(comma,data_declaration_stmt) [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## data_declaration_stmt comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##
program: ENUM TYPEID LBRACE TYPEID RBRACE COMMA EXPORT WHILE
##
## Ends in an error in state: 960.
##
## data_declaration_stmt -> EXPORT . data_declaration [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## EXPORT
##

Mutually recursive data declarations are separated by commas, but cannot be mixed with other kinds of expressions.

program: ENUM TYPEID LBRACE TYPEID WHILE
##
## Ends in an error in state: 922.
##
## data_constructor -> TYPEID . [ RBRACE EOL COMMA ]
## data_constructor -> TYPEID . lparen option(typs) rparen [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## TYPEID
##

Expected `(` followed by comma-separated types, a comma followed by more variants, or `}` to complete the enum declaration.

program: ENUM TYPEID LBRACE WHILE
##
## Ends in an error in state: 921.
##
## data_constructors -> lbrace . lseparated_nonempty_list_inner(comma,data_constructor) option(comma) rbrace [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## lbrace
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production lbrace -> LBRACE
##

Expected a capitalized variant name.

program: ENUM TYPEID LBRACE TYPEID RBRACE WHILE
##
## Ends in an error in state: 958.
##
## separated_nonempty_list(comma,data_declaration_stmt) -> data_declaration_stmt . [ SEMI EOL EOF ]
## separated_nonempty_list(comma,data_declaration_stmt) -> data_declaration_stmt . comma separated_nonempty_list(comma,data_declaration_stmt) [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## data_declaration_stmt
##

Expected a comma followed by more mutually-recursive data declarations or a newline character to complete the current one.

program: ENUM TYPEID LCARET ID RCARET ISNT
##
## Ends in an error in state: 920.
##
## data_declaration -> ENUM TYPEID option(id_vec) . data_constructors [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM TYPEID option(id_vec)
##

Expected `{` followed by comma-separated variants.

program: ENUM TYPEID WHILE
##
## Ends in an error in state: 919.
##
## data_declaration -> ENUM TYPEID . option(id_vec) data_constructors [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM TYPEID
##

Expected type parameters surrounded by angle brackets or `{` followed by comma-separated variants.

program: TYPE TYPEID WHILE
##
## Ends in an error in state: 804.
##
## data_declaration -> TYPE TYPEID . option(id_vec) equal typ [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## TYPE TYPEID
##

Expected type parameters surrounded by angle brackets or `=` followed by a type.

program: ENUM WHILE
##
## Ends in an error in state: 918.
##
## data_declaration -> ENUM . TYPEID option(id_vec) data_constructors [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM
##

Expected a capitalized name for the enum declaration.

program: TYPE WHILE
##
## Ends in an error in state: 803.
##
## data_declaration -> TYPE . TYPEID option(id_vec) equal typ [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## TYPE
##

Expected a capitalized name for the type alias.

program: EOL UNDERSCORE
##
## Ends in an error in state: 963.
##
## program -> eols . toplevel_stmts EOF [ # ]
##
## The known suffix of the stack is as follows:
## eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: EOL WASMI64 SEMI RBRACE
##
## Ends in an error in state: 797.
##
## lseparated_nonempty_list_inner(eos,toplevel_stmt) -> lseparated_nonempty_list_inner(eos,toplevel_stmt) eos . toplevel_stmt [ SEMI EOL EOF ]
## option(eos) -> eos . [ EOF ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(eos,toplevel_stmt) eos
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 321, spurious reduction of production eos -> SEMI
##
program: WHEN
##
## Ends in an error in state: 0.
##
## program' -> . program [ # ]
##
## The known suffix of the stack is as follows:
##
##

Expected an import, export, expression, or type declaration.

program: EOL WASMI64 THICKARROW
##
## Ends in an error in state: 795.
##
## lseparated_nonempty_list_inner(eos,toplevel_stmt) -> lseparated_nonempty_list_inner(eos,toplevel_stmt) . eos toplevel_stmt [ SEMI EOL EOF ]
## toplevel_stmts -> lseparated_nonempty_list_inner(eos,toplevel_stmt) . option(eos) [ EOF ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(eos,toplevel_stmt)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 799, spurious reduction of production toplevel_stmt -> expr
## In state 792, spurious reduction of production lseparated_nonempty_list_inner(eos,toplevel_stmt) -> toplevel_stmt
##

Expected an infix operator to continue the expression or a newline character to terminate it.

program: LBRACE BREAK RBRACE DOT EOL ID EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 295.
##
## record_set -> braced_expr DOT eols simple_id equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr DOT eols simple_id equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: LBRACE BREAK RBRACE DOT ID EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 291.
##
## record_set -> braced_expr DOT simple_id equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr DOT simple_id equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: LBRACE BREAK RBRACE GETS EOL UNDERSCORE
##
## Ends in an error in state: 232.
##
## assign_expr -> braced_expr GETS eols . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr GETS eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: LBRACE BREAK RBRACE GETS WHEN
##
## Ends in an error in state: 230.
##
## assign_expr -> braced_expr GETS . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## assign_expr -> braced_expr GETS . eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr GETS
##
program: LBRACE BREAK RBRACE LBRACK WASMI64 RBRACK EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 306.
##
## array_set -> braced_expr lbrack expr rbrack equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr lbrack expr rbrack equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: LBRACE TYPEID COLON EOL UNDERSCORE
##
## Ends in an error in state: 313.
##
## non_punned_record_field -> id COLON eols . expr [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## id COLON eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: LBRACE TYPEID COLON WHEN
##
## Ends in an error in state: 213.
##
## non_punned_record_field -> id COLON . expr [ RBRACE EOL COMMA ]
## non_punned_record_field -> id COLON . eols expr [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## id COLON
##
program: LBRACK ELLIPSIS WHEN
##
## Ends in an error in state: 179.
##
## list_item -> ELLIPSIS . expr [ RBRACK EOL COMMA ]
##
## The known suffix of the stack is as follows:
## ELLIPSIS
##
program: LET WASMI64 EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 403.
##
## value_bind -> pattern equal . expr [ SEMI RBRACE EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## pattern equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: LPAREN BREAK RPAREN DOT EOL ID EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 595.
##
## record_set -> paren_expr DOT eols simple_id equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr DOT eols simple_id equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: LPAREN BREAK RPAREN DOT ID EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 591.
##
## record_set -> paren_expr DOT simple_id equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr DOT simple_id equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: LPAREN BREAK RPAREN GETS EOL UNDERSCORE
##
## Ends in an error in state: 587.
##
## assign_expr -> paren_expr GETS eols . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr GETS eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: LPAREN BREAK RPAREN GETS WHEN
##
## Ends in an error in state: 48.
##
## assign_expr -> paren_expr GETS . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## assign_expr -> paren_expr GETS . eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr GETS
##
program: LPAREN BREAK RPAREN LBRACK UNDERSCORE
##
## Ends in an error in state: 597.
##
## array_get -> paren_expr lbrack . expr rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## array_set -> paren_expr lbrack . expr rbrack equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##
program: LPAREN BREAK RPAREN LBRACK WASMI64 RBRACK EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 600.
##
## array_set -> paren_expr lbrack expr rbrack equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr lbrack expr rbrack equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: LPAREN UNDERSCORE
##
## Ends in an error in state: 154.
##
## non_modid -> lparen . special_op rparen [ THICKARROW STAREQ STAR SLASHEQ SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUSEQ PLUS PIPEPIPE PIPE PERCENTEQ PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQUAL EQEQ EOL EOF ELSE DOT DASHEQ DASH COMMA COLON CARET AMPAMP AMP ]
## paren_expr -> lparen . expr rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## simple_expr -> lparen . tuple_exprs rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##
program: LPAREN WASMI64 COMMA EOL UNDERSCORE
##
## Ends in an error in state: 496.
##
## tuple_exprs -> expr COMMA eols . lseparated_nonempty_list_inner(comma,expr) option(comma) [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## expr COMMA eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: MATCH LPAREN UNDERSCORE
##
## Ends in an error in state: 15.
##
## match_expr -> MATCH lparen . expr rparen lbrace match_branches rbrace [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## MATCH lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##
program: MATCH LPAREN WASMI64 RPAREN LBRACE WASMI64 THICKARROW EOL UNDERSCORE
##
## Ends in an error in state: 748.
##
## match_branch -> pattern thickarrow . expr [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## pattern thickarrow
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 28, spurious reduction of production thickarrow -> THICKARROW eols
##
program: MATCH LPAREN WASMI64 RPAREN LBRACE WASMI64 WHEN WHEN
##
## Ends in an error in state: 743.
##
## when_guard -> WHEN . expr [ THICKARROW ]
##
## The known suffix of the stack is as follows:
## WHEN
##
program: NOT WHEN
##
## Ends in an error in state: 13.
##
## prim1_expr -> NOT . non_assign_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## NOT
##
program: THROW WHEN
##
## Ends in an error in state: 11.
##
## stmt_expr -> THROW . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## THROW
##
program: WASMI64 AMP EOL UNDERSCORE
##
## Ends in an error in state: 574.
##
## binop_expr -> non_stmt_expr AMP eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr AMP eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WHILE LPAREN WASMI64 RPAREN LBRACE UNDERSCORE
##
## Ends in an error in state: 642.
##
## block -> lbrace . block_body rbrace [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lbrace
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production lbrace -> LBRACE
##
program: MATCH LPAREN FLOAT32 RPAREN LBRACE NUMBER_INT WHEN FLOAT32 THICKARROW WHEN
##
## Ends in an error in state: 746.
##
## match_branch -> pattern when_guard thickarrow . expr [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## pattern when_guard thickarrow
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 27, spurious reduction of production thickarrow -> THICKARROW
##
program: MATCH LPAREN FLOAT32 RPAREN LBRACE NUMBER_INT EOL WHEN WHEN
##
## Ends in an error in state: 751.
##
## when_guard -> eols WHEN . expr [ THICKARROW ]
##
## The known suffix of the stack is as follows:
## eols WHEN
##

Expected an expression.

program: EXCEPTION TYPEID LPAREN TYPEID COMMA EOL WHILE
##
## Ends in an error in state: 91.
##
## lseparated_nonempty_list_inner(comma,typ) -> lseparated_nonempty_list_inner(comma,typ) comma . typ [ RPAREN RCARET EOL COMMA ]
## option(comma) -> comma . [ RPAREN RCARET EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,typ) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##
program: EXCEPTION TYPEID LPAREN WHILE
##
## Ends in an error in state: 787.
##
## exception_stmt -> EXCEPTION type_id_str lparen . option(typs) rparen [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## EXCEPTION type_id_str lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##
program: LET WASMI64 COLON EOL WHILE
##
## Ends in an error in state: 347.
##
## pattern -> pattern COLON eols . typ [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## pattern COLON eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: LET WASMI64 COLON WHILE
##
## Ends in an error in state: 345.
##
## pattern -> pattern COLON . typ [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## pattern -> pattern COLON . eols typ [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## pattern COLON
##
program: PRIMITIVE ID COLON EOL WHILE
##
## Ends in an error in state: 780.
##
## primitive_stmt -> PRIMITIVE id_str COLON eols . typ equal STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE id_str COLON eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: PRIMITIVE ID COLON WHILE
##
## Ends in an error in state: 776.
##
## primitive_stmt -> PRIMITIVE id_str COLON . typ equal STRING [ SEMI EOL EOF ]
## primitive_stmt -> PRIMITIVE id_str COLON . eols typ equal STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE id_str COLON
##
program: PRIMITIVE THROW COLON EOL WHILE
##
## Ends in an error in state: 771.
##
## primitive_stmt -> PRIMITIVE prim COLON eols . typ equal STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE prim COLON eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: PRIMITIVE THROW COLON WHILE
##
## Ends in an error in state: 767.
##
## primitive_stmt -> PRIMITIVE prim COLON . typ equal STRING [ SEMI EOL EOF ]
## primitive_stmt -> PRIMITIVE prim COLON . eols typ equal STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE prim COLON
##
program: RECORD TYPEID LBRACE ID COLON EOL WHILE
##
## Ends in an error in state: 830.
##
## data_label -> simple_id COLON eols . typ [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## simple_id COLON eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: RECORD TYPEID LBRACE ID COLON WHILE
##
## Ends in an error in state: 828.
##
## data_label -> simple_id COLON . typ [ RBRACE EOL COMMA ]
## data_label -> simple_id COLON . eols typ [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## simple_id COLON
##

Expected a type.

program: EXCEPTION TYPEID LPAREN TYPEID RCARET
##
## Ends in an error in state: 788.
##
## exception_stmt -> EXCEPTION type_id_str lparen option(typs) . rparen [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## EXCEPTION type_id_str lparen option(typs)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
## In state 81, spurious reduction of production lseparated_nonempty_list_inner(comma,typ) -> typ
## In state 87, spurious reduction of production option(comma) ->
## In state 90, spurious reduction of production typs -> lseparated_nonempty_list_inner(comma,typ) option(comma)
## In state 112, spurious reduction of production option(typs) -> typs
##

Expected `)` to complete the exception declaration.

program: EXCEPTION TYPEID LPAREN TYPEID WHEN
##
## Ends in an error in state: 87.
##
## lseparated_nonempty_list_inner(comma,typ) -> lseparated_nonempty_list_inner(comma,typ) . comma typ [ RPAREN RCARET EOL COMMA ]
## typs -> lseparated_nonempty_list_inner(comma,typ) . option(comma) [ RPAREN RCARET EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,typ)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
## In state 81, spurious reduction of production lseparated_nonempty_list_inner(comma,typ) -> typ
##

Expected type parameters surrounded by angle brackets or a comma followed by more types.

program: EXCEPTION TYPEID WHILE
##
## Ends in an error in state: 786.
##
## exception_stmt -> EXCEPTION type_id_str . [ SEMI EOL EOF ]
## exception_stmt -> EXCEPTION type_id_str . lparen option(typs) rparen [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## EXCEPTION type_id_str
##

Expected `(` followed by comma-separated types or a newline to complete the exception declaration.

program: EXCEPTION WHILE
##
## Ends in an error in state: 784.
##
## exception_stmt -> EXCEPTION . type_id_str [ SEMI EOL EOF ]
## exception_stmt -> EXCEPTION . type_id_str lparen option(typs) rparen [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## EXCEPTION
##

Expected a capitalized name for the exception.

program: EXPORT LET MUT WHILE
##
## Ends in an error in state: 915.
##
## export_stmt -> attributes EXPORT LET MUT . value_binds [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## attributes EXPORT LET MUT
##
program: EXPORT LET REC MUT WHILE
##
## Ends in an error in state: 912.
##
## export_stmt -> attributes EXPORT LET REC MUT . value_binds [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## attributes EXPORT LET REC MUT
##
program: EXPORT LET REC WHILE
##
## Ends in an error in state: 911.
##
## export_stmt -> attributes EXPORT LET REC . value_binds [ SEMI EOL EOF ]
## export_stmt -> attributes EXPORT LET REC . MUT value_binds [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## attributes EXPORT LET REC
##
program: LBRACE LET MUT WHILE
##
## Ends in an error in state: 409.
##
## let_expr -> attributes LET MUT . value_binds [ SEMI RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## attributes LET MUT
##
program: LBRACE LET REC MUT WHILE
##
## Ends in an error in state: 333.
##
## let_expr -> attributes LET REC MUT . value_binds [ SEMI RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## attributes LET REC MUT
##
program: LET MUT WHILE
##
## Ends in an error in state: 844.
##
## toplevel_stmt -> attributes LET MUT . value_binds [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## attributes LET MUT
##
program: LET REC MUT WHILE
##
## Ends in an error in state: 841.
##
## toplevel_stmt -> attributes LET REC MUT . value_binds [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## attributes LET REC MUT
##

Expected a binding pattern, such as an identifier.

program: EXPORT LET WHILE
##
## Ends in an error in state: 910.
##
## export_stmt -> attributes EXPORT LET . REC value_binds [ SEMI EOL EOF ]
## export_stmt -> attributes EXPORT LET . value_binds [ SEMI EOL EOF ]
## export_stmt -> attributes EXPORT LET . REC MUT value_binds [ SEMI EOL EOF ]
## export_stmt -> attributes EXPORT LET . MUT value_binds [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## attributes EXPORT LET
##
program: LBRACE LET WHILE
##
## Ends in an error in state: 329.
##
## let_expr -> attributes LET . REC value_binds [ SEMI RBRACE EOL ]
## let_expr -> attributes LET . value_binds [ SEMI RBRACE EOL ]
## let_expr -> attributes LET . REC MUT value_binds [ SEMI RBRACE EOL ]
## let_expr -> attributes LET . MUT value_binds [ SEMI RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## attributes LET
##
program: LET WHILE
##
## Ends in an error in state: 839.
##
## toplevel_stmt -> attributes LET . REC value_binds [ SEMI EOL EOF ]
## toplevel_stmt -> attributes LET . value_binds [ SEMI EOL EOF ]
## toplevel_stmt -> attributes LET . REC MUT value_binds [ SEMI EOL EOF ]
## toplevel_stmt -> attributes LET . MUT value_binds [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## attributes LET
##

Expected the keyword `rec`, the keyword `mut`, or a binding pattern, such as an identifier.

program: EXPORT STAR EXCEPT TYPEID COMMA EOL WHILE
##
## Ends in an error in state: 904.
##
## lseparated_nonempty_list_inner(comma,export_id_str) -> lseparated_nonempty_list_inner(comma,export_id_str) comma . export_id_str [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,export_id_str) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected an identifier to exclude from the export.

program: EXPORT STAR EXCEPT TYPEID COMMA TYPEID WHILE
##
## Ends in an error in state: 903.
##
## export_exception -> EXCEPT lseparated_nonempty_list_inner(comma,export_id_str) . [ SEMI EOL EOF ]
## lseparated_nonempty_list_inner(comma,export_id_str) -> lseparated_nonempty_list_inner(comma,export_id_str) . comma export_id_str [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## EXCEPT lseparated_nonempty_list_inner(comma,export_id_str)
##

Expected a comma followed by another identifier to exclude or a newline character to complete the export statement.

program: EXPORT STAR EXCEPT WHILE
##
## Ends in an error in state: 901.
##
## export_exception -> EXCEPT . lseparated_nonempty_list_inner(comma,export_id_str) [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## EXCEPT
##

Expected an identifier to exclude from the export.

program: EXPORT STAR WHILE
##
## Ends in an error in state: 900.
##
## export_stmt -> attributes EXPORT STAR . option(export_exception) [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## attributes EXPORT STAR
##

Expected the keyword `except` followed by comma-separated identifiers to exclude or a newline character to complete the statement.

program: EXPORT TYPEID AS TYPEID WHILE
##
## Ends in an error in state: 952.
##
## separated_nonempty_list(comma,aliasable(any_id_str)) -> aliasable(any_id_str) . [ SEMI EOL EOF ]
## separated_nonempty_list(comma,aliasable(any_id_str)) -> aliasable(any_id_str) . comma separated_nonempty_list(comma,aliasable(any_id_str)) [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## aliasable(any_id_str)
##

Expected a comma followed by another identifier to export or a newline character to complete the statement.

program: EXPORT TYPEID AS WHILE
##
## Ends in an error in state: 948.
##
## as_prefix(any_id_str) -> AS . any_id_str [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## AS
##
program: LET NUMBER_INT AS WHILE
##
## Ends in an error in state: 367.
##
## pattern -> pattern AS . id_str [ WHEN THICKARROW RPAREN RBRACK RBRACE PIPE EQUAL EOL COMMA COLON AS ]
## pattern -> pattern AS . eols id_str [ WHEN THICKARROW RPAREN RBRACK RBRACE PIPE EQUAL EOL COMMA COLON AS ]
##
## The known suffix of the stack is as follows:
## pattern AS
##
program: LET NUMBER_INT AS EOL WHILE
##
## Ends in an error in state: 369.
##
## pattern -> pattern AS eols . id_str [ WHEN THICKARROW RPAREN RBRACK RBRACE PIPE EQUAL EOL COMMA COLON AS ]
##
## The known suffix of the stack is as follows:
## pattern AS eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##

Expected an identifier to use as an alias.

program: EXPORT TYPEID COMMA EOL WHILE
##
## Ends in an error in state: 953.
##
## separated_nonempty_list(comma,aliasable(any_id_str)) -> aliasable(any_id_str) comma . separated_nonempty_list(comma,aliasable(any_id_str)) [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## aliasable(any_id_str) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected another identifier to export.

program: EXPORT TYPEID WHILE
##
## Ends in an error in state: 947.
##
## aliasable(any_id_str) -> any_id_str . option(as_prefix(any_id_str)) [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## any_id_str
##

Expected a comma followed by another identifier to export or a newline character to complete the statement.

program: EXPORT WHILE
##
## Ends in an error in state: 899.
##
## data_declaration_stmt -> EXPORT . data_declaration [ SEMI EOL EOF COMMA ]
## export_stmt -> attributes EXPORT . LET REC value_binds [ SEMI EOL EOF ]
## export_stmt -> attributes EXPORT . LET value_binds [ SEMI EOL EOF ]
## export_stmt -> attributes EXPORT . LET REC MUT value_binds [ SEMI EOL EOF ]
## export_stmt -> attributes EXPORT . LET MUT value_binds [ SEMI EOL EOF ]
## export_stmt -> attributes EXPORT . foreign_stmt [ SEMI EOL EOF ]
## export_stmt -> attributes EXPORT . primitive_stmt [ SEMI EOL EOF ]
## export_stmt -> attributes EXPORT . exception_stmt [ SEMI EOL EOF ]
## export_stmt -> attributes EXPORT . separated_nonempty_list(comma,aliasable(any_id_str)) [ SEMI EOL EOF ]
## export_stmt -> attributes EXPORT . STAR option(export_exception) [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## attributes EXPORT
##

Expected a let binding, data declaration, exception, comma-separated list of identifiers, or `*` to export all values.

program: FAIL WHEN
##
## Ends in an error in state: 33.
##
## stmt_expr -> FAIL . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FAIL
##

Expected the `fail` keyword followed by an expression.

program: FOR LPAREN SEMI EOL SEMI EOL RPAREN WHILE
##
## Ends in an error in state: 668.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI eols for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI eols for_inner_expr rparen
##
program: FOR LPAREN SEMI EOL SEMI RPAREN WHILE
##
## Ends in an error in state: 664.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI for_inner_expr rparen
##
program: FOR LPAREN SEMI EOL WASMI64 EOL SEMI EOL RPAREN WHILE
##
## Ends in an error in state: 677.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI eols for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI eols for_inner_expr rparen
##
program: FOR LPAREN SEMI EOL WASMI64 EOL SEMI RPAREN WHILE
##
## Ends in an error in state: 673.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI for_inner_expr rparen
##
program: FOR LPAREN SEMI SEMI EOL RPAREN WHILE
##
## Ends in an error in state: 649.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI eols for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI eols for_inner_expr rparen
##
program: FOR LPAREN SEMI SEMI RPAREN WHILE
##
## Ends in an error in state: 641.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI for_inner_expr rparen
##
program: FOR LPAREN SEMI WASMI64 EOL SEMI EOL RPAREN WHILE
##
## Ends in an error in state: 658.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI eols for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI eols for_inner_expr rparen
##
program: FOR LPAREN SEMI WASMI64 EOL SEMI RPAREN WHILE
##
## Ends in an error in state: 654.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI for_inner_expr rparen
##
program: FOR LPAREN WASMI64 EOL SEMI EOL SEMI EOL RPAREN WHILE
##
## Ends in an error in state: 707.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI eols for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI eols for_inner_expr rparen
##
program: FOR LPAREN WASMI64 EOL SEMI EOL SEMI RPAREN WHILE
##
## Ends in an error in state: 703.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI for_inner_expr rparen
##
program: FOR LPAREN WASMI64 EOL SEMI EOL WASMI64 EOL SEMI EOL RPAREN WHILE
##
## Ends in an error in state: 716.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI eols for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI eols for_inner_expr rparen
##
program: FOR LPAREN WASMI64 EOL SEMI EOL WASMI64 EOL SEMI RPAREN WHILE
##
## Ends in an error in state: 712.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI for_inner_expr rparen
##
program: FOR LPAREN WASMI64 EOL SEMI SEMI EOL RPAREN WHILE
##
## Ends in an error in state: 688.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI eols for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI eols for_inner_expr rparen
##
program: FOR LPAREN WASMI64 EOL SEMI SEMI RPAREN WHILE
##
## Ends in an error in state: 684.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI for_inner_expr rparen
##
program: FOR LPAREN WASMI64 EOL SEMI WASMI64 EOL SEMI EOL RPAREN WHILE
##
## Ends in an error in state: 697.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI eols for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI eols for_inner_expr rparen
##
program: FOR LPAREN WASMI64 EOL SEMI WASMI64 EOL SEMI RPAREN WHILE
##
## Ends in an error in state: 693.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI for_inner_expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI for_inner_expr rparen
##

Expected `{` to start a block.

program: FOR LPAREN SEMI EOL SEMI EOL WASMI64 RBRACK
##
## Ends in an error in state: 667.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI eols for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI eols for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN SEMI EOL SEMI WASMI64 RBRACK
##
## Ends in an error in state: 663.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN SEMI EOL WASMI64 EOL SEMI EOL UNDERSCORE
##
## Ends in an error in state: 675.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI eols . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN SEMI EOL WASMI64 EOL SEMI EOL WASMI64 RBRACK
##
## Ends in an error in state: 676.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI eols for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI eols for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN SEMI EOL WASMI64 EOL SEMI WASMI64 RBRACK
##
## Ends in an error in state: 672.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN SEMI SEMI EOL WASMI64 RBRACK
##
## Ends in an error in state: 648.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI eols for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI eols for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN SEMI SEMI WASMI64 RBRACK
##
## Ends in an error in state: 640.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN SEMI WASMI64 EOL SEMI EOL WASMI64 RBRACK
##
## Ends in an error in state: 657.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI eols for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI eols for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN SEMI WASMI64 EOL SEMI WASMI64 RBRACK
##
## Ends in an error in state: 653.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN WASMI64 EOL SEMI EOL SEMI EOL WASMI64 RBRACK
##
## Ends in an error in state: 706.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI eols for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI eols for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN WASMI64 EOL SEMI EOL SEMI WASMI64 RBRACK
##
## Ends in an error in state: 702.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN WASMI64 EOL SEMI EOL WASMI64 EOL SEMI EOL WASMI64 RBRACK
##
## Ends in an error in state: 715.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI eols for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI eols for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN WASMI64 EOL SEMI EOL WASMI64 EOL SEMI WASMI64 RBRACK
##
## Ends in an error in state: 711.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN WASMI64 EOL SEMI SEMI EOL WASMI64 RBRACK
##
## Ends in an error in state: 687.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI eols for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI eols for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN WASMI64 EOL SEMI SEMI WASMI64 RBRACK
##
## Ends in an error in state: 683.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN WASMI64 EOL SEMI WASMI64 EOL SEMI EOL WASMI64 RBRACK
##
## Ends in an error in state: 696.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI eols for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI eols for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN WASMI64 EOL SEMI WASMI64 EOL SEMI WASMI64 RBRACK
##
## Ends in an error in state: 692.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI for_inner_expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##

Expected `)` followed by `{` to start a block.

program: FOR LPAREN SEMI EOL SEMI WHEN
##
## Ends in an error in state: 662.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI . eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI
##
program: FOR LPAREN SEMI EOL WASMI64 EOL SEMI WHEN
##
## Ends in an error in state: 671.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI . eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI
##
program: FOR LPAREN SEMI SEMI EOL UNDERSCORE
##
## Ends in an error in state: 647.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI eols . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN SEMI SEMI WHEN
##
## Ends in an error in state: 639.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI . eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr SEMI
##
program: FOR LPAREN SEMI WASMI64 EOL SEMI EOL UNDERSCORE
##
## Ends in an error in state: 656.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI eols . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN SEMI WASMI64 EOL SEMI WHEN
##
## Ends in an error in state: 652.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI . eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr eols SEMI
##
program: FOR LPAREN SEMI EOL SEMI EOL UNDERSCORE
##
## Ends in an error in state: 666.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI eols . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr SEMI eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN WASMI64 EOL SEMI EOL SEMI EOL UNDERSCORE
##
## Ends in an error in state: 705.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI eols . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN WASMI64 EOL SEMI EOL SEMI WHEN
##
## Ends in an error in state: 701.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI . eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI
##
program: FOR LPAREN WASMI64 EOL SEMI EOL WASMI64 EOL SEMI EOL UNDERSCORE
##
## Ends in an error in state: 714.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI eols . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN WASMI64 EOL SEMI EOL WASMI64 EOL SEMI WHEN
##
## Ends in an error in state: 710.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI . eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI
##
program: FOR LPAREN WASMI64 EOL SEMI SEMI EOL UNDERSCORE
##
## Ends in an error in state: 686.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI eols . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN WASMI64 EOL SEMI SEMI WHEN
##
## Ends in an error in state: 682.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI . eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr SEMI
##
program: FOR LPAREN WASMI64 EOL SEMI WASMI64 EOL SEMI EOL UNDERSCORE
##
## Ends in an error in state: 695.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI eols . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN WASMI64 EOL SEMI WASMI64 EOL SEMI WHEN
##
## Ends in an error in state: 691.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI . for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI . eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI
##

Expected an expression or an immediate `)` to skip the increment expression.

program: FOR LPAREN SEMI EOL UNDERSCORE
##
## Ends in an error in state: 660.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols . for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI eols . for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI eols . for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI eols . for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN SEMI EOL WASMI64 EOL WHILE
##
## Ends in an error in state: 670.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols . SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols . SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN SEMI WHEN
##
## Ends in an error in state: 637.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI . for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI . for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI . for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI . for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI . eols for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI . eols for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI . eols for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI . eols for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI
##
program: FOR LPAREN WASMI64 EOL SEMI EOL UNDERSCORE
##
## Ends in an error in state: 699.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols . for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols . for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols . for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols . for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##

Expected an expression or an immediate semicolon to skip the condition expression.

program: FOR LPAREN SEMI EOL WASMI64 RPAREN
##
## Ends in an error in state: 661.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr . SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr . SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr . eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI eols for_inner_expr . eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI eols for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN SEMI WASMI64 EOL WHILE
##
## Ends in an error in state: 651.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr eols . SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr eols . SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN SEMI WASMI64 RPAREN
##
## Ends in an error in state: 638.
##
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr . SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr . SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr . eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) SEMI for_inner_expr . eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) SEMI for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN WASMI64 EOL SEMI EOL WASMI64 EOL WHILE
##
## Ends in an error in state: 709.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols . SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols . SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN WASMI64 EOL SEMI EOL WASMI64 RPAREN
##
## Ends in an error in state: 700.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr . SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr . SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr . eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr . eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI eols for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##
program: FOR LPAREN WASMI64 EOL SEMI WASMI64 EOL WHILE
##
## Ends in an error in state: 690.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols . SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols . SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN WASMI64 EOL SEMI WASMI64 RPAREN
##
## Ends in an error in state: 681.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr . SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr . SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr . eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI for_inner_expr . eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI for_inner_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 646, spurious reduction of production for_inner_expr -> expr
##

Expected a semicolon to complete the loop condition.

program: FOR LPAREN UNDERSCORE
##
## Ends in an error in state: 31.
##
## for_expr -> FOR lparen . option(block_body_expr) SEMI for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) SEMI for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) SEMI for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) SEMI for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) SEMI eols for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) SEMI eols for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) SEMI eols for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) SEMI eols for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) eols SEMI for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) eols SEMI for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) eols SEMI for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) eols SEMI for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) eols SEMI eols for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) eols SEMI eols for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen . option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##
program: FOR LPAREN WASMI64 EOL SEMI WHEN
##
## Ends in an error in state: 680.
##
## for_expr -> FOR lparen option(block_body_expr) eols SEMI . for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI . for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI . for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI . for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI . eols for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI . eols for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI . eols for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols SEMI . eols for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols SEMI
##

Expected an expression or an immediate semicolon to skip the loop initializer expression.

program: FOR LPAREN WASMI64 EOL WHILE
##
## Ends in an error in state: 679.
##
## for_expr -> FOR lparen option(block_body_expr) eols . SEMI for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols . SEMI for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols . SEMI for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols . SEMI for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols . SEMI eols for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols . SEMI eols for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols . SEMI eols for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) eols . SEMI eols for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr) eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: FOR LPAREN WASMI64 RPAREN
##
## Ends in an error in state: 636.
##
## for_expr -> FOR lparen option(block_body_expr) . SEMI for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . SEMI for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . SEMI for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . SEMI for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . SEMI eols for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . SEMI eols for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . SEMI eols for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . SEMI eols for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . eols SEMI for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . eols SEMI for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . eols SEMI for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . eols SEMI for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . eols SEMI eols for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . eols SEMI eols for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . eols SEMI eols for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR lparen option(block_body_expr) . eols SEMI eols for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR lparen option(block_body_expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 326, spurious reduction of production block_body_expr -> expr
## In state 718, spurious reduction of production option(block_body_expr) -> block_body_expr
##

Expected a semicolon to complete the loop initializer expression.

program: FOR WHILE
##
## Ends in an error in state: 30.
##
## for_expr -> FOR . lparen option(block_body_expr) SEMI for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) SEMI for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) SEMI for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) SEMI for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) SEMI eols for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) SEMI eols for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) SEMI eols for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) eols SEMI for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) eols SEMI for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) eols SEMI for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) eols SEMI eols for_inner_expr SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## for_expr -> FOR . lparen option(block_body_expr) eols SEMI eols for_inner_expr eols SEMI eols for_inner_expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FOR
##

Expected `(` to set the for loop parameters.

program: FUN ID THICKARROW WHEN
##
## Ends in an error in state: 29.
##
## lam_expr -> FUN ID thickarrow . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN ID thickarrow
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 27, spurious reduction of production thickarrow -> THICKARROW
##
program: WHILE LPAREN WASMI64 RPAREN WHILE
##
## Ends in an error in state: 762.
##
## while_expr -> WHILE lparen expr rparen . block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## WHILE lparen expr rparen
##

Expected an expression or `{` to start a block.

program: FUN ID WHILE
##
## Ends in an error in state: 26.
##
## lam_expr -> FUN ID . thickarrow expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN ID
##
program: FUN LPAREN RPAREN WHILE
##
## Ends in an error in state: 723.
##
## lam_expr -> FUN lparen option(patterns) rparen . thickarrow expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN lparen option(patterns) rparen
##

# This message can never appear since the FUN token is injected _because_ of the arrow.
Expected `=>` after the function argument.

program: FUN LPAREN RPAREN THICKARROW EOL UNDERSCORE
##
## Ends in an error in state: 724.
##
## lam_expr -> FUN lparen option(patterns) rparen thickarrow . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN lparen option(patterns) rparen thickarrow
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 28, spurious reduction of production thickarrow -> THICKARROW eols
##

Expected a function body—a block surrounded by `{`/`}` or a single expression.

program: FUN LPAREN WASMI64 COMMA EOL WASMI64 WHILE
##
## Ends in an error in state: 357.
##
## lseparated_nonempty_list_inner(comma,pattern) -> lseparated_nonempty_list_inner(comma,pattern) comma pattern . [ RPAREN RBRACK EOL COMMA ]
## pattern -> pattern . COLON typ [ RPAREN RBRACK EOL COMMA COLON ]
## pattern -> pattern . COLON eols typ [ RPAREN RBRACK EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,pattern) comma pattern
##
program: FUN LPAREN WASMI64 WHILE
##
## Ends in an error in state: 344.
##
## lseparated_nonempty_list_inner(comma,pattern) -> pattern . [ RPAREN RBRACK EOL COMMA ]
## pattern -> pattern . COLON typ [ RPAREN RBRACK EOL COMMA COLON ]
## pattern -> pattern . COLON eols typ [ RPAREN RBRACK EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## pattern
##

Expected a type annotation, a comma followed by more patterns, `)`, or `]`.

program: FUN LPAREN WASMI64 COMMA EOL WHILE
##
## Ends in an error in state: 356.
##
## lseparated_nonempty_list_inner(comma,pattern) -> lseparated_nonempty_list_inner(comma,pattern) comma . pattern [ RPAREN RBRACK EOL COMMA ]
## option(comma) -> comma . [ RPAREN RBRACK EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,pattern) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected another pattern, `)`, or `]`.

program: FUN LPAREN WASMI64 RBRACK
##
## Ends in an error in state: 722.
##
## lam_expr -> FUN lparen option(patterns) . rparen thickarrow expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN lparen option(patterns)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 344, spurious reduction of production lseparated_nonempty_list_inner(comma,pattern) -> pattern
## In state 354, spurious reduction of production option(comma) ->
## In state 355, spurious reduction of production patterns -> lseparated_nonempty_list_inner(comma,pattern) option(comma)
## In state 721, spurious reduction of production option(patterns) -> patterns
##

Expected `)` to complete the function arguments.

program: FUN LPAREN WHILE
##
## Ends in an error in state: 720.
##
## lam_expr -> FUN lparen . option(patterns) rparen thickarrow expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##

Expected a function argument or `)` for a function with no arguments.

program: FUN WHILE
##
## Ends in an error in state: 25.
##
## lam_expr -> FUN . lparen option(patterns) rparen thickarrow expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## lam_expr -> FUN . ID thickarrow expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN
##

# This message can never appear since the FUN token is injected because this is already syntactically correct.
Expected an identifier for a single argument function or `(` for a multiple argument function.

program: IF LPAREN UNDERSCORE
##
## Ends in an error in state: 23.
##
## if_expr -> IF lparen . expr rparen expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen . expr rparen expr ELSE expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen . expr rparen expr ELSE eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen . expr rparen eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen . expr rparen eols expr ELSE expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen . expr rparen eols expr ELSE eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## IF lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##

Expected a condition expression.

program: IF LPAREN WASMI64 RPAREN CONTINUE WHILE
##
## Ends in an error in state: 728.
##
## if_expr -> IF lparen expr rparen expr . [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen expr . ELSE expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen expr . ELSE eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## IF lparen expr rparen expr
##
program: IF LPAREN WASMI64 RPAREN EOL CONTINUE WHILE
##
## Ends in an error in state: 734.
##
## if_expr -> IF lparen expr rparen eols expr . [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen eols expr . ELSE expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen eols expr . ELSE eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## IF lparen expr rparen eols expr
##

Expected a newline character to end the `if` statement or `else` to provide an “else” branch.

program: IF LPAREN WASMI64 RPAREN EOL UNDERSCORE
##
## Ends in an error in state: 733.
##
## if_expr -> IF lparen expr rparen eols . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen eols . expr ELSE expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen eols . expr ELSE eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## IF lparen expr rparen eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: IF LPAREN WASMI64 RPAREN EOL WASMI64 ELSE EOL UNDERSCORE
##
## Ends in an error in state: 737.
##
## if_expr -> IF lparen expr rparen eols expr ELSE eols . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## IF lparen expr rparen eols expr ELSE eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: IF LPAREN WASMI64 RPAREN EOL WASMI64 ELSE WHEN
##
## Ends in an error in state: 735.
##
## if_expr -> IF lparen expr rparen eols expr ELSE . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen eols expr ELSE . eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## IF lparen expr rparen eols expr ELSE
##
program: IF LPAREN WASMI64 RPAREN WASMI64 ELSE EOL UNDERSCORE
##
## Ends in an error in state: 731.
##
## if_expr -> IF lparen expr rparen expr ELSE eols . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## IF lparen expr rparen expr ELSE eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: IF LPAREN WASMI64 RPAREN WASMI64 ELSE WHEN
##
## Ends in an error in state: 729.
##
## if_expr -> IF lparen expr rparen expr ELSE . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen expr ELSE . eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## IF lparen expr rparen expr ELSE
##
program: IF LPAREN WASMI64 RPAREN WHEN
##
## Ends in an error in state: 727.
##
## if_expr -> IF lparen expr rparen . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen . expr ELSE expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen . expr ELSE eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen . eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen . eols expr ELSE expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr rparen . eols expr ELSE eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## IF lparen expr rparen
##

Expected a block surrounded by `{`/`}` or a single expression.

program: IF LPAREN WASMI64 THICKARROW
##
## Ends in an error in state: 726.
##
## if_expr -> IF lparen expr . rparen expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr . rparen expr ELSE expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr . rparen expr ELSE eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr . rparen eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr . rparen eols expr ELSE expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF lparen expr . rparen eols expr ELSE eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## IF lparen expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##

Expected `)` to complete the if condition.

program: IF WHILE
##
## Ends in an error in state: 22.
##
## if_expr -> IF . lparen expr rparen expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF . lparen expr rparen expr ELSE expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF . lparen expr rparen expr ELSE eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF . lparen expr rparen eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF . lparen expr rparen eols expr ELSE expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## if_expr -> IF . lparen expr rparen eols expr ELSE eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## IF
##

Expected `(` followed by a condition expression.

program: IMPORT FOREIGN WASM ID COLON EOL TYPEID AS ID WHILE
##
## Ends in an error in state: 873.
##
## foreign_stmt -> FOREIGN WASM id_str COLON eols typ option(as_prefix(id_str)) . FROM file_path [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## FOREIGN WASM id_str COLON eols typ option(as_prefix(id_str))
##
program: IMPORT FOREIGN WASM ID COLON TYPEID AS ID WHILE
##
## Ends in an error in state: 866.
##
## foreign_stmt -> FOREIGN WASM id_str COLON typ option(as_prefix(id_str)) . FROM file_path [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## FOREIGN WASM id_str COLON typ option(as_prefix(id_str))
##

Expected the keyword `from` followed by a file path.

program: IMPORT FOREIGN WASM ID COLON EOL TYPEID FROM WHILE
##
## Ends in an error in state: 874.
##
## foreign_stmt -> FOREIGN WASM id_str COLON eols typ option(as_prefix(id_str)) FROM . file_path [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## FOREIGN WASM id_str COLON eols typ option(as_prefix(id_str)) FROM
##
program: IMPORT FOREIGN WASM ID COLON TYPEID FROM WHILE
##
## Ends in an error in state: 867.
##
## foreign_stmt -> FOREIGN WASM id_str COLON typ option(as_prefix(id_str)) FROM . file_path [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## FOREIGN WASM id_str COLON typ option(as_prefix(id_str)) FROM
##
program: IMPORT TYPEID FROM WHILE
##
## Ends in an error in state: 878.
##
## import_stmt -> IMPORT lseparated_nonempty_list_inner(comma,import_shape) option(comma) FROM . file_path [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## IMPORT lseparated_nonempty_list_inner(comma,import_shape) option(comma) FROM
##

Expected a file path surrounded by `”`.

program: IMPORT FOREIGN WASM ID COLON EOL TYPEID WHEN
##
## Ends in an error in state: 872.
##
## foreign_stmt -> FOREIGN WASM id_str COLON eols typ . option(as_prefix(id_str)) FROM file_path [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## FOREIGN WASM id_str COLON eols typ
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
##
program: IMPORT FOREIGN WASM ID COLON TYPEID WHEN
##
## Ends in an error in state: 863.
##
## foreign_stmt -> FOREIGN WASM id_str COLON typ . option(as_prefix(id_str)) FROM file_path [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## FOREIGN WASM id_str COLON typ
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
##

Expected an alias, like `as foo`, for the foreign value's name or the keyword `from` followed by a file path.

program: IMPORT FOREIGN WASM ID COLON EOL WHILE
##
## Ends in an error in state: 871.
##
## foreign_stmt -> FOREIGN WASM id_str COLON eols . typ option(as_prefix(id_str)) FROM file_path [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## FOREIGN WASM id_str COLON eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: IMPORT FOREIGN WASM ID COLON WHILE
##
## Ends in an error in state: 862.
##
## foreign_stmt -> FOREIGN WASM id_str COLON . typ option(as_prefix(id_str)) FROM file_path [ SEMI EOL EOF ]
## foreign_stmt -> FOREIGN WASM id_str COLON . eols typ option(as_prefix(id_str)) FROM file_path [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## FOREIGN WASM id_str COLON
##

Expected a type for the foreign value.

program: IMPORT FOREIGN WASM ID COLON TYPEID AS WHILE
##
## Ends in an error in state: 864.
##
## as_prefix(id_str) -> AS . id_str [ FROM ]
##
## The known suffix of the stack is as follows:
## AS
##

Expected an identifier to use as the alias.

program: IMPORT FOREIGN WASM ID WHILE
##
## Ends in an error in state: 861.
##
## foreign_stmt -> FOREIGN WASM id_str . COLON typ option(as_prefix(id_str)) FROM file_path [ SEMI EOL EOF ]
## foreign_stmt -> FOREIGN WASM id_str . COLON eols typ option(as_prefix(id_str)) FROM file_path [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## FOREIGN WASM id_str
##

Expected a type annotation for the foreign value.

program: IMPORT FOREIGN WASM WHILE
##
## Ends in an error in state: 860.
##
## foreign_stmt -> FOREIGN WASM . id_str COLON typ option(as_prefix(id_str)) FROM file_path [ SEMI EOL EOF ]
## foreign_stmt -> FOREIGN WASM . id_str COLON eols typ option(as_prefix(id_str)) FROM file_path [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## FOREIGN WASM
##

Expected an identifier for the foreign value.

program: IMPORT FOREIGN WHILE
##
## Ends in an error in state: 859.
##
## foreign_stmt -> FOREIGN . WASM id_str COLON typ option(as_prefix(id_str)) FROM file_path [ SEMI EOL EOF ]
## foreign_stmt -> FOREIGN . WASM id_str COLON eols typ option(as_prefix(id_str)) FROM file_path [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## FOREIGN
##

Expected the keyword `wasm`.

program: IMPORT LBRACE TYPEID AS ID WHILE
##
## Ends in an error in state: 884.
##
## import_ids -> lseparated_nonempty_list_inner(comma,aliasable(id)) . option(comma) [ RBRACE EOL ]
## lseparated_nonempty_list_inner(comma,aliasable(id)) -> lseparated_nonempty_list_inner(comma,aliasable(id)) . comma aliasable(id) [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,aliasable(id))
##

Expected a comma followed by more imports or `}` to complete the imports block.

program: IMPORT LBRACE TYPEID AS WHILE
##
## Ends in an error in state: 888.
##
## as_prefix(id) -> AS . id [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## AS
##

Expected an identifier to use as an alias.

program: IMPORT LBRACE TYPEID COMMA EOL WHILE
##
## Ends in an error in state: 886.
##
## lseparated_nonempty_list_inner(comma,aliasable(id)) -> lseparated_nonempty_list_inner(comma,aliasable(id)) comma . aliasable(id) [ RBRACE EOL COMMA ]
## option(comma) -> comma . [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,aliasable(id)) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected an identifier to import or `}` to complete the imports block.

program: IMPORT LBRACE TYPEID EOL WHILE
##
## Ends in an error in state: 201.
##
## rbrace -> eols . RBRACE [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS FROM EQUAL EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##

Expected `}` to complete the block.

program: IMPORT LBRACE TYPEID THICKARROW
##
## Ends in an error in state: 887.
##
## aliasable(id) -> id . option(as_prefix(id)) [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 122, spurious reduction of production id -> lseparated_nonempty_list_inner(dot,TYPEID)
##

Expected an alias like`as foo`, a comma followed by another identifier, or `}` to complete the block.

program: IMPORT LBRACE WHILE
##
## Ends in an error in state: 881.
##
## import_shape -> lbrace . option(import_ids) rbrace [ FROM COMMA ]
##
## The known suffix of the stack is as follows:
## lbrace
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production lbrace -> LBRACE
##

Expected a list of comma-separated identifiers.

program: IMPORT LPAREN WHILE
##
## Ends in an error in state: 125.
##
## non_modid -> lparen . special_op rparen [ THICKARROW STAREQ STAR SLASHEQ SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUSEQ PLUS PIPEPIPE PIPE PERCENTEQ PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS FROM EQUAL EQEQ EOL EOF ELSE DOT DASHEQ DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##

Expected an infix or prefix operator, e.g. `+`, `-`, `!`.

program: IMPORT STAR EXCEPT LBRACE TYPEID COMMA EOL WHILE
##
## Ends in an error in state: 854.
##
## lseparated_nonempty_list_inner(comma,id) -> lseparated_nonempty_list_inner(comma,id) comma . id [ RBRACE EOL COMMA ]
## option(comma) -> comma . [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,id) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected an identifier or `}` to complete the block.

program: IMPORT STAR EXCEPT LBRACE TYPEID THICKARROW
##
## Ends in an error in state: 851.
##
## import_exception -> EXCEPT lbrace lseparated_nonempty_list_inner(comma,id) . option(comma) rbrace [ FROM COMMA ]
## lseparated_nonempty_list_inner(comma,id) -> lseparated_nonempty_list_inner(comma,id) . comma id [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## EXCEPT lbrace lseparated_nonempty_list_inner(comma,id)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 122, spurious reduction of production id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 856, spurious reduction of production lseparated_nonempty_list_inner(comma,id) -> id
##

Expected a comma followed by an identifier or `}` to end the block.

program: IMPORT STAR EXCEPT LBRACE WHILE
##
## Ends in an error in state: 850.
##
## import_exception -> EXCEPT lbrace . lseparated_nonempty_list_inner(comma,id) option(comma) rbrace [ FROM COMMA ]
##
## The known suffix of the stack is as follows:
## EXCEPT lbrace
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production lbrace -> LBRACE
##

Expected a comma-separated list of identifiers to exclude from the import.

program: IMPORT STAR EXCEPT WHILE
##
## Ends in an error in state: 849.
##
## import_exception -> EXCEPT . lbrace lseparated_nonempty_list_inner(comma,id) option(comma) rbrace [ FROM COMMA ]
##
## The known suffix of the stack is as follows:
## EXCEPT
##

Expected `{` followed by a comma-separated list of identifiers to exclude from the import, followed by `}` to complete the block.

program: IMPORT STAR WHILE
##
## Ends in an error in state: 848.
##
## import_shape -> STAR . option(import_exception) [ FROM COMMA ]
##
## The known suffix of the stack is as follows:
## STAR
##

Expected the keyword `except` followed by comma-separated identifiers surrounded by `{`/`}`, a comma followed by a module name, or the keyword `from` followed by a file path.

program: IMPORT TYPEID COMMA EOL WHILE
##
## Ends in an error in state: 880.
##
## lseparated_nonempty_list_inner(comma,import_shape) -> lseparated_nonempty_list_inner(comma,import_shape) comma . import_shape [ FROM COMMA ]
## option(comma) -> comma . [ FROM ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,import_shape) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected another import or the `from` keyword followed by a file path.

program: IMPORT TYPEID THICKARROW
##
## Ends in an error in state: 876.
##
## import_stmt -> IMPORT lseparated_nonempty_list_inner(comma,import_shape) . option(comma) FROM file_path [ SEMI EOL EOF ]
## lseparated_nonempty_list_inner(comma,import_shape) -> lseparated_nonempty_list_inner(comma,import_shape) . comma import_shape [ FROM COMMA ]
##
## The known suffix of the stack is as follows:
## IMPORT lseparated_nonempty_list_inner(comma,import_shape)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 122, spurious reduction of production id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 896, spurious reduction of production import_shape -> id
## In state 897, spurious reduction of production lseparated_nonempty_list_inner(comma,import_shape) -> import_shape
##

Expected a comma followed by a module identifier, `*`, a list of comma-separated identifiers surrounded by `{`/`}`, or the `from` keyword followed by a file path.

program: IMPORT WHILE
##
## Ends in an error in state: 847.
##
## import_stmt -> IMPORT . lseparated_nonempty_list_inner(comma,import_shape) option(comma) FROM file_path [ SEMI EOL EOF ]
## toplevel_stmt -> attributes IMPORT . foreign_stmt [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## attributes IMPORT
##

Expected a module identifier, `*`, a list of comma-separated identifiers surrounded by `{`/`}`, or the `foreign` keyword.

program: LBRACE AT ID RECORD
##
## Ends in an error in state: 328.
##
## let_expr -> attributes . LET REC value_binds [ SEMI RBRACE EOL ]
## let_expr -> attributes . LET value_binds [ SEMI RBRACE EOL ]
## let_expr -> attributes . LET REC MUT value_binds [ SEMI RBRACE EOL ]
## let_expr -> attributes . LET MUT value_binds [ SEMI RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## attributes
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production loption(attribute_arguments) ->
## In state 195, spurious reduction of production attribute -> AT id_str loption(attribute_arguments)
## In state 412, spurious reduction of production list(attribute) ->
## In state 413, spurious reduction of production list(attribute) -> attribute list(attribute)
## In state 324, spurious reduction of production attributes -> list(attribute)
##

Expected a let binding.

program: LBRACE BREAK RBRACE DOT EOL WHILE
##
## Ends in an error in state: 293.
##
## record_get -> braced_expr DOT eols . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> braced_expr DOT eols . simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: LBRACE BREAK RBRACE DOT WHILE
##
## Ends in an error in state: 289.
##
## record_get -> braced_expr DOT . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_get -> braced_expr DOT . eols simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> braced_expr DOT . simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> braced_expr DOT . eols simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr DOT
##

Expected a record field name.

program: LBRACE BREAK RBRACE LBRACK UNDERSCORE
##
## Ends in an error in state: 303.
##
## array_get -> braced_expr lbrack . expr rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## array_set -> braced_expr lbrack . expr rbrack equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##
program: WASMI64 LBRACK WASMI64 RBRACK LBRACK WHEN
##
## Ends in an error in state: 284.
##
## array_get -> array_get lbrack . expr rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## array_set -> array_get lbrack . expr rbrack equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##

Expected an array index expression.

program: LBRACE BREAK RBRACE LBRACK WASMI64 THICKARROW
##
## Ends in an error in state: 304.
##
## array_get -> braced_expr lbrack expr . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## array_set -> braced_expr lbrack expr . rbrack equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr lbrack expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##

Expected `]` to complete the array index expression.

program: LBRACE BREAK RBRACE LPAREN COMMA EOL WHILE
##
## Ends in an error in state: 298.
##
## app_expr -> braced_expr lparen option(comma) . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr lparen option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
## In state 264, spurious reduction of production option(comma) -> comma
##
program: LBRACE BREAK RBRACE LPAREN WASMI64 COMMA RBRACK
##
## Ends in an error in state: 301.
##
## app_expr -> braced_expr lparen lseparated_nonempty_list_inner(comma,expr) option(comma) . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr lparen lseparated_nonempty_list_inner(comma,expr) option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 88, spurious reduction of production comma -> COMMA
## In state 168, spurious reduction of production option(comma) -> comma
##
program: LPAREN BREAK RPAREN LPAREN COMMA EOL WHILE
##
## Ends in an error in state: 456.
##
## app_expr -> paren_expr lparen option(comma) . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr lparen option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
## In state 264, spurious reduction of production option(comma) -> comma
##
program: LPAREN BREAK RPAREN LPAREN WASMI64 COMMA RBRACK
##
## Ends in an error in state: 459.
##
## app_expr -> paren_expr lparen lseparated_nonempty_list_inner(comma,expr) option(comma) . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr lparen lseparated_nonempty_list_inner(comma,expr) option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 88, spurious reduction of production comma -> COMMA
## In state 168, spurious reduction of production option(comma) -> comma
##

Expected `)` to complete the function call.

program: LBRACE BREAK RBRACE LPAREN UNDERSCORE
##
## Ends in an error in state: 297.
##
## app_expr -> braced_expr lparen . option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## app_expr -> braced_expr lparen . lseparated_nonempty_list_inner(comma,expr) option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##
program: LBRACE BREAK RBRACE LPAREN WASMI64 THICKARROW
##
## Ends in an error in state: 300.
##
## app_expr -> braced_expr lparen lseparated_nonempty_list_inner(comma,expr) . option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## lseparated_nonempty_list_inner(comma,expr) -> lseparated_nonempty_list_inner(comma,expr) . comma expr [ RPAREN EOL COMMA ]
##
## The known suffix of the stack is as follows:
## braced_expr lparen lseparated_nonempty_list_inner(comma,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 263, spurious reduction of production lseparated_nonempty_list_inner(comma,expr) -> expr
##
program: LPAREN BREAK RPAREN LPAREN UNDERSCORE
##
## Ends in an error in state: 455.
##
## app_expr -> paren_expr lparen . option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## app_expr -> paren_expr lparen . lseparated_nonempty_list_inner(comma,expr) option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##

Expected a comma-separated list of expressions or an immediate `)` to complete the function call.

program: LBRACE LET REC WHILE
##
## Ends in an error in state: 332.
##
## let_expr -> attributes LET REC . value_binds [ SEMI RBRACE EOL ]
## let_expr -> attributes LET REC . MUT value_binds [ SEMI RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## attributes LET REC
##
program: LET REC WHILE
##
## Ends in an error in state: 840.
##
## toplevel_stmt -> attributes LET REC . value_binds [ SEMI EOL EOF ]
## toplevel_stmt -> attributes LET REC . MUT value_binds [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## attributes LET REC
##

Expected the keyword `mut` or a binding pattern, like an identifier.

program: LBRACE TYPEID COLON BREAK COMMA EOL TYPEID COLON BREAK WHILE
##
## Ends in an error in state: 318.
##
## lseparated_nonempty_list_inner(comma,record_field) -> lseparated_nonempty_list_inner(comma,record_field) . comma punned_record_field [ RBRACE EOL COMMA ]
## lseparated_nonempty_list_inner(comma,record_field) -> lseparated_nonempty_list_inner(comma,record_field) . comma non_punned_record_field [ RBRACE EOL COMMA ]
## record_exprs -> non_punned_record_field comma lseparated_nonempty_list_inner(comma,record_field) . option(comma) [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## non_punned_record_field comma lseparated_nonempty_list_inner(comma,record_field)
##
program: LBRACE TYPEID COLON BREAK WHILE
##
## Ends in an error in state: 315.
##
## record_exprs -> non_punned_record_field . option(comma) [ RBRACE EOL ]
## record_exprs -> non_punned_record_field . comma lseparated_nonempty_list_inner(comma,record_field) option(comma) [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## non_punned_record_field
##
program: LBRACE TYPEID COMMA EOL TYPEID COLON BREAK WHILE
##
## Ends in an error in state: 207.
##
## lseparated_nonempty_list_inner(comma,record_field) -> lseparated_nonempty_list_inner(comma,record_field) . comma punned_record_field [ RBRACE EOL COMMA ]
## lseparated_nonempty_list_inner(comma,record_field) -> lseparated_nonempty_list_inner(comma,record_field) . comma non_punned_record_field [ RBRACE EOL COMMA ]
## record_exprs -> punned_record_field comma lseparated_nonempty_list_inner(comma,record_field) . option(comma) [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## punned_record_field comma lseparated_nonempty_list_inner(comma,record_field)
##

Expected a comma followed by more record fields or an immediate `}` to complete the record expression.

program: LBRACE TYPEID COLON BREAK COMMA EOL WHILE
##
## Ends in an error in state: 317.
##
## option(comma) -> comma . [ RBRACE EOL ]
## record_exprs -> non_punned_record_field comma . lseparated_nonempty_list_inner(comma,record_field) option(comma) [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## non_punned_record_field comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##
program: LBRACE TYPEID COMMA EOL WHILE
##
## Ends in an error in state: 204.
##
## record_exprs -> punned_record_field comma . [ RBRACE EOL ]
## record_exprs -> punned_record_field comma . lseparated_nonempty_list_inner(comma,record_field) option(comma) [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## punned_record_field comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##
program: LBRACE TYPEID COMMA TYPEID COMMA EOL WHILE
##
## Ends in an error in state: 209.
##
## lseparated_nonempty_list_inner(comma,record_field) -> lseparated_nonempty_list_inner(comma,record_field) comma . punned_record_field [ RBRACE EOL COMMA ]
## lseparated_nonempty_list_inner(comma,record_field) -> lseparated_nonempty_list_inner(comma,record_field) comma . non_punned_record_field [ RBRACE EOL COMMA ]
## option(comma) -> comma . [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,record_field) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected more record fields or an immediate `}` to complete the record expression.

program: LBRACE TYPEID COMMA TYPEID THICKARROW
##
## Ends in an error in state: 212.
##
## non_punned_record_field -> id . COLON expr [ RBRACE EOL COMMA ]
## non_punned_record_field -> id . COLON eols expr [ RBRACE EOL COMMA ]
## punned_record_field -> id . [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 122, spurious reduction of production id -> lseparated_nonempty_list_inner(dot,TYPEID)
##

Expected a colon followed by an expression, a comma followed by more record fields, or an immediate `}` to complete the record.

program: LBRACE TYPEID THICKARROW
##
## Ends in an error in state: 320.
##
## block_body -> lseparated_nonempty_list_inner(eos,block_body_expr) . [ RBRACE EOL ]
## block_body -> lseparated_nonempty_list_inner(eos,block_body_expr) . eos [ RBRACE EOL ]
## lseparated_nonempty_list_inner(eos,block_body_expr) -> lseparated_nonempty_list_inner(eos,block_body_expr) . eos block_body_expr [ SEMI RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(eos,block_body_expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 122, spurious reduction of production id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 415, spurious reduction of production id_expr -> id
## In state 216, spurious reduction of production simple_expr -> id_expr
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 326, spurious reduction of production block_body_expr -> expr
## In state 416, spurious reduction of production lseparated_nonempty_list_inner(eos,block_body_expr) -> block_body_expr
##

Expected a newline character followed by more statements or `}` to complete the block.

program: LBRACE UNDERSCORE
##
## Ends in an error in state: 180.
##
## braced_expr -> lbrace . block_body rbrace [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## braced_expr -> lbrace . record_exprs rbrace [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lbrace
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production lbrace -> LBRACE
##

Expected an expression or a record field.

program: LBRACE WASMI64 SEMI RECORD
##
## Ends in an error in state: 323.
##
## block_body -> lseparated_nonempty_list_inner(eos,block_body_expr) eos . [ RBRACE EOL ]
## lseparated_nonempty_list_inner(eos,block_body_expr) -> lseparated_nonempty_list_inner(eos,block_body_expr) eos . block_body_expr [ SEMI RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(eos,block_body_expr) eos
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 321, spurious reduction of production eos -> SEMI
##

Expected another statement or `}` to complete the block.

program: LBRACK UNDERSCORE
##
## Ends in an error in state: 178.
##
## list_expr -> lbrack . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## list_expr -> lbrack . lseparated_nonempty_list_inner(comma,list_item) option(comma) rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##

Expected a comma-separated list of expressions or `]` to complete the list expression.

program: LBRACK WASMI64 COMMA EOL UNDERSCORE
##
## Ends in an error in state: 424.
##
## lseparated_nonempty_list_inner(comma,list_item) -> lseparated_nonempty_list_inner(comma,list_item) comma . list_item [ RBRACK EOL COMMA ]
## option(comma) -> comma . [ RBRACK EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,list_item) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected an expression,  `...` followed by an expression, or `]` to complete the list expression.

program: LBRACK WASMI64 THICKARROW
##
## Ends in an error in state: 421.
##
## list_expr -> lbrack lseparated_nonempty_list_inner(comma,list_item) . option(comma) rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## lseparated_nonempty_list_inner(comma,list_item) -> lseparated_nonempty_list_inner(comma,list_item) . comma list_item [ RBRACK EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lbrack lseparated_nonempty_list_inner(comma,list_item)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 426, spurious reduction of production list_item -> expr
## In state 427, spurious reduction of production lseparated_nonempty_list_inner(comma,list_item) -> list_item
##

Expected a comma followed by an expression, `...` followed by an expression, or `]` to complete the list expression.

program: LBRACKRCARET UNDERSCORE
##
## Ends in an error in state: 170.
##
## array_expr -> lbrackrcaret . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## array_expr -> lbrackrcaret . lseparated_nonempty_list_inner(comma,expr) option(comma) rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## array_expr -> lbrackrcaret . eols lseparated_nonempty_list_inner(comma,expr) option(comma) rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lbrackrcaret
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 16, spurious reduction of production lbrackrcaret -> LBRACKRCARET
##

Expected a comma-separated list of expressions or `]` to complete the array expression.

program: LBRACKRCARET WASMI64 COMMA EOL UNDERSCORE
##
## Ends in an error in state: 168.
##
## lseparated_nonempty_list_inner(comma,expr) -> lseparated_nonempty_list_inner(comma,expr) comma . expr [ RPAREN RBRACK EOL COMMA ]
## option(comma) -> comma . [ RPAREN RBRACK EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,expr) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected an expression or `]` to complete the array expression.

program: LBRACKRCARET WASMI64 COMMA RPAREN
##
## Ends in an error in state: 174.
##
## array_expr -> lbrackrcaret lseparated_nonempty_list_inner(comma,expr) option(comma) . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lbrackrcaret lseparated_nonempty_list_inner(comma,expr) option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 88, spurious reduction of production comma -> COMMA
## In state 168, spurious reduction of production option(comma) -> comma
##

Expected `]` to complete the array expression.

program: LBRACKRCARET WASMI64 EOL WHILE
##
## Ends in an error in state: 176.
##
## rbrack -> eols . RBRACK [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQUAL EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##

Expected `]` to complete the array expression.

program: LBRACKRCARET WASMI64 THICKARROW
##
## Ends in an error in state: 173.
##
## array_expr -> lbrackrcaret lseparated_nonempty_list_inner(comma,expr) . option(comma) rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## lseparated_nonempty_list_inner(comma,expr) -> lseparated_nonempty_list_inner(comma,expr) . comma expr [ RBRACK EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lbrackrcaret lseparated_nonempty_list_inner(comma,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 263, spurious reduction of production lseparated_nonempty_list_inner(comma,expr) -> expr
##

Expected a comma followed by an expression or `]` to complete the array expression.

program: LET DASH WHILE
##
## Ends in an error in state: 349.
##
## const -> option(dash_op) . NUMBER_INT [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## const -> option(dash_op) . NUMBER_FLOAT [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## const -> option(dash_op) . INT32 [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## const -> option(dash_op) . INT64 [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## const -> option(dash_op) . FLOAT32 [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## const -> option(dash_op) . FLOAT64 [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## const -> option(dash_op) . WASMI32 [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## const -> option(dash_op) . WASMI64 [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## const -> option(dash_op) . WASMF32 [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## const -> option(dash_op) . WASMF64 [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## pattern -> option(dash_op) . NUMBER_INT SLASH option(dash_op) NUMBER_INT [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## option(dash_op)
##
program: LET NUMBER_INT SLASH DASH WHILE
##
## Ends in an error in state: 352.
##
## pattern -> option(dash_op) NUMBER_INT SLASH option(dash_op) . NUMBER_INT [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## option(dash_op) NUMBER_INT SLASH option(dash_op)
##

Expected a number.

program: LET LBRACE TYPEID COLON EOL WASMI64 WHILE
##
## Ends in an error in state: 388.
##
## pattern -> pattern . COLON typ [ RBRACE EOL COMMA COLON ]
## pattern -> pattern . COLON eols typ [ RBRACE EOL COMMA COLON ]
## record_pattern -> id COLON eols pattern . [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## id COLON eols pattern
##
program: LET LBRACE TYPEID COLON WASMI64 WHILE
##
## Ends in an error in state: 386.
##
## pattern -> pattern . COLON typ [ RBRACE EOL COMMA COLON ]
## pattern -> pattern . COLON eols typ [ RBRACE EOL COMMA COLON ]
## record_pattern -> id COLON pattern . [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## id COLON pattern
##

Expected a type annotation, a comma followed by more record field patterns, or `}` to complete the record pattern.

program: LET LBRACE TYPEID COLON EOL WHILE
##
## Ends in an error in state: 387.
##
## record_pattern -> id COLON eols . pattern [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## id COLON eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: LET LBRACE TYPEID COLON WHILE
##
## Ends in an error in state: 385.
##
## record_pattern -> id COLON . pattern [ RBRACE EOL COMMA ]
## record_pattern -> id COLON . eols pattern [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## id COLON
##
program: LET LPAREN WHILE
##
## Ends in an error in state: 358.
##
## pattern -> lparen . special_op rparen [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## pattern -> lparen . tuple_patterns rparen [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## pattern -> lparen . pattern rparen [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##
program: LET LBRACK ELLIPSIS WHILE
##
## Ends in an error in state: 373.
##
## list_item_pat -> ELLIPSIS . pattern [ RBRACK EOL COMMA ]
##
## The known suffix of the stack is as follows:
## ELLIPSIS
##
program: LET LPAREN WASMI64 COMMA EOL WHILE
##
## Ends in an error in state: 398.
##
## tuple_patterns -> pattern COMMA eols . lseparated_nonempty_list_inner(comma,pattern) [ RPAREN EOL ]
## tuple_patterns -> pattern COMMA eols . lseparated_nonempty_list_inner(comma,pattern) comma [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## pattern COMMA eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: LET NUMBER_INT PIPE WHILE
##
## Ends in an error in state: 345.
##
## pattern -> pattern PIPE . pattern [ WHEN THICKARROW RPAREN RBRACK RBRACE PIPE EQUAL EOL COMMA COLON ]
## pattern -> pattern PIPE . eols pattern [ WHEN THICKARROW RPAREN RBRACK RBRACE PIPE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## pattern PIPE
##
program: LET NUMBER_INT PIPE EOL WHILE
##
## Ends in an error in state: 404.
##
## pattern -> pattern PIPE eols . pattern [ WHEN THICKARROW RPAREN RBRACK RBRACE PIPE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## pattern PIPE eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##

Expected a pattern.

program: LET LBRACE TYPEID THICKARROW
##
## Ends in an error in state: 384.
##
## record_pattern -> id . COLON pattern [ RBRACE EOL COMMA ]
## record_pattern -> id . COLON eols pattern [ RBRACE EOL COMMA ]
## record_pattern -> id . [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 122, spurious reduction of production id -> lseparated_nonempty_list_inner(dot,TYPEID)
##

Expected `:` followed by a pattern, a comma followed by another record field pattern, or `}` to complete the record pattern.

program: LET LBRACE UNDERSCORE COMMA EOL WHILE
##
## Ends in an error in state: 382.
##
## lseparated_nonempty_list_inner(comma,record_pattern) -> lseparated_nonempty_list_inner(comma,record_pattern) comma . record_pattern [ RBRACE EOL COMMA ]
## option(comma) -> comma . [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,record_pattern) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected another record field pattern or `}` to complete the record pattern.

program: LET LBRACE UNDERSCORE WHILE
##
## Ends in an error in state: 380.
##
## lseparated_nonempty_list_inner(comma,record_pattern) -> lseparated_nonempty_list_inner(comma,record_pattern) . comma record_pattern [ RBRACE EOL COMMA ]
## record_patterns -> lseparated_nonempty_list_inner(comma,record_pattern) . option(comma) [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,record_pattern)
##

Expected a comma followed by more record field patterns or `}` to complete the record pattern.

program: LET LBRACE WHILE
##
## Ends in an error in state: 375.
##
## pattern -> lbrace . record_patterns rbrace [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## lbrace
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production lbrace -> LBRACE
##

Expected a comma-separated list of record field patterns.

program: LET LBRACK ELLIPSIS WASMI64 WHILE
##
## Ends in an error in state: 374.
##
## list_item_pat -> ELLIPSIS pattern . [ RBRACK EOL COMMA ]
## pattern -> pattern . COLON typ [ RBRACK EOL COMMA COLON ]
## pattern -> pattern . COLON eols typ [ RBRACK EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## ELLIPSIS pattern
##

Expected a type annotation, a comma followed by more patterns, or `]` to complete the list pattern.

program: LET LBRACK WASMI64 COMMA EOL WHILE
##
## Ends in an error in state: 395.
##
## lseparated_nonempty_list_inner(comma,list_item_pat) -> lseparated_nonempty_list_inner(comma,list_item_pat) comma . list_item_pat [ RBRACK EOL COMMA ]
## option(comma) -> comma . [ RBRACK EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,list_item_pat) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected a pattern, `...` followed by a pattern, or `]` to complete the list pattern.

program: LET LBRACK WASMI64 WHILE
##
## Ends in an error in state: 391.
##
## list_item_pat -> pattern . [ RBRACK EOL COMMA ]
## pattern -> pattern . COLON typ [ RBRACK EOL COMMA COLON ]
## pattern -> pattern . COLON eols typ [ RBRACK EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## pattern
##

Expected a type annotation, a comma followed by another pattern, or `]` to complete the list pattern.

program: LET LBRACK WHILE
##
## Ends in an error in state: 372.
##
## pattern -> lbrack . rbrack [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## pattern -> lbrack . lseparated_nonempty_list_inner(comma,list_item_pat) option(comma) rbrack [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##

Expected a comma-separated list of patterns or `]` to complete the list pattern.

program: LET LBRACKRCARET WASMI64 RPAREN
##
## Ends in an error in state: 370.
##
## pattern -> lbrackrcaret patterns . rbrack [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## lbrackrcaret patterns
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 344, spurious reduction of production lseparated_nonempty_list_inner(comma,pattern) -> pattern
## In state 354, spurious reduction of production option(comma) ->
## In state 355, spurious reduction of production patterns -> lseparated_nonempty_list_inner(comma,pattern) option(comma)
##

Expected `]` to complete the array pattern.

program: LET LBRACKRCARET WHILE
##
## Ends in an error in state: 368.
##
## pattern -> lbrackrcaret . patterns rbrack [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## pattern -> lbrackrcaret . rbrack [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## lbrackrcaret
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 16, spurious reduction of production lbrackrcaret -> LBRACKRCARET
##

Expected a comma-separated list of patterns or `]` to complete the array pattern.

program: LET LPAREN STAR WHILE
##
## Ends in an error in state: 362.
##
## pattern -> lparen special_op . rparen [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## lparen special_op
##

Expected `)` to complete the pattern.

program: LET LPAREN WASMI64 COMMA EOL WASMI64 COMMA EOL WHILE
##
## Ends in an error in state: 400.
##
## lseparated_nonempty_list_inner(comma,pattern) -> lseparated_nonempty_list_inner(comma,pattern) comma . pattern [ RPAREN EOL COMMA ]
## tuple_patterns -> pattern COMMA eols lseparated_nonempty_list_inner(comma,pattern) comma . [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## pattern COMMA eols lseparated_nonempty_list_inner(comma,pattern) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected a pattern or `)` to complete the tuple pattern.

program: LET LPAREN WASMI64 COMMA EOL WASMI64 RBRACK
##
## Ends in an error in state: 399.
##
## lseparated_nonempty_list_inner(comma,pattern) -> lseparated_nonempty_list_inner(comma,pattern) . comma pattern [ RPAREN EOL COMMA ]
## tuple_patterns -> pattern COMMA eols lseparated_nonempty_list_inner(comma,pattern) . [ RPAREN EOL ]
## tuple_patterns -> pattern COMMA eols lseparated_nonempty_list_inner(comma,pattern) . comma [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## pattern COMMA eols lseparated_nonempty_list_inner(comma,pattern)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 344, spurious reduction of production lseparated_nonempty_list_inner(comma,pattern) -> pattern
##

Expected a comma followed by another pattern or `)` to complete the tuple pattern.

program: LET LPAREN WASMI64 COMMA WASMI64 COMMA EOL WHILE
##
## Ends in an error in state: 367.
##
## lseparated_nonempty_list_inner(comma,pattern) -> lseparated_nonempty_list_inner(comma,pattern) comma . pattern [ RPAREN EOL COMMA ]
## tuple_patterns -> pattern COMMA lseparated_nonempty_list_inner(comma,pattern) comma . [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## pattern COMMA lseparated_nonempty_list_inner(comma,pattern) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected another pattern or `)` to complete the tuple pattern.

program: LET LPAREN WASMI64 COMMA WASMI64 RBRACK
##
## Ends in an error in state: 366.
##
## lseparated_nonempty_list_inner(comma,pattern) -> lseparated_nonempty_list_inner(comma,pattern) . comma pattern [ RPAREN EOL COMMA ]
## tuple_patterns -> pattern COMMA lseparated_nonempty_list_inner(comma,pattern) . [ RPAREN EOL ]
## tuple_patterns -> pattern COMMA lseparated_nonempty_list_inner(comma,pattern) . comma [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## pattern COMMA lseparated_nonempty_list_inner(comma,pattern)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 344, spurious reduction of production lseparated_nonempty_list_inner(comma,pattern) -> pattern
##

Expected a comma followed by another pattern or `)` to complete the tuple pattern.

program: LET LPAREN WASMI64 COMMA WHILE
##
## Ends in an error in state: 365.
##
## tuple_patterns -> pattern COMMA . [ RPAREN EOL ]
## tuple_patterns -> pattern COMMA . lseparated_nonempty_list_inner(comma,pattern) [ RPAREN EOL ]
## tuple_patterns -> pattern COMMA . lseparated_nonempty_list_inner(comma,pattern) comma [ RPAREN EOL ]
## tuple_patterns -> pattern COMMA . eols lseparated_nonempty_list_inner(comma,pattern) [ RPAREN EOL ]
## tuple_patterns -> pattern COMMA . eols lseparated_nonempty_list_inner(comma,pattern) comma [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## pattern COMMA
##

Expected a pattern or an immediate `)` for a single-argument tuple pattern.

program: LET LPAREN WASMI64 WHILE
##
## Ends in an error in state: 364.
##
## pattern -> pattern . COLON typ [ RPAREN EOL COMMA COLON ]
## pattern -> pattern . COLON eols typ [ RPAREN EOL COMMA COLON ]
## pattern -> lparen pattern . rparen [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
## tuple_patterns -> pattern . COMMA [ RPAREN EOL ]
## tuple_patterns -> pattern . COMMA lseparated_nonempty_list_inner(comma,pattern) [ RPAREN EOL ]
## tuple_patterns -> pattern . COMMA lseparated_nonempty_list_inner(comma,pattern) comma [ RPAREN EOL ]
## tuple_patterns -> pattern . COMMA eols lseparated_nonempty_list_inner(comma,pattern) [ RPAREN EOL ]
## tuple_patterns -> pattern . COMMA eols lseparated_nonempty_list_inner(comma,pattern) comma [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## lparen pattern
##

Expected a type annotation, `)` for a grouped pattern, or a comma for a tuple pattern.

program: LET NUMBER_INT SLASH WHILE
##
## Ends in an error in state: 351.
##
## pattern -> option(dash_op) NUMBER_INT SLASH . option(dash_op) NUMBER_INT [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## option(dash_op) NUMBER_INT SLASH
##

Expected a number or a minus sign followed by a number.

program: LET NUMBER_INT WHILE
##
## Ends in an error in state: 402.
##
## pattern -> pattern . COLON typ [ EQUAL COLON ]
## pattern -> pattern . COLON eols typ [ EQUAL COLON ]
## value_bind -> pattern . equal expr [ SEMI RBRACE EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## pattern
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 350, spurious reduction of production const -> option(dash_op) NUMBER_INT
## In state 389, spurious reduction of production pattern -> const
##

Expected a type annotation or `=`.

program: LET TYPEID DOT EOL WHILE
##
## Ends in an error in state: 85.
##
## lseparated_nonempty_list_inner(dot,TYPEID) -> lseparated_nonempty_list_inner(dot,TYPEID) DOT eols . TYPEID [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AS ARROW AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(dot,TYPEID) DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: LET TYPEID DOT WHILE
##
## Ends in an error in state: 83.
##
## lseparated_nonempty_list_inner(dot,TYPEID) -> lseparated_nonempty_list_inner(dot,TYPEID) DOT . TYPEID [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AS ARROW AMPAMP AMP ]
## lseparated_nonempty_list_inner(dot,TYPEID) -> lseparated_nonempty_list_inner(dot,TYPEID) DOT . eols TYPEID [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AS ARROW AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(dot,TYPEID) DOT
##

Expected a capitalized identifier.

program: LET TYPEID LPAREN WASMI64 RBRACK
##
## Ends in an error in state: 342.
##
## pattern -> type_id lparen patterns . rparen [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## type_id lparen patterns
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 344, spurious reduction of production lseparated_nonempty_list_inner(comma,pattern) -> pattern
## In state 354, spurious reduction of production option(comma) ->
## In state 355, spurious reduction of production patterns -> lseparated_nonempty_list_inner(comma,pattern) option(comma)
##

Expected `)` to complete the variant pattern.

program: LET TYPEID LPAREN WHILE
##
## Ends in an error in state: 340.
##
## pattern -> type_id lparen . patterns rparen [ WHEN THICKARROW RPAREN RBRACK RBRACE EQUAL EOL COMMA COLON ]
##
## The known suffix of the stack is as follows:
## type_id lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##

Expected a comma-separated list of patterns.

program: LET WASMI64 EQUAL WASMI64 COMMA EOL WHILE
##
## Ends in an error in state: 406.
##
## lseparated_nonempty_list_inner(comma,value_bind) -> lseparated_nonempty_list_inner(comma,value_bind) comma . value_bind [ SEMI RBRACE EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,value_bind) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected a binding, e.g. `foo = 5`.

program: LPAREN BREAK RPAREN DOT EOL WHILE
##
## Ends in an error in state: 593.
##
## record_get -> paren_expr DOT eols . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> paren_expr DOT eols . simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: LPAREN BREAK RPAREN DOT WHILE
##
## Ends in an error in state: 589.
##
## record_get -> paren_expr DOT . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_get -> paren_expr DOT . eols simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> paren_expr DOT . simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> paren_expr DOT . eols simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr DOT
##

Expected a record field identifier.

program: LPAREN BREAK RPAREN LBRACK WASMI64 THICKARROW
##
## Ends in an error in state: 598.
##
## array_get -> paren_expr lbrack expr . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## array_set -> paren_expr lbrack expr . rbrack equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr lbrack expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##

Expected `]` to complete the array access expression.

program: LPAREN BREAK RPAREN LPAREN WASMI64 THICKARROW
##
## Ends in an error in state: 458.
##
## app_expr -> paren_expr lparen lseparated_nonempty_list_inner(comma,expr) . option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## lseparated_nonempty_list_inner(comma,expr) -> lseparated_nonempty_list_inner(comma,expr) . comma expr [ RPAREN EOL COMMA ]
##
## The known suffix of the stack is as follows:
## paren_expr lparen lseparated_nonempty_list_inner(comma,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 263, spurious reduction of production lseparated_nonempty_list_inner(comma,expr) -> expr
##

Expected a comma followed by an expression or `)` to complete the function call.

program: LPAREN DASH WHILE
##
## Ends in an error in state: 359.
##
## option(dash_op) -> DASH . [ WASMI64 WASMI32 WASMF64 WASMF32 NUMBER_INT NUMBER_FLOAT INT64 INT32 FLOAT64 FLOAT32 ]
## special_op -> DASH . [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## DASH
##

Expected a number to create a negative number or `)` to reference the minus function.

program: LPAREN NOT WHEN
##
## Ends in an error in state: 155.
##
## prefix_op -> NOT . [ RPAREN EOL ]
## prim1_expr -> NOT . non_assign_expr [ STAR SLASH RPAREN RCARET PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## NOT
##

Expected an expression or `)` to reference the `!` operator.

program: LPAREN RCARET RCARET WHILE
##
## Ends in an error in state: 129.
##
## special_op -> RCARET RCARET . [ RPAREN EOL ]
## special_op -> RCARET RCARET . RCARET [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## RCARET RCARET
##
program: LPAREN RCARET WHILE
##
## Ends in an error in state: 128.
##
## special_op -> RCARET . [ RPAREN EOL ]
## special_op -> RCARET . RCARET [ RPAREN EOL ]
## special_op -> RCARET . RCARET RCARET [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## RCARET
##
program: LPAREN STAR WHILE
##
## Ends in an error in state: 149.
##
## non_modid -> lparen special_op . rparen [ THICKARROW STAREQ STAR SLASHEQ SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUSEQ PLUS PIPEPIPE PIPE PERCENTEQ PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS FROM EQUAL EQEQ EOL EOF ELSE DOT DASHEQ DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lparen special_op
##

Expected `)` to complete infix or prefix operator reference.

program: LPAREN WASMI64 COMMA BREAK COMMA RBRACK
##
## Ends in an error in state: 490.
##
## simple_expr -> lparen tuple_exprs . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lparen tuple_exprs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 88, spurious reduction of production comma -> COMMA
## In state 168, spurious reduction of production option(comma) -> comma
## In state 495, spurious reduction of production tuple_exprs -> expr COMMA lseparated_nonempty_list_inner(comma,expr) option(comma)
##

Expected `)` to complete the tuple expression.

program: LPAREN WASMI64 COMMA EOL WASMI64 THICKARROW
##
## Ends in an error in state: 497.
##
## lseparated_nonempty_list_inner(comma,expr) -> lseparated_nonempty_list_inner(comma,expr) . comma expr [ RPAREN EOL COMMA ]
## tuple_exprs -> expr COMMA eols lseparated_nonempty_list_inner(comma,expr) . option(comma) [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## expr COMMA eols lseparated_nonempty_list_inner(comma,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 263, spurious reduction of production lseparated_nonempty_list_inner(comma,expr) -> expr
##
program: LPAREN WASMI64 COMMA WASMI64 THICKARROW
##
## Ends in an error in state: 494.
##
## lseparated_nonempty_list_inner(comma,expr) -> lseparated_nonempty_list_inner(comma,expr) . comma expr [ RPAREN EOL COMMA ]
## tuple_exprs -> expr COMMA lseparated_nonempty_list_inner(comma,expr) . option(comma) [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## expr COMMA lseparated_nonempty_list_inner(comma,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 263, spurious reduction of production lseparated_nonempty_list_inner(comma,expr) -> expr
##

Expected a comma followed by an expression or `)` to complete the tuple expression.

program: LPAREN WASMI64 COMMA WHEN
##
## Ends in an error in state: 493.
##
## tuple_exprs -> expr COMMA . [ RPAREN EOL ]
## tuple_exprs -> expr COMMA . lseparated_nonempty_list_inner(comma,expr) option(comma) [ RPAREN EOL ]
## tuple_exprs -> expr COMMA . eols lseparated_nonempty_list_inner(comma,expr) option(comma) [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## expr COMMA
##

Expected an expression or `)` for a single-argument tuple.

program: LPAREN WASMI64 EOL WHILE
##
## Ends in an error in state: 106.
##
## rparen -> eols . RPAREN [ WHILE WHEN WASMI64 WASMI32 WASMF64 WASMF32 VOID TYPEID TYPE TRUE THROW THICKARROW STRING STAREQ STAR SLASHEQ SLASH SEMI RPAREN RECORD RCARET RBRACK RBRACE PLUSPLUS PLUSEQ PLUS PIPEPIPE PIPE PERCENTEQ PERCENT NUMBER_INT NUMBER_FLOAT NOTEQ NOT MATCH LPAREN LET LESSEQ LCARETLCARET LCARET LBRACKRCARET LBRACK LBRACE ISNT IS INT64 INT32 IMPORT IF ID GREATEREQ GETS FUN FROM FOR FLOAT64 FLOAT32 FALSE FAIL EXPORT EQUAL EQEQ EOL EOF ENUM ELSE DOT DASHEQ DASH CONTINUE COMMA COLON CHAR CARET BREAK AT ASSERT AS ARROW AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##

Expected `)`.

program: LPAREN WASMI64 THICKARROW
##
## Ends in an error in state: 492.
##
## paren_expr -> lparen expr . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## tuple_exprs -> expr . COMMA [ RPAREN EOL ]
## tuple_exprs -> expr . COMMA lseparated_nonempty_list_inner(comma,expr) option(comma) [ RPAREN EOL ]
## tuple_exprs -> expr . COMMA eols lseparated_nonempty_list_inner(comma,expr) option(comma) [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## lparen expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##

Expected `)` for a grouped expression or a comma for a tuple expression.

program: MATCH LPAREN WASMI64 RPAREN LBRACE WASMI64 THICKARROW CONTINUE WHILE
##
## Ends in an error in state: 756.
##
## lseparated_nonempty_list_inner(comma,match_branch) -> lseparated_nonempty_list_inner(comma,match_branch) . comma match_branch [ RBRACE EOL COMMA ]
## match_branches -> lseparated_nonempty_list_inner(comma,match_branch) . option(comma) [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,match_branch)
##

Expected a comma followed by another match branch or `}` to complete the match expression.

program: MATCH LPAREN WASMI64 RPAREN LBRACE WASMI64 THICKARROW WASMI64 COMMA EOL WHILE
##
## Ends in an error in state: 758.
##
## lseparated_nonempty_list_inner(comma,match_branch) -> lseparated_nonempty_list_inner(comma,match_branch) comma . match_branch [ RBRACE EOL COMMA ]
## option(comma) -> comma . [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,match_branch) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected another match branch or `}` to complete the match expression.

program: MATCH LPAREN WASMI64 RPAREN LBRACE WASMI64 WHEN VOID EOF
##
## Ends in an error in state: 745.
##
## match_branch -> pattern when_guard . thickarrow expr [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## pattern when_guard
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 744, spurious reduction of production when_guard -> WHEN expr
##

Expected `=>` followed by an expression.

program: MATCH LPAREN WASMI64 RPAREN LBRACE WASMI64 WHILE
##
## Ends in an error in state: 742.
##
## match_branch -> pattern . thickarrow expr [ RBRACE EOL COMMA ]
## match_branch -> pattern . when_guard thickarrow expr [ RBRACE EOL COMMA ]
## pattern -> pattern . COLON typ [ WHEN THICKARROW EOL COLON ]
## pattern -> pattern . COLON eols typ [ WHEN THICKARROW EOL COLON ]
##
## The known suffix of the stack is as follows:
## pattern
##

Expected a type annotation, the keyword `when` followed by a guard expression, or `=>` followed by an expression.

program: MATCH LPAREN WASMI64 RPAREN LBRACE WHILE
##
## Ends in an error in state: 741.
##
## match_expr -> MATCH lparen expr rparen lbrace . match_branches rbrace [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## MATCH lparen expr rparen lbrace
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production lbrace -> LBRACE
##

Expected a pattern.

program: MATCH LPAREN WASMI64 RPAREN WHILE
##
## Ends in an error in state: 740.
##
## match_expr -> MATCH lparen expr rparen . lbrace match_branches rbrace [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## MATCH lparen expr rparen
##

Expected `{` to start the body of the match statement.

program: MATCH LPAREN WASMI64 THICKARROW
##
## Ends in an error in state: 739.
##
## match_expr -> MATCH lparen expr . rparen lbrace match_branches rbrace [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## MATCH lparen expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##

Expected `)` after the match value.

program: MATCH WHILE
##
## Ends in an error in state: 14.
##
## match_expr -> MATCH . lparen expr rparen lbrace match_branches rbrace [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## MATCH
##

Expected `(` after the `match` keyword.

program: NOT LBRACE BREAK RBRACE DOT EOL WHILE
##
## Ends in an error in state: 469.
##
## record_get -> braced_expr DOT eols . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: NOT LBRACE BREAK RBRACE DOT WHILE
##
## Ends in an error in state: 467.
##
## record_get -> braced_expr DOT . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_get -> braced_expr DOT . eols simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr DOT
##
program: NOT LPAREN BREAK RPAREN DOT EOL WHILE
##
## Ends in an error in state: 453.
##
## record_get -> paren_expr DOT eols . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: NOT LPAREN BREAK RPAREN DOT WHILE
##
## Ends in an error in state: 451.
##
## record_get -> paren_expr DOT . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_get -> paren_expr DOT . eols simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr DOT
##
program: NOT WASMI64 DOT EOL WHILE
##
## Ends in an error in state: 160.
##
## record_get -> simple_expr DOT eols . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: NOT WASMI64 DOT ID DOT EOL WHILE
##
## Ends in an error in state: 439.
##
## record_get -> record_get DOT eols . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: NOT WASMI64 DOT ID DOT WHILE
##
## Ends in an error in state: 437.
##
## record_get -> record_get DOT . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_get -> record_get DOT . eols simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get DOT
##
program: NOT WASMI64 DOT WHILE
##
## Ends in an error in state: 157.
##
## record_get -> simple_expr DOT . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_get -> simple_expr DOT . eols simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT
##
program: NOT WASMI64 LPAREN RPAREN DOT EOL WHILE
##
## Ends in an error in state: 485.
##
## record_get -> app_expr DOT eols . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: NOT WASMI64 LPAREN RPAREN DOT WHILE
##
## Ends in an error in state: 483.
##
## record_get -> app_expr DOT . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_get -> app_expr DOT . eols simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr DOT
##
program: WASMI64 DOT EOL WHILE
##
## Ends in an error in state: 625.
##
## record_get -> simple_expr DOT eols . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> simple_expr DOT eols . simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 DOT ID DOT EOL WHILE
##
## Ends in an error in state: 609.
##
## record_get -> record_get DOT eols . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> record_get DOT eols . simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 DOT ID DOT WHILE
##
## Ends in an error in state: 605.
##
## record_get -> record_get DOT . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_get -> record_get DOT . eols simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> record_get DOT . simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> record_get DOT . eols simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get DOT
##
program: WASMI64 DOT WHILE
##
## Ends in an error in state: 621.
##
## record_get -> simple_expr DOT . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_get -> simple_expr DOT . eols simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> simple_expr DOT . simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> simple_expr DOT . eols simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT
##
program: WASMI64 LPAREN RPAREN DOT EOL WHILE
##
## Ends in an error in state: 253.
##
## record_get -> app_expr DOT eols . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> app_expr DOT eols . simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 LPAREN RPAREN DOT WHILE
##
## Ends in an error in state: 249.
##
## record_get -> app_expr DOT . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_get -> app_expr DOT . eols simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> app_expr DOT . simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> app_expr DOT . eols simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr DOT
##
program: NOT WASMI64 LBRACK WASMI64 RBRACK DOT EOL WHILE
##
## Ends in an error in state: 477.
##
## record_get -> array_get DOT eols . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: NOT WASMI64 LBRACK WASMI64 RBRACK DOT WHILE
##
## Ends in an error in state: 475.
##
## record_get -> array_get DOT . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_get -> array_get DOT . eols simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get DOT
##
program: WASMI64 LBRACK WASMI64 RBRACK DOT EOL WHILE
##
## Ends in an error in state: 274.
##
## record_get -> array_get DOT eols . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> array_get DOT eols . simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 LBRACK WASMI64 RBRACK DOT WHILE
##
## Ends in an error in state: 270.
##
## record_get -> array_get DOT . simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_get -> array_get DOT . eols simple_id [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> array_get DOT . simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## record_set -> array_get DOT . eols simple_id equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get DOT
##

Expected a record field identifier.

program: NOT LBRACE BREAK RBRACE LBRACK UNDERSCORE
##
## Ends in an error in state: 471.
##
## array_get -> braced_expr lbrack . expr rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##
program: NOT LPAREN BREAK RPAREN LBRACK UNDERSCORE
##
## Ends in an error in state: 461.
##
## array_get -> paren_expr lbrack . expr rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##
program: NOT WASMI64 DOT ID LBRACK UNDERSCORE
##
## Ends in an error in state: 447.
##
## array_get -> record_get lbrack . expr rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##
program: NOT WASMI64 LBRACK UNDERSCORE
##
## Ends in an error in state: 433.
##
## array_get -> simple_expr lbrack . expr rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##
program: WASMI64 DOT ID LBRACK UNDERSCORE
##
## Ends in an error in state: 613.
##
## array_get -> record_get lbrack . expr rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## array_set -> record_get lbrack . expr rbrack equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##
program: WASMI64 LPAREN RPAREN LBRACK UNDERSCORE
##
## Ends in an error in state: 265.
##
## array_get -> app_expr lbrack . expr rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## array_set -> app_expr lbrack . expr rbrack equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##
program: NOT WASMI64 LBRACK WASMI64 RBRACK LBRACK WHEN
##
## Ends in an error in state: 479.
##
## array_get -> array_get lbrack . expr rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##

Expected an array index expression.

program: NOT LBRACE BREAK RBRACE LBRACK WASMI64 THICKARROW
##
## Ends in an error in state: 472.
##
## array_get -> braced_expr lbrack expr . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## braced_expr lbrack expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##
program: NOT LPAREN BREAK RPAREN LBRACK WASMI64 THICKARROW
##
## Ends in an error in state: 462.
##
## array_get -> paren_expr lbrack expr . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## paren_expr lbrack expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##
program: NOT WASMI64 DOT ID LBRACK WASMI64 THICKARROW
##
## Ends in an error in state: 448.
##
## array_get -> record_get lbrack expr . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get lbrack expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##
program: NOT WASMI64 LBRACK WASMI64 THICKARROW
##
## Ends in an error in state: 434.
##
## array_get -> simple_expr lbrack expr . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr lbrack expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##
program: NOT WASMI64 LPAREN RPAREN LBRACK UNDERSCORE
##
## Ends in an error in state: 487.
##
## array_get -> app_expr lbrack . expr rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##
program: NOT WASMI64 LPAREN RPAREN LBRACK WASMI64 THICKARROW
##
## Ends in an error in state: 488.
##
## array_get -> app_expr lbrack expr . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr lbrack expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##
program: WASMI64 DOT ID LBRACK WASMI64 THICKARROW
##
## Ends in an error in state: 614.
##
## array_get -> record_get lbrack expr . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## array_set -> record_get lbrack expr . rbrack equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get lbrack expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##
program: WASMI64 LBRACK UNDERSCORE
##
## Ends in an error in state: 629.
##
## array_get -> simple_expr lbrack . expr rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## array_set -> simple_expr lbrack . expr rbrack equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr lbrack
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 18, spurious reduction of production lbrack -> LBRACK
##
program: WASMI64 LBRACK WASMI64 THICKARROW
##
## Ends in an error in state: 630.
##
## array_get -> simple_expr lbrack expr . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## array_set -> simple_expr lbrack expr . rbrack equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr lbrack expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##
program: WASMI64 LPAREN RPAREN LBRACK WASMI64 THICKARROW
##
## Ends in an error in state: 266.
##
## array_get -> app_expr lbrack expr . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## array_set -> app_expr lbrack expr . rbrack equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr lbrack expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##
program: NOT WASMI64 LBRACK WASMI64 RBRACK LBRACK WASMI64 WHILE
##
## Ends in an error in state: 480.
##
## array_get -> array_get lbrack expr . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get lbrack expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##
program: WASMI64 LBRACK WASMI64 RBRACK LBRACK WASMI64 WHILE
##
## Ends in an error in state: 285.
##
## array_get -> array_get lbrack expr . rbrack [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## array_set -> array_get lbrack expr . rbrack equal expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get lbrack expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##

Expected `]` to complete the array index expression.

program: PRIMITIVE ID COLON EOL TYPEID EQUAL WHILE
##
## Ends in an error in state: 782.
##
## primitive_stmt -> PRIMITIVE id_str COLON eols typ equal . STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE id_str COLON eols typ equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 221, spurious reduction of production equal -> EQUAL
##
program: PRIMITIVE ID COLON TYPEID EQUAL WHILE
##
## Ends in an error in state: 778.
##
## primitive_stmt -> PRIMITIVE id_str COLON typ equal . STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE id_str COLON typ equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 221, spurious reduction of production equal -> EQUAL
##
program: PRIMITIVE THROW COLON EOL TYPEID EQUAL WHILE
##
## Ends in an error in state: 773.
##
## primitive_stmt -> PRIMITIVE prim COLON eols typ equal . STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE prim COLON eols typ equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 221, spurious reduction of production equal -> EQUAL
##
program: PRIMITIVE THROW COLON TYPEID EQUAL WHILE
##
## Ends in an error in state: 769.
##
## primitive_stmt -> PRIMITIVE prim COLON typ equal . STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE prim COLON typ equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 221, spurious reduction of production equal -> EQUAL
##

Expected a string declaring the primitive's internal name.

program: PRIMITIVE ID COLON EOL TYPEID WHEN
##
## Ends in an error in state: 781.
##
## primitive_stmt -> PRIMITIVE id_str COLON eols typ . equal STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE id_str COLON eols typ
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
##
program: PRIMITIVE ID COLON TYPEID WHEN
##
## Ends in an error in state: 777.
##
## primitive_stmt -> PRIMITIVE id_str COLON typ . equal STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE id_str COLON typ
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
##
program: PRIMITIVE THROW COLON EOL TYPEID WHEN
##
## Ends in an error in state: 772.
##
## primitive_stmt -> PRIMITIVE prim COLON eols typ . equal STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE prim COLON eols typ
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
##
program: PRIMITIVE THROW COLON TYPEID WHEN
##
## Ends in an error in state: 768.
##
## primitive_stmt -> PRIMITIVE prim COLON typ . equal STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE prim COLON typ
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
##

Expected `=` followed by a string declaring the primitive's internal name.

program: PRIMITIVE ID WHILE
##
## Ends in an error in state: 775.
##
## primitive_stmt -> PRIMITIVE id_str . COLON typ equal STRING [ SEMI EOL EOF ]
## primitive_stmt -> PRIMITIVE id_str . COLON eols typ equal STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE id_str
##
program: PRIMITIVE THROW WHILE
##
## Ends in an error in state: 766.
##
## primitive_stmt -> PRIMITIVE prim . COLON typ equal STRING [ SEMI EOL EOF ]
## primitive_stmt -> PRIMITIVE prim . COLON eols typ equal STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE prim
##

Expected a type annotation—a colon followed by a type.

program: PRIMITIVE WHILE
##
## Ends in an error in state: 764.
##
## primitive_stmt -> PRIMITIVE . id_str COLON typ equal STRING [ SEMI EOL EOF ]
## primitive_stmt -> PRIMITIVE . id_str COLON eols typ equal STRING [ SEMI EOL EOF ]
## primitive_stmt -> PRIMITIVE . prim COLON typ equal STRING [ SEMI EOL EOF ]
## primitive_stmt -> PRIMITIVE . prim COLON eols typ equal STRING [ SEMI EOL EOF ]
##
## The known suffix of the stack is as follows:
## PRIMITIVE
##

Expected an identifier for the primitive.

program: RECORD TYPEID LBRACE ID COLON ID COMMA EOL WHILE
##
## Ends in an error in state: 835.
##
## lseparated_nonempty_list_inner(comma,data_label) -> lseparated_nonempty_list_inner(comma,data_label) comma . data_label [ RBRACE EOL COMMA ]
## option(comma) -> comma . [ RBRACE EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,data_label) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected another record field definition or an immediate `}` to complete the record declaration.

program: RECORD TYPEID LBRACE ID COLON ID WHILE
##
## Ends in an error in state: 832.
##
## data_labels -> lbrace lseparated_nonempty_list_inner(comma,data_label) . option(comma) rbrace [ SEMI EOL EOF COMMA ]
## lseparated_nonempty_list_inner(comma,data_label) -> lseparated_nonempty_list_inner(comma,data_label) . comma data_label [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lbrace lseparated_nonempty_list_inner(comma,data_label)
##

Expected a comma followed by another record field definition or an immediate `}` to complete the record declaration.

program: RECORD TYPEID LBRACE ID WHILE
##
## Ends in an error in state: 827.
##
## data_label -> simple_id . COLON typ [ RBRACE EOL COMMA ]
## data_label -> simple_id . COLON eols typ [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## simple_id
##
program: RECORD TYPEID LBRACE MUT ID WHILE
##
## Ends in an error in state: 822.
##
## data_label -> MUT simple_id . COLON typ [ RBRACE EOL COMMA ]
## data_label -> MUT simple_id . COLON eols typ [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## MUT simple_id
##

Expected `:` followed by a type.

program: RECORD TYPEID LBRACE MUT ID COLON EOL WHILE
##
## Ends in an error in state: 825.
##
## data_label -> MUT simple_id COLON eols . typ [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## MUT simple_id COLON eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: RECORD TYPEID LBRACE MUT ID COLON WHILE
##
## Ends in an error in state: 823.
##
## data_label -> MUT simple_id COLON . typ [ RBRACE EOL COMMA ]
## data_label -> MUT simple_id COLON . eols typ [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## MUT simple_id COLON
##
program: WASMI64 COLON LPAREN WHILE
##
## Ends in an error in state: 93.
##
## typ -> lparen . tuple_typs rparen [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS AMPAMP AMP ]
## typ -> lparen . typ rparen [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##
program: TYPE TYPEID EQUAL WHILE
##
## Ends in an error in state: 806.
##
## data_declaration -> TYPE TYPEID option(id_vec) equal . typ [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## TYPE TYPEID option(id_vec) equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 221, spurious reduction of production equal -> EQUAL
##

Expected a type.

program: TYPE TYPEID LCARET ID RCARET EQEQ
##
## Ends in an error in state: 805.
##
## data_declaration -> TYPE TYPEID option(id_vec) . equal typ [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## TYPE TYPEID option(id_vec)
##

Expected `=` followed by a type.

program: RECORD TYPEID LBRACE MUT WHILE
##
## Ends in an error in state: 821.
##
## data_label -> MUT . simple_id COLON typ [ RBRACE EOL COMMA ]
## data_label -> MUT . simple_id COLON eols typ [ RBRACE EOL COMMA ]
##
## The known suffix of the stack is as follows:
## MUT
##

Expected an identifier for the record field.

program: RECORD TYPEID LBRACE WHILE
##
## Ends in an error in state: 820.
##
## data_labels -> lbrace . lseparated_nonempty_list_inner(comma,data_label) option(comma) rbrace [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## lbrace
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production lbrace -> LBRACE
##

Expected a comma-separated list of record field declarations.

program: RECORD TYPEID LCARET ID COMMA EOL WHILE
##
## Ends in an error in state: 813.
##
## lseparated_nonempty_list_inner(comma,id_typ) -> lseparated_nonempty_list_inner(comma,id_typ) comma . id_typ [ RCARET EOL COMMA ]
## option(comma) -> comma . [ RCARET EOL ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(comma,id_typ) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##

Expected another type variable or `>` to complete the type arguments.

program: RECORD TYPEID LCARET ID COMMA ID WHILE
##
## Ends in an error in state: 810.
##
## id_vec -> lcaret lseparated_nonempty_list_inner(comma,id_typ) . option(comma) rcaret [ LBRACE EQUAL ]
## lseparated_nonempty_list_inner(comma,id_typ) -> lseparated_nonempty_list_inner(comma,id_typ) . comma id_typ [ RCARET EOL COMMA ]
##
## The known suffix of the stack is as follows:
## lcaret lseparated_nonempty_list_inner(comma,id_typ)
##

Expected a comma followed by more type variables or `>` to complete the type arguments.

program: RECORD TYPEID LCARET ID EOL WHILE
##
## Ends in an error in state: 79.
##
## rcaret -> eols . RCARET [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET LBRACE ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS ARROW AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##

Expected `>` to complete the type arguments.

program: RECORD TYPEID LCARET ID RCARET ISNT
##
## Ends in an error in state: 819.
##
## data_declaration -> RECORD TYPEID option(id_vec) . data_labels [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## RECORD TYPEID option(id_vec)
##

Expected `{` to list record fields.

program: RECORD TYPEID LCARET TYPEID
##
## Ends in an error in state: 808.
##
## id_vec -> lcaret . lseparated_nonempty_list_inner(comma,id_typ) option(comma) rcaret [ LBRACE EQUAL ]
##
## The known suffix of the stack is as follows:
## lcaret
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 73, spurious reduction of production lcaret -> LCARET
##

Expected a comma-separated list of type variables.

program: RECORD TYPEID WHILE
##
## Ends in an error in state: 818.
##
## data_declaration -> RECORD TYPEID . option(id_vec) data_labels [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## RECORD TYPEID
##

Expected a comma-separated list of type variables surrounded by `<`/`>`, or `{` to list record fields.

program: RECORD WHILE
##
## Ends in an error in state: 817.
##
## data_declaration -> RECORD . TYPEID option(id_vec) data_labels [ SEMI EOL EOF COMMA ]
##
## The known suffix of the stack is as follows:
## RECORD
##

Expected a capitalized identifier for the record type.

program: TYPEID DOT EOL WHILE
##
## Ends in an error in state: 152.
##
## id -> lseparated_nonempty_list_inner(dot,TYPEID) DOT eols . non_modid [ THICKARROW STAREQ STAR SLASHEQ SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUSEQ PLUS PIPEPIPE PIPE PERCENTEQ PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS FROM EQUAL EQEQ EOL EOF ELSE DOT DASHEQ DASH COMMA COLON CARET AS AMPAMP AMP ]
## lseparated_nonempty_list_inner(dot,TYPEID) -> lseparated_nonempty_list_inner(dot,TYPEID) DOT eols . TYPEID [ THICKARROW STAREQ STAR SLASHEQ SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUSEQ PLUS PIPEPIPE PIPE PERCENTEQ PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS FROM EQUAL EQEQ EOL EOF ELSE DOT DASHEQ DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(dot,TYPEID) DOT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: TYPEID DOT WHILE
##
## Ends in an error in state: 123.
##
## id -> lseparated_nonempty_list_inner(dot,TYPEID) DOT . non_modid [ THICKARROW STAREQ STAR SLASHEQ SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUSEQ PLUS PIPEPIPE PIPE PERCENTEQ PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS FROM EQUAL EQEQ EOL EOF ELSE DOT DASHEQ DASH COMMA COLON CARET AS AMPAMP AMP ]
## id -> lseparated_nonempty_list_inner(dot,TYPEID) DOT . eols non_modid [ THICKARROW STAREQ STAR SLASHEQ SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUSEQ PLUS PIPEPIPE PIPE PERCENTEQ PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS FROM EQUAL EQEQ EOL EOF ELSE DOT DASHEQ DASH COMMA COLON CARET AS AMPAMP AMP ]
## lseparated_nonempty_list_inner(dot,TYPEID) -> lseparated_nonempty_list_inner(dot,TYPEID) DOT . TYPEID [ THICKARROW STAREQ STAR SLASHEQ SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUSEQ PLUS PIPEPIPE PIPE PERCENTEQ PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS FROM EQUAL EQEQ EOL EOF ELSE DOT DASHEQ DASH COMMA COLON CARET AS AMPAMP AMP ]
## lseparated_nonempty_list_inner(dot,TYPEID) -> lseparated_nonempty_list_inner(dot,TYPEID) DOT . eols TYPEID [ THICKARROW STAREQ STAR SLASHEQ SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUSEQ PLUS PIPEPIPE PIPE PERCENTEQ PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS FROM EQUAL EQEQ EOL EOF ELSE DOT DASHEQ DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lseparated_nonempty_list_inner(dot,TYPEID) DOT
##

Expected an identifier.

program: TYPEID EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 224.
##
## assign_expr -> id_expr equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## id_expr equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: TYPEID STAREQ EOL UNDERSCORE
##
## Ends in an error in state: 310.
##
## assign_expr -> id_expr assign_binop_op eols . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## id_expr assign_binop_op eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: TYPEID STAREQ WHEN
##
## Ends in an error in state: 308.
##
## assign_expr -> id_expr assign_binop_op . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## assign_expr -> id_expr assign_binop_op . eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## id_expr assign_binop_op
##
program: WASMI64 DOT EOL ID EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 627.
##
## record_set -> simple_expr DOT eols simple_id equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT eols simple_id equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: WASMI64 DOT ID DOT EOL ID EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 611.
##
## record_set -> record_get DOT eols simple_id equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get DOT eols simple_id equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: WASMI64 DOT ID DOT ID EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 607.
##
## record_set -> record_get DOT simple_id equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get DOT simple_id equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: WASMI64 DOT ID EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 623.
##
## record_set -> simple_expr DOT simple_id equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT simple_id equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: WASMI64 DOT ID GETS EOL UNDERSCORE
##
## Ends in an error in state: 603.
##
## assign_expr -> record_get GETS eols . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get GETS eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 DOT ID GETS WHEN
##
## Ends in an error in state: 45.
##
## assign_expr -> record_get GETS . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## assign_expr -> record_get GETS . eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get GETS
##
program: WASMI64 DOT ID LBRACK WASMI64 RBRACK EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 616.
##
## array_set -> record_get lbrack expr rbrack equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get lbrack expr rbrack equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: WASMI64 GETS WHEN
##
## Ends in an error in state: 42.
##
## assign_expr -> simple_expr GETS . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## assign_expr -> simple_expr GETS . eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr GETS
##
program: WASMI64 LBRACK WASMI64 RBRACK EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 632.
##
## array_set -> simple_expr lbrack expr rbrack equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr lbrack expr rbrack equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: WASMI64 LPAREN RPAREN DOT EOL ID EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 255.
##
## record_set -> app_expr DOT eols simple_id equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr DOT eols simple_id equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: WASMI64 LPAREN RPAREN DOT ID EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 251.
##
## record_set -> app_expr DOT simple_id equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr DOT simple_id equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: WASMI64 LPAREN RPAREN GETS EOL UNDERSCORE
##
## Ends in an error in state: 246.
##
## assign_expr -> app_expr GETS eols . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr GETS eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 LPAREN RPAREN GETS WHEN
##
## Ends in an error in state: 244.
##
## assign_expr -> app_expr GETS . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## assign_expr -> app_expr GETS . eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr GETS
##
program: WASMI64 LPAREN RPAREN LBRACK WASMI64 RBRACK EQUAL EOL UNDERSCORE
##
## Ends in an error in state: 268.
##
## array_set -> app_expr lbrack expr rbrack equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr lbrack expr rbrack equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 222, spurious reduction of production equal -> EQUAL eols
##
program: WASMI64 LBRACK WASMI64 RBRACK DOT EOL ID EQUAL WHEN
##
## Ends in an error in state: 276.
##
## record_set -> array_get DOT eols simple_id equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get DOT eols simple_id equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 221, spurious reduction of production equal -> EQUAL
##
program: WASMI64 LBRACK WASMI64 RBRACK DOT ID EQUAL WHEN
##
## Ends in an error in state: 272.
##
## record_set -> array_get DOT simple_id equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get DOT simple_id equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 221, spurious reduction of production equal -> EQUAL
##
program: WASMI64 LBRACK WASMI64 RBRACK GETS EOL UNDERSCORE
##
## Ends in an error in state: 240.
##
## assign_expr -> array_get GETS eols . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get GETS eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 LBRACK WASMI64 RBRACK GETS WHEN
##
## Ends in an error in state: 238.
##
## assign_expr -> array_get GETS . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## assign_expr -> array_get GETS . eols expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get GETS
##
program: WASMI64 LBRACK WASMI64 RBRACK LBRACK WASMI64 RBRACK EQUAL WHEN
##
## Ends in an error in state: 287.
##
## array_set -> array_get lbrack expr rbrack equal . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get lbrack expr rbrack equal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 221, spurious reduction of production equal -> EQUAL
##

Expected an expression to assign.

program: WASMI64 AMP WHEN
##
## Ends in an error in state: 572.
##
## binop_expr -> non_stmt_expr AMP . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr AMP . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr AMP
##
program: WASMI64 AMPAMP EOL UNDERSCORE
##
## Ends in an error in state: 582.
##
## binop_expr -> non_stmt_expr AMPAMP eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr AMPAMP eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 AMPAMP WHEN
##
## Ends in an error in state: 580.
##
## binop_expr -> non_stmt_expr AMPAMP . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr AMPAMP . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr AMPAMP
##
program: WASMI64 CARET EOL UNDERSCORE
##
## Ends in an error in state: 576.
##
## binop_expr -> non_stmt_expr CARET eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr CARET eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 CARET WHEN
##
## Ends in an error in state: 570.
##
## binop_expr -> non_stmt_expr CARET . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr CARET . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr CARET
##
program: WASMI64 DASH EOL UNDERSCORE
##
## Ends in an error in state: 526.
##
## binop_expr -> non_stmt_expr DASH eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr DASH eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 DASH WHEN
##
## Ends in an error in state: 524.
##
## binop_expr -> non_stmt_expr DASH . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr DASH . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr DASH
##
program: WASMI64 EQEQ EOL UNDERSCORE
##
## Ends in an error in state: 568.
##
## binop_expr -> non_stmt_expr EQEQ eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr EQEQ eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 EQEQ WHEN
##
## Ends in an error in state: 566.
##
## binop_expr -> non_stmt_expr EQEQ . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr EQEQ . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr EQEQ
##
program: WASMI64 GETS EOL UNDERSCORE
##
## Ends in an error in state: 619.
##
## assign_expr -> simple_expr GETS eols . expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr GETS eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 GREATEREQ EOL UNDERSCORE
##
## Ends in an error in state: 554.
##
## binop_expr -> non_stmt_expr GREATEREQ eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr GREATEREQ eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 GREATEREQ WHEN
##
## Ends in an error in state: 552.
##
## binop_expr -> non_stmt_expr GREATEREQ . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr GREATEREQ . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr GREATEREQ
##
program: WASMI64 IS EOL UNDERSCORE
##
## Ends in an error in state: 564.
##
## binop_expr -> non_stmt_expr IS eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr IS eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 IS WHEN
##
## Ends in an error in state: 562.
##
## binop_expr -> non_stmt_expr IS . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr IS . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr IS
##
program: WASMI64 ISNT EOL UNDERSCORE
##
## Ends in an error in state: 560.
##
## binop_expr -> non_stmt_expr ISNT eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr ISNT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 ISNT WHEN
##
## Ends in an error in state: 558.
##
## binop_expr -> non_stmt_expr ISNT . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr ISNT . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr ISNT
##
program: WASMI64 LCARET EOL UNDERSCORE
##
## Ends in an error in state: 550.
##
## binop_expr -> non_stmt_expr LCARET eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr LCARET eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 LCARET WHEN
##
## Ends in an error in state: 548.
##
## binop_expr -> non_stmt_expr LCARET . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr LCARET . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr LCARET
##
program: WASMI64 LCARETLCARET EOL UNDERSCORE
##
## Ends in an error in state: 528.
##
## binop_expr -> non_stmt_expr LCARETLCARET eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr LCARETLCARET eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 LCARETLCARET WHEN
##
## Ends in an error in state: 522.
##
## binop_expr -> non_stmt_expr LCARETLCARET . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr LCARETLCARET . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr LCARETLCARET
##
program: WASMI64 LESSEQ EOL UNDERSCORE
##
## Ends in an error in state: 546.
##
## binop_expr -> non_stmt_expr LESSEQ eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr LESSEQ eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 LESSEQ WHEN
##
## Ends in an error in state: 544.
##
## binop_expr -> non_stmt_expr LESSEQ . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr LESSEQ . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr LESSEQ
##
program: WASMI64 NOTEQ EOL UNDERSCORE
##
## Ends in an error in state: 556.
##
## binop_expr -> non_stmt_expr NOTEQ eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr NOTEQ eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 NOTEQ WHEN
##
## Ends in an error in state: 542.
##
## binop_expr -> non_stmt_expr NOTEQ . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr NOTEQ . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr NOTEQ
##
program: WASMI64 PERCENT EOL UNDERSCORE
##
## Ends in an error in state: 514.
##
## binop_expr -> non_stmt_expr PERCENT eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr PERCENT eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 PERCENT WHEN
##
## Ends in an error in state: 512.
##
## binop_expr -> non_stmt_expr PERCENT . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr PERCENT . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr PERCENT
##
program: WASMI64 PIPE EOL UNDERSCORE
##
## Ends in an error in state: 578.
##
## binop_expr -> non_stmt_expr PIPE eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr PIPE eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 PIPE WHEN
##
## Ends in an error in state: 540.
##
## binop_expr -> non_stmt_expr PIPE . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr PIPE . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr PIPE
##
program: WASMI64 PIPEPIPE EOL UNDERSCORE
##
## Ends in an error in state: 584.
##
## binop_expr -> non_stmt_expr PIPEPIPE eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr PIPEPIPE eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 PIPEPIPE WHEN
##
## Ends in an error in state: 538.
##
## binop_expr -> non_stmt_expr PIPEPIPE . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr PIPEPIPE . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr PIPEPIPE
##
program: WASMI64 PLUS EOL UNDERSCORE
##
## Ends in an error in state: 520.
##
## binop_expr -> non_stmt_expr PLUS eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr PLUS eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 PLUS WHEN
##
## Ends in an error in state: 518.
##
## binop_expr -> non_stmt_expr PLUS . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr PLUS . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr PLUS
##
program: WASMI64 PLUSPLUS EOL UNDERSCORE
##
## Ends in an error in state: 516.
##
## binop_expr -> non_stmt_expr PLUSPLUS eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr PLUSPLUS eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 PLUSPLUS WHEN
##
## Ends in an error in state: 510.
##
## binop_expr -> non_stmt_expr PLUSPLUS . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr PLUSPLUS . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr PLUSPLUS
##
program: WASMI64 RCARET EOL UNDERSCORE
##
## Ends in an error in state: 536.
##
## binop_expr -> non_stmt_expr RCARET eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr RCARET eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 RCARET RCARET EOL UNDERSCORE
##
## Ends in an error in state: 533.
##
## binop_expr -> non_stmt_expr RCARET RCARET eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr RCARET RCARET eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 RCARET RCARET RCARET EOL UNDERSCORE
##
## Ends in an error in state: 530.
##
## binop_expr -> non_stmt_expr RCARET RCARET RCARET eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr RCARET RCARET RCARET eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 RCARET RCARET RCARET WHEN
##
## Ends in an error in state: 508.
##
## binop_expr -> non_stmt_expr RCARET RCARET RCARET . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr RCARET RCARET RCARET . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr RCARET RCARET RCARET
##
program: WASMI64 RCARET RCARET WHEN
##
## Ends in an error in state: 507.
##
## binop_expr -> non_stmt_expr RCARET RCARET . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr RCARET RCARET . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr RCARET RCARET . RCARET non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr RCARET RCARET . RCARET eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr RCARET RCARET
##
program: WASMI64 RCARET WHEN
##
## Ends in an error in state: 506.
##
## binop_expr -> non_stmt_expr RCARET . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr RCARET . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr RCARET . RCARET non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr RCARET . RCARET eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr RCARET . RCARET RCARET non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr RCARET . RCARET RCARET eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr RCARET
##
program: WASMI64 SLASH EOL UNDERSCORE
##
## Ends in an error in state: 504.
##
## binop_expr -> non_stmt_expr SLASH eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr SLASH eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 SLASH WHEN
##
## Ends in an error in state: 502.
##
## binop_expr -> non_stmt_expr SLASH . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr SLASH . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr SLASH
##
program: WASMI64 STAR EOL UNDERSCORE
##
## Ends in an error in state: 500.
##
## binop_expr -> non_stmt_expr STAR eols . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr STAR eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 STAR WHEN
##
## Ends in an error in state: 61.
##
## binop_expr -> non_stmt_expr STAR . non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## binop_expr -> non_stmt_expr STAR . eols non_stmt_expr [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_stmt_expr STAR
##

Expected an expression on the right side of the operator.

program: WASMI64 COLON EOL WHILE
##
## Ends in an error in state: 118.
##
## annotated_expr -> non_binop_expr COLON eols . typ [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_binop_expr COLON eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##
program: WASMI64 COLON WHILE
##
## Ends in an error in state: 65.
##
## annotated_expr -> non_binop_expr COLON . typ [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
## annotated_expr -> non_binop_expr COLON . eols typ [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## non_binop_expr COLON
##

Expected a type to complete the type annotation.

program: WASMI64 COLON FUN ID ARROW EOL WHILE
##
## Ends in an error in state: 71.
##
## typ -> FUN ID arrow . typ [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN ID arrow
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 70, spurious reduction of production arrow -> ARROW eols
##
program: WASMI64 COLON FUN LPAREN RPAREN ARROW EOL WHILE
##
## Ends in an error in state: 115.
##
## typ -> FUN lparen option(typs) rparen arrow . typ [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN lparen option(typs) rparen arrow
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 70, spurious reduction of production arrow -> ARROW eols
##

Expected a type for the result of the function type.

program: WASMI64 COLON FUN ID WHILE
##
## Ends in an error in state: 68.
##
## typ -> FUN ID . arrow typ [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN ID
##
program: WASMI64 COLON FUN LPAREN RPAREN WHILE
##
## Ends in an error in state: 114.
##
## typ -> FUN lparen option(typs) rparen . arrow typ [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN lparen option(typs) rparen
##

# This error message could never appear, as we only inject the FUN token _because_ there's an arrow
Expected an arrow (->) followed by a type.

program: WASMI64 COLON FUN LPAREN TYPEID RCARET
##
## Ends in an error in state: 113.
##
## typ -> FUN lparen option(typs) . rparen arrow typ [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN lparen option(typs)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
## In state 81, spurious reduction of production lseparated_nonempty_list_inner(comma,typ) -> typ
## In state 87, spurious reduction of production option(comma) ->
## In state 90, spurious reduction of production typs -> lseparated_nonempty_list_inner(comma,typ) option(comma)
## In state 112, spurious reduction of production option(typs) -> typs
##

# This message could never appear as the user will get an unbalanced paren error
Expected `)` to complete the function type parameters.

program: WASMI64 COLON FUN LPAREN WHILE
##
## Ends in an error in state: 111.
##
## typ -> FUN lparen . option(typs) rparen arrow typ [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##

Expected a comma-separated list of types or an immediate `)` for a function type with no arguments.

program: WASMI64 COLON FUN WHILE
##
## Ends in an error in state: 67.
##
## typ -> FUN . ID arrow typ [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS AMPAMP AMP ]
## typ -> FUN . lparen option(typs) rparen arrow typ [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## FUN
##

# This error can't appear as the FUN token wouldn't have been injected.
Expected an identifier for a single-argument function or a comma-separated list of types surrounded by `(`/`)`.

program: WASMI64 COLON LPAREN TYPEID COMMA EOL TYPEID COMMA EOL WHILE
##
## Ends in an error in state: 104.
##
## lseparated_nonempty_list_inner(comma,typ) -> lseparated_nonempty_list_inner(comma,typ) comma . typ [ RPAREN EOL COMMA ]
## tuple_typs -> typ COMMA eols lseparated_nonempty_list_inner(comma,typ) comma . [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## typ COMMA eols lseparated_nonempty_list_inner(comma,typ) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##
program: WASMI64 COLON LPAREN TYPEID COMMA TYPEID COMMA EOL WHILE
##
## Ends in an error in state: 98.
##
## lseparated_nonempty_list_inner(comma,typ) -> lseparated_nonempty_list_inner(comma,typ) comma . typ [ RPAREN EOL COMMA ]
## tuple_typs -> typ COMMA lseparated_nonempty_list_inner(comma,typ) comma . [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## typ COMMA lseparated_nonempty_list_inner(comma,typ) comma
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
##
program: WASMI64 COLON LPAREN TYPEID COMMA WHILE
##
## Ends in an error in state: 96.
##
## tuple_typs -> typ COMMA . [ RPAREN EOL ]
## tuple_typs -> typ COMMA . lseparated_nonempty_list_inner(comma,typ) [ RPAREN EOL ]
## tuple_typs -> typ COMMA . lseparated_nonempty_list_inner(comma,typ) comma [ RPAREN EOL ]
## tuple_typs -> typ COMMA . eols lseparated_nonempty_list_inner(comma,typ) [ RPAREN EOL ]
## tuple_typs -> typ COMMA . eols lseparated_nonempty_list_inner(comma,typ) comma [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## typ COMMA
##

Expected a type or an immediate `)` to complete the tuple type.

program: WASMI64 COLON LPAREN TYPEID COMMA EOL TYPEID WHEN
##
## Ends in an error in state: 103.
##
## lseparated_nonempty_list_inner(comma,typ) -> lseparated_nonempty_list_inner(comma,typ) . comma typ [ RPAREN EOL COMMA ]
## tuple_typs -> typ COMMA eols lseparated_nonempty_list_inner(comma,typ) . [ RPAREN EOL ]
## tuple_typs -> typ COMMA eols lseparated_nonempty_list_inner(comma,typ) . comma [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## typ COMMA eols lseparated_nonempty_list_inner(comma,typ)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
## In state 81, spurious reduction of production lseparated_nonempty_list_inner(comma,typ) -> typ
##
program: WASMI64 COLON LPAREN TYPEID COMMA TYPEID WHEN
##
## Ends in an error in state: 97.
##
## lseparated_nonempty_list_inner(comma,typ) -> lseparated_nonempty_list_inner(comma,typ) . comma typ [ RPAREN EOL COMMA ]
## tuple_typs -> typ COMMA lseparated_nonempty_list_inner(comma,typ) . [ RPAREN EOL ]
## tuple_typs -> typ COMMA lseparated_nonempty_list_inner(comma,typ) . comma [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## typ COMMA lseparated_nonempty_list_inner(comma,typ)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
## In state 81, spurious reduction of production lseparated_nonempty_list_inner(comma,typ) -> typ
##

Expected a comma followed by another type or `)` to complete the tuple type.

program: WASMI64 COLON LPAREN TYPEID COMMA EOL WHILE
##
## Ends in an error in state: 102.
##
## tuple_typs -> typ COMMA eols . lseparated_nonempty_list_inner(comma,typ) [ RPAREN EOL ]
## tuple_typs -> typ COMMA eols . lseparated_nonempty_list_inner(comma,typ) comma [ RPAREN EOL ]
##
## The known suffix of the stack is as follows:
## typ COMMA eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##

Expected a comma-separated list of types.

program: WASMI64 COLON LPAREN TYPEID WHEN
##
## Ends in an error in state: 94.
##
## tuple_typs -> typ . COMMA [ RPAREN EOL ]
## tuple_typs -> typ . COMMA lseparated_nonempty_list_inner(comma,typ) [ RPAREN EOL ]
## tuple_typs -> typ . COMMA lseparated_nonempty_list_inner(comma,typ) comma [ RPAREN EOL ]
## tuple_typs -> typ . COMMA eols lseparated_nonempty_list_inner(comma,typ) [ RPAREN EOL ]
## tuple_typs -> typ . COMMA eols lseparated_nonempty_list_inner(comma,typ) comma [ RPAREN EOL ]
## typ -> lparen typ . rparen [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## lparen typ
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
##

Expected `)` for a grouped type or a comma followed by more types for a tuple type.

program: WASMI64 COLON TYPEID ARROW EOL WHILE
##
## Ends in an error in state: 100.
##
## typ -> data_typ arrow . typ [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## data_typ arrow
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 70, spurious reduction of production arrow -> ARROW eols
##

Expected a type for the result of the function type.

program: WASMI64 COLON TYPEID LCARET EOL WHILE
##
## Ends in an error in state: 75.
##
## data_typ -> type_id lcaret . typs rcaret [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS ARROW AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## type_id lcaret
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 74, spurious reduction of production lcaret -> LCARET eols
##

Expected a comma-separated list of types.

program: WASMI64 COLON TYPEID LCARET TYPEID RPAREN
##
## Ends in an error in state: 76.
##
## data_typ -> type_id lcaret typs . rcaret [ WHEN THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ FROM EQUAL EQEQ EOL EOF ELSE DASH COMMA COLON CARET AS ARROW AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## type_id lcaret typs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production type_id -> lseparated_nonempty_list_inner(dot,TYPEID)
## In state 72, spurious reduction of production data_typ -> type_id
## In state 99, spurious reduction of production typ -> data_typ
## In state 81, spurious reduction of production lseparated_nonempty_list_inner(comma,typ) -> typ
## In state 87, spurious reduction of production option(comma) ->
## In state 90, spurious reduction of production typs -> lseparated_nonempty_list_inner(comma,typ) option(comma)
##

Expected `>` to complete the type.

program: WASMI64 DOT ID LPAREN COMMA EOL WHILE
##
## Ends in an error in state: 442.
##
## app_expr -> record_get lparen option(comma) . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get lparen option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
## In state 264, spurious reduction of production option(comma) -> comma
##
program: WASMI64 DOT ID LPAREN WASMI64 COMMA RBRACK
##
## Ends in an error in state: 445.
##
## app_expr -> record_get lparen lseparated_nonempty_list_inner(comma,expr) option(comma) . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get lparen lseparated_nonempty_list_inner(comma,expr) option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 88, spurious reduction of production comma -> COMMA
## In state 168, spurious reduction of production option(comma) -> comma
##
program: WASMI64 LPAREN COMMA EOL WHILE
##
## Ends in an error in state: 163.
##
## app_expr -> simple_expr lparen option(comma) . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr lparen option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
## In state 264, spurious reduction of production option(comma) -> comma
##
program: WASMI64 LPAREN RPAREN LPAREN COMMA EOL WHILE
##
## Ends in an error in state: 258.
##
## app_expr -> app_expr lparen option(comma) . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr lparen option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
## In state 89, spurious reduction of production comma -> COMMA eols
## In state 264, spurious reduction of production option(comma) -> comma
##
program: WASMI64 LPAREN RPAREN LPAREN WASMI64 COMMA RBRACK
##
## Ends in an error in state: 261.
##
## app_expr -> app_expr lparen lseparated_nonempty_list_inner(comma,expr) option(comma) . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr lparen lseparated_nonempty_list_inner(comma,expr) option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 88, spurious reduction of production comma -> COMMA
## In state 168, spurious reduction of production option(comma) -> comma
##
program: WASMI64 LPAREN WASMI64 COMMA RBRACK
##
## Ends in an error in state: 166.
##
## app_expr -> simple_expr lparen lseparated_nonempty_list_inner(comma,expr) option(comma) . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr lparen lseparated_nonempty_list_inner(comma,expr) option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 88, spurious reduction of production comma -> COMMA
## In state 168, spurious reduction of production option(comma) -> comma
##
program: WASMI64 LBRACK WASMI64 RBRACK LPAREN COMMA WHILE
##
## Ends in an error in state: 279.
##
## app_expr -> array_get lparen option(comma) . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get lparen option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 88, spurious reduction of production comma -> COMMA
## In state 264, spurious reduction of production option(comma) -> comma
##
program: WASMI64 LBRACK WASMI64 RBRACK LPAREN WASMI64 COMMA RBRACK
##
## Ends in an error in state: 282.
##
## app_expr -> array_get lparen lseparated_nonempty_list_inner(comma,expr) option(comma) . rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get lparen lseparated_nonempty_list_inner(comma,expr) option(comma)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 88, spurious reduction of production comma -> COMMA
## In state 168, spurious reduction of production option(comma) -> comma
##

Expected `)` to complete the function call.

program: WASMI64 DOT ID LPAREN UNDERSCORE
##
## Ends in an error in state: 441.
##
## app_expr -> record_get lparen . option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## app_expr -> record_get lparen . lseparated_nonempty_list_inner(comma,expr) option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## record_get lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##
program: WASMI64 LPAREN RPAREN LPAREN UNDERSCORE
##
## Ends in an error in state: 257.
##
## app_expr -> app_expr lparen . option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## app_expr -> app_expr lparen . lseparated_nonempty_list_inner(comma,expr) option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## app_expr lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##
program: WASMI64 LPAREN UNDERSCORE
##
## Ends in an error in state: 162.
##
## app_expr -> simple_expr lparen . option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## app_expr -> simple_expr lparen . lseparated_nonempty_list_inner(comma,expr) option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## simple_expr lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##
program: WASMI64 LBRACK WASMI64 RBRACK LPAREN WHEN
##
## Ends in an error in state: 278.
##
## app_expr -> array_get lparen . option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## app_expr -> array_get lparen . lseparated_nonempty_list_inner(comma,expr) option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## array_get lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##

Expected a comma-separated list of expressions or `)` to complete the function call.

program: WASMI64 DOT ID LPAREN WASMI64 THICKARROW
##
## Ends in an error in state: 444.
##
## app_expr -> record_get lparen lseparated_nonempty_list_inner(comma,expr) . option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## lseparated_nonempty_list_inner(comma,expr) -> lseparated_nonempty_list_inner(comma,expr) . comma expr [ RPAREN EOL COMMA ]
##
## The known suffix of the stack is as follows:
## record_get lparen lseparated_nonempty_list_inner(comma,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 263, spurious reduction of production lseparated_nonempty_list_inner(comma,expr) -> expr
##
program: WASMI64 LPAREN RPAREN LPAREN WASMI64 THICKARROW
##
## Ends in an error in state: 260.
##
## app_expr -> app_expr lparen lseparated_nonempty_list_inner(comma,expr) . option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## lseparated_nonempty_list_inner(comma,expr) -> lseparated_nonempty_list_inner(comma,expr) . comma expr [ RPAREN EOL COMMA ]
##
## The known suffix of the stack is as follows:
## app_expr lparen lseparated_nonempty_list_inner(comma,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 263, spurious reduction of production lseparated_nonempty_list_inner(comma,expr) -> expr
##
program: WASMI64 LPAREN WASMI64 THICKARROW
##
## Ends in an error in state: 165.
##
## app_expr -> simple_expr lparen lseparated_nonempty_list_inner(comma,expr) . option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## lseparated_nonempty_list_inner(comma,expr) -> lseparated_nonempty_list_inner(comma,expr) . comma expr [ RPAREN EOL COMMA ]
##
## The known suffix of the stack is as follows:
## simple_expr lparen lseparated_nonempty_list_inner(comma,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 263, spurious reduction of production lseparated_nonempty_list_inner(comma,expr) -> expr
##
program: WASMI64 LBRACK WASMI64 RBRACK LPAREN WASMI64 WHILE
##
## Ends in an error in state: 281.
##
## app_expr -> array_get lparen lseparated_nonempty_list_inner(comma,expr) . option(comma) rparen [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LPAREN LESSEQ LCARETLCARET LCARET LBRACK ISNT IS GREATEREQ GETS EQEQ EOL EOF ELSE DOT DASH COMMA COLON CARET AMPAMP AMP ]
## lseparated_nonempty_list_inner(comma,expr) -> lseparated_nonempty_list_inner(comma,expr) . comma expr [ RPAREN EOL COMMA ]
##
## The known suffix of the stack is as follows:
## array_get lparen lseparated_nonempty_list_inner(comma,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
## In state 263, spurious reduction of production lseparated_nonempty_list_inner(comma,expr) -> expr
##

Expected a comma followed by more expressions or `)` to complete the function call.

program: WHILE LPAREN UNDERSCORE
##
## Ends in an error in state: 7.
##
## while_expr -> WHILE lparen . expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## WHILE lparen
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production lparen -> LPAREN
##

Expected an expression for the while loop condition.

program: WHILE LPAREN WASMI64 THICKARROW
##
## Ends in an error in state: 761.
##
## while_expr -> WHILE lparen expr . rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## WHILE lparen expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 41, spurious reduction of production non_assign_expr -> simple_expr
## In state 120, spurious reduction of production non_binop_expr -> non_assign_expr
## In state 64, spurious reduction of production annotated_expr -> non_binop_expr
## In state 248, spurious reduction of production non_stmt_expr -> annotated_expr
## In state 60, spurious reduction of production expr -> non_stmt_expr
##

Expected `)` after the while loop condition.

program: WHILE WHILE
##
## Ends in an error in state: 1.
##
## while_expr -> WHILE . lparen expr rparen block [ THICKARROW STAR SLASH SEMI RPAREN RCARET RBRACK RBRACE PLUSPLUS PLUS PIPEPIPE PIPE PERCENT NOTEQ LESSEQ LCARETLCARET LCARET ISNT IS GREATEREQ EQEQ EOL EOF ELSE DASH COMMA COLON CARET AMPAMP AMP ]
##
## The known suffix of the stack is as follows:
## WHILE
##

Expected `(` followed by an expression for the while loop condition.

program: MATCH LPAREN FLOAT32 RPAREN LBRACE NUMBER_INT EOL WHILE
##
## Ends in an error in state: 750.
##
## when_guard -> eols . WHEN expr [ THICKARROW ]
##
## The known suffix of the stack is as follows:
## eols
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3, spurious reduction of production nonempty_list(eol) -> EOL
## In state 5, spurious reduction of production eols -> nonempty_list(eol)
##

Expected `=>` followed by an expression or a branch guard—the keyword `when` followed by an expression.
