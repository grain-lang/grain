opam-version: "2.0"
maintainer: "Spiros Eliopoulos <spiros@inhabitedtype.com>"
authors: [ "Spiros Eliopoulos <spiros@inhabitedtype.com>" ]
license: "BSD-3-clause"
homepage: "https://github.com/inhabitedtype/bigstringaf"
bug-reports: "https://github.com/inhabitedtype/bigstringaf/issues"
dev-repo: "git+https://github.com/inhabitedtype/bigstringaf.git"
build: [
  ["dune" "subst"] {dev}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
]
depends: [
  "dune" {>= "3.0"}
  "dune-configurator" {>= "3.0"}
  "alcotest" {with-test}
  "ocaml" {>= "4.08.0"}
]
conflicts: [
  "mirage-xen" {< "6.0.0"}
  "ocaml-freestanding"
  "js_of_ocaml" {< "3.5.0"}
]
synopsis: "Bigstring intrinsics and fast blits based on memcpy/memmove"
description: """
Bigstring intrinsics and fast blits based on memcpy/memmove

The OCaml compiler has a bunch of intrinsics for Bigstrings, but they're not
widely-known, sometimes misused, and so programs that use Bigstrings are slower
than they have to be. And even if a library got that part right and exposed the
intrinsics properly, the compiler doesn't have any fast blits between
Bigstrings and other string-like types.

So here they are. Go crazy.
"""
url {
  src: "https://github.com/inhabitedtype/bigstringaf/archive/0.9.1.tar.gz"
  checksum: "md5=909fdc277cf03096a35b565325d5314a"
}
